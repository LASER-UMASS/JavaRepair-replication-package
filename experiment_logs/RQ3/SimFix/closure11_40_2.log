java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 482b7676 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Run post-checkout hook..................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 482b7676:bbf1b138..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Closure-11b..................................... OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 2
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testIssue810
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2
PURIFY IS FALSE
=================================================
Project : closure_11	start : 19/10/18 02:09

Field type inconsistancy 'THIS' with types : Token and int
Field type inconsistancy 'SUPER' with types : SimpleReference<SimpleSlot> and FunctionInjector.Reference
Variable type inconsistancy of 'name' in method 'visit,NodeTraversal,Node,Node' with types : String and Name
Variable type inconsistancy of 'start' in method 'parseRegExp,String,String' with types : int and char
Variable type inconsistancy of 'end' in method 'parseRegExp,String,String' with types : int and char
Field type inconsistancy 'type' with types : JSType and Type
Field type inconsistancy 'errors' with types : List<JSError> and JSError[]
readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/closure/11.txt#ATTEMPTS: 2

# FAILING TESTS: 2
TIMEOUT : 18000000
===========
locations= [<com.google.javascript.jscomp.TypedScopeCreator,1275>, <com.google.javascript.jscomp.TypedScopeCreator,1320>, <com.google.javascript.jscomp.TypedScopeCreator,1493>, <com.google.javascript.jscomp.TypeInference,535>, <com.google.javascript.jscomp.TypeInference,1245>, <com.google.javascript.jscomp.TypeInference,1246>, <com.google.javascript.jscomp.TypeInference,1252>, <com.google.javascript.jscomp.TypeCheck,486>, <com.google.javascript.jscomp.TypeCheck,487>, <com.google.javascript.jscomp.TypeCheck,921>, <com.google.javascript.rhino.jstype.JSType,274>, <com.google.javascript.rhino.jstype.JSType,575>, <com.google.javascript.rhino.jstype.JSType,576>, <com.google.javascript.rhino.jstype.JSType,580>, <com.google.javascript.rhino.Node,1581>, <com.google.javascript.rhino.Node,1596>, <com.google.javascript.rhino.Node,1616>, <com.google.javascript.rhino.Node,2366>, <com.google.javascript.jscomp.parsing.IRFactory,1222>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,219>, <com.google.javascript.jscomp.parsing.IRFactory,735>, <com.google.javascript.jscomp.NodeUtil,3077>, <com.google.javascript.jscomp.Scope,440>, <com.google.javascript.rhino.jstype.FunctionType,347>, <com.google.javascript.rhino.jstype.NoObjectType,120>, <com.google.javascript.rhino.jstype.NoObjectType,138>, <com.google.javascript.rhino.jstype.NoObjectType,144>, <com.google.javascript.rhino.jstype.NoObjectType,151>, <com.google.javascript.rhino.jstype.NoObjectType,161>, <com.google.javascript.rhino.jstype.NoObjectType,171>, <com.google.javascript.jscomp.TypedScopeCreator,1530>, <com.google.javascript.jscomp.TypedScopeCreator,1537>, <com.google.javascript.jscomp.TypedScopeCreator,1623>, <com.google.javascript.jscomp.TypedScopeCreator,1628>, <com.google.javascript.jscomp.TypedScopeCreator,1629>, <com.google.javascript.jscomp.TypedScopeCreator,1631>, <com.google.javascript.jscomp.TypedScopeCreator,1630>, <com.google.javascript.jscomp.TypedScopeCreator,1638>, <com.google.javascript.jscomp.TypedScopeCreator,1640>, <com.google.javascript.jscomp.TypedScopeCreator,1642>, <com.google.javascript.jscomp.TypeInference,304>, <com.google.javascript.jscomp.TypeInference,305>, <com.google.javascript.jscomp.TypeInference,545>, <com.google.javascript.jscomp.TypeInference,550>, <com.google.javascript.jscomp.TypeInference,852>, <com.google.javascript.jscomp.TypeInference,857>, <com.google.javascript.jscomp.TypeInference,858>, <com.google.javascript.jscomp.TypeInference,862>, <com.google.javascript.jscomp.TypeInference,864>, <com.google.javascript.jscomp.TypeInference,1203>, <com.google.javascript.jscomp.LinkedFlowScope,105>, <com.google.javascript.jscomp.LinkedFlowScope,106>, <com.google.javascript.jscomp.LinkedFlowScope,107>, <com.google.javascript.jscomp.LinkedFlowScope,108>, <com.google.javascript.jscomp.LinkedFlowScope,109>, <com.google.javascript.jscomp.LinkedFlowScope,117>, <com.google.javascript.jscomp.LinkedFlowScope,126>, <com.google.javascript.rhino.jstype.SimpleSlot,58>, <com.google.javascript.rhino.jstype.SimpleSlot,59>, <com.google.javascript.rhino.jstype.SimpleSlot,60>, <com.google.javascript.rhino.jstype.SimpleSlot,61>, <com.google.javascript.rhino.jstype.SimpleSlot,62>, <com.google.javascript.jscomp.LinkedFlowScope,371>, <com.google.javascript.jscomp.LinkedFlowScope,372>, <com.google.javascript.jscomp.LinkedFlowScope,373>, <com.google.javascript.jscomp.TypedScopeCreator,1715>, <com.google.javascript.jscomp.TypedScopeCreator,1716>, <com.google.javascript.jscomp.TypedScopeCreator,1718>, <com.google.javascript.jscomp.TypedScopeCreator,1720>, <com.google.javascript.jscomp.TypedScopeCreator,1730>, <com.google.javascript.jscomp.TypedScopeCreator,1735>, <com.google.javascript.jscomp.TypedScopeCreator,1738>, <com.google.javascript.jscomp.TypeCheck,320>, <com.google.javascript.jscomp.TypeCheck,322>, <com.google.javascript.jscomp.NodeUtil,3037>, <com.google.javascript.jscomp.TypedScopeCreator,356>, <com.google.javascript.jscomp.TypedScopeCreator,357>, <com.google.javascript.jscomp.TypedScopeCreator,358>, <com.google.javascript.jscomp.TypedScopeCreator,362>, <com.google.javascript.jscomp.TypedScopeCreator,1795>, <com.google.javascript.jscomp.TypedScopeCreator,1796>, <com.google.javascript.jscomp.TypeCheck,533>, <com.google.javascript.jscomp.TypeCheck,534>, <com.google.javascript.jscomp.TypeCheck,535>, <com.google.javascript.jscomp.TypeCheck,1429>, <com.google.javascript.jscomp.TypeCheck,1430>, <com.google.javascript.jscomp.TypeCheck,1431>, <com.google.javascript.jscomp.TypeCheck,1433>, <com.google.javascript.jscomp.TypeCheck,1435>, <com.google.javascript.jscomp.TypeCheck,1436>, <com.google.javascript.jscomp.TypeCheck,1437>, <com.google.javascript.jscomp.TypeCheck,1438>, <com.google.javascript.jscomp.TypeCheck,1440>, <com.google.javascript.jscomp.TypeCheck,1441>, <com.google.javascript.jscomp.TypeCheck,1442>, <com.google.javascript.jscomp.TypeCheck,1445>, <com.google.javascript.jscomp.TypeCheck,1446>, <com.google.javascript.jscomp.TypeCheck,1453>, <com.google.javascript.jscomp.TypeCheck,1454>, <com.google.javascript.jscomp.SyntacticScopeCreator,128>, <com.google.javascript.jscomp.SyntacticScopeCreator,129>, <com.google.javascript.jscomp.SyntacticScopeCreator,130>, <com.google.javascript.jscomp.SyntacticScopeCreator,131>, <com.google.javascript.jscomp.SyntacticScopeCreator,132>, <com.google.javascript.jscomp.SyntacticScopeCreator,133>, <com.google.javascript.jscomp.SyntacticScopeCreator,134>, <com.google.javascript.rhino.Node,540>, <com.google.javascript.rhino.Node,1405>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,269>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,270>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,271>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,272>, <com.google.javascript.jscomp.parsing.IRFactory,1070>, <com.google.javascript.jscomp.parsing.IRFactory,1075>, <com.google.javascript.jscomp.parsing.IRFactory,1076>, <com.google.javascript.jscomp.parsing.IRFactory,1077>, <com.google.javascript.jscomp.parsing.IRFactory,1078>, <com.google.javascript.jscomp.parsing.IRFactory,1079>, <com.google.javascript.jscomp.parsing.IRFactory,1084>, <com.google.javascript.jscomp.parsing.IRFactory,1085>, <com.google.javascript.jscomp.parsing.IRFactory,1086>, <com.google.javascript.jscomp.parsing.IRFactory,1087>, <com.google.javascript.jscomp.parsing.IRFactory,1089>, <com.google.javascript.jscomp.NodeUtil,3032>, <com.google.javascript.jscomp.NodeUtil,3034>, <com.google.javascript.jscomp.NodeUtil,3036>, <com.google.javascript.jscomp.TypedScopeCreator,535>, <com.google.javascript.jscomp.TypedScopeCreator,536>, <com.google.javascript.jscomp.TypedScopeCreator,736>, <com.google.javascript.jscomp.TypedScopeCreator,737>, <com.google.javascript.jscomp.TypedScopeCreator,738>, <com.google.javascript.jscomp.TypedScopeCreator,747>, <com.google.javascript.jscomp.TypedScopeCreator,748>, <com.google.javascript.jscomp.TypedScopeCreator,751>, <com.google.javascript.jscomp.TypedScopeCreator,788>, <com.google.javascript.jscomp.TypedScopeCreator,791>, <com.google.javascript.jscomp.TypedScopeCreator,792>, <com.google.javascript.jscomp.TypedScopeCreator,797>, <com.google.javascript.jscomp.TypedScopeCreator,798>, <com.google.javascript.jscomp.TypeInference,386>, <com.google.javascript.jscomp.TypeInference,387>, <com.google.javascript.jscomp.TypeInference,467>, <com.google.javascript.jscomp.TypeInference,468>, <com.google.javascript.jscomp.TypeInference,480>, <com.google.javascript.jscomp.TypeInference,481>, <com.google.javascript.jscomp.TypeInference,484>, <com.google.javascript.jscomp.TypeInference,487>, <com.google.javascript.jscomp.TypeInference,602>, <com.google.javascript.jscomp.TypeInference,603>, <com.google.javascript.jscomp.TypeInference,605>, <com.google.javascript.jscomp.ControlFlowAnalysis,352>, <com.google.javascript.jscomp.ControlFlowAnalysis,353>, <com.google.javascript.jscomp.ControlFlowAnalysis,670>, <com.google.javascript.jscomp.ControlFlowAnalysis,671>, <com.google.javascript.jscomp.ControlFlowAnalysis,672>, <com.google.javascript.jscomp.ControlFlowAnalysis,930>, <com.google.javascript.jscomp.SourceFile,81>, <com.google.javascript.jscomp.SourceFile,60>, <com.google.javascript.jscomp.SourceFile,67>, <com.google.javascript.jscomp.SourceFile,70>, <com.google.javascript.jscomp.SourceFile,72>, <com.google.javascript.jscomp.SourceFile,82>, <com.google.javascript.jscomp.SourceFile,85>, <com.google.javascript.jscomp.SourceFile,86>, <com.google.javascript.jscomp.SourceFile,132>, <com.google.javascript.jscomp.SourceFile,148>, <com.google.javascript.jscomp.SourceFile,149>, <com.google.javascript.jscomp.SourceFile,156>, <com.google.javascript.jscomp.SourceFile,157>, <com.google.javascript.jscomp.SourceFile,175>, <com.google.javascript.jscomp.SourceFile,181>, <com.google.javascript.jscomp.SourceFile,186>, <com.google.javascript.jscomp.SourceFile,187>, <com.google.javascript.jscomp.SourceFile,323>, <com.google.javascript.jscomp.SourceFile,355>, <com.google.javascript.jscomp.SourceFile,368>, <com.google.javascript.jscomp.SourceFile,365>, <com.google.javascript.jscomp.SourceFile,366>, <com.google.javascript.jscomp.SourceFile,391>, <com.google.javascript.jscomp.SourceFile,422>, <com.google.javascript.jscomp.SourceFile,423>, <com.google.javascript.jscomp.SourceFile,424>, <com.google.javascript.jscomp.SourceFile,425>, <com.google.javascript.jscomp.SourceMap,76>, <com.google.javascript.jscomp.SourceMap,79>, <com.google.javascript.jscomp.SourceMap,86>, <com.google.javascript.jscomp.SourceMap,76>, <com.google.javascript.jscomp.AbstractCompiler,40>, <com.google.javascript.jscomp.AbstractCompiler,44>, <com.google.javascript.jscomp.AbstractCompiler,275>, <com.google.javascript.jscomp.AbstractCompiler,41>, <com.google.javascript.jscomp.DiagnosticType,97>, <com.google.javascript.jscomp.DiagnosticType,98>, <com.google.javascript.jscomp.DiagnosticType,99>, <com.google.javascript.jscomp.DiagnosticType,100>, <com.google.javascript.jscomp.DiagnosticType,102>, <com.google.javascript.jscomp.DiagnosticType,103>, <com.google.javascript.jscomp.DiagnosticType,54>, <com.google.javascript.jscomp.DiagnosticType,65>, <com.google.javascript.jscomp.DiagnosticType,77>]
======================com.google.javascript.jscomp.TypedScopeCreator,1275
========
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSDocInfo().getType().evaluate(scope,typeRegistry);
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getFirstChild().getNext().getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isObjectLit()){
return secondClause.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isQualifiedName()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(info);
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(info.hasEnumParameterType());
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(info);
if(rValue!=null&&rValue.isQualifiedName()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(info.hasEnumParameterType());
if(rValue!=null&&rValue.isQualifiedName()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(info);
Preconditions.checkState(info.hasEnumParameterType());
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(info);
Preconditions.checkState(info.hasEnumParameterType());
if(rValue!=null&&rValue.isQualifiedName()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getParent()!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.getBestLValueName(NodeUtil.getBestLValue(lValue))==null){
return null;
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.getBestLValueName(NodeUtil.getBestLValue(lValue))==null){
return null;
}
if(lValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.getBestLValueName(NodeUtil.getBestLValue(lValue))==null){
return null;
}
if(rValue.getParent()!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue.getJSType()!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(definitionSite.inExterns){
return false;
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue==null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!SimpleDefinitionFinder.isSimpleFunctionDeclaration(rValue)){
return true;
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(arg!=null&&arg.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&rValue.getJSType().isFunctionType()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.getJSType().isFunctionType()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(arg!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&arg.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isObjectLit()){
return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expr!=null&&expr.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expr!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&expr.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isObjectLit()){
return n.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisType!=null&&rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rhsValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oldParameterType!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isQualifiedName()&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info==null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&parent.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.getJSType()==null&&rValue.isFunction()){
varType=parent.getJSType();
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstArgument!=null&&firstArgument.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstArgument!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&firstArgument.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&secondArgument.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent!=null&&parent.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(greatGramps!=null&&greatGramps.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(greatGramps!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&greatGramps.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name!=null&&name.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&name.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(ownerName!=null&&ownerName!=null);
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isGetProp()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&receiver.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&n.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue!=null&&lValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&lValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue==null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue==null&&lValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue==null&&lValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(createCheckTypeCallNode(lValue.getJSType(),rValue.cloneTree())==null){
rValue=paramName.getNext();
continue;
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.getParent().isExprResult()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.getParent().isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.getLastChild().getString().equals("prototype")){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue.getJSType().toMaybeFunctionType()!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
node=addMarker(lValue.getJSType().toMaybeFunctionType(),nodeToInsertAfter,null);
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isString()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&left.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=getJSType(rValue);
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=getJSType(lValue);
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lValue.isObjectLit());
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!rValue.isAssign()){
return false;
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isVar()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&objectToLoopOver.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(grandparent!=null&&grandparent.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isScript()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(grandparent!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&grandparent.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getBestJSDocInfo(rValue)==null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&node.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null){
lValue.setJSType(type);
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.lValue=rootNode;
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(scope!=scope&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=scope&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(target!=null&&target.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(target!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&target.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&lValue.isExprResult()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerNode!=null&&ownerNode.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isThis()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerNode!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&ownerNode.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue.replaceChild(node,NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),String.format("%s.call",rValue.getQualifiedName()),callee,"goog.base"));
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(node.getJSDocInfo()!=null&&rValue.isFunction()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node.getJSDocInfo()!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&value.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lValue.isObjectLit());
if(rValue!=null&&rValue.isFunction()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getJSType(lValue).dereference()==null?null:objType.getIndexType()!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.getLastChild().isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&definition.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!getJSType(lValue).isEnumType()){
return ;
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getTypeDeprecationInfo(type)!=null){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getTypeDeprecationInfo(type)!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.getChildAtIndex(1).isString()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.getChildAtIndex(1).isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&lhs.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getPropertyDeprecationInfo(ObjectType.cast(dereference(rValue.getFirstChild().getJSType())),rValue.getLastChild().getString())!=null){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getPropertyDeprecationInfo(ObjectType.cast(dereference(rValue.getFirstChild().getJSType())),rValue.getLastChild().getString())!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.getLastChild().isQualifiedName()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isUnscopedQualifiedName()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.getFirstChild().isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
rValue.getFirstChild().setJSType(thisType);
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&(rValue.getLastChild().isName()||name.isString())){
thisType.defineDeclaredProperty(name.getString(),jsType,rValue);
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&(secondClause.getJSType() instanceof EnumType)){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()!=null&&secondClause.getJSType()!=null){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()!=null&&!(secondClause.isVar()&&!parent.hasOneChild())){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.getJSType()==null&&secondClause.isFunction()){
varType=parent.getJSType();
}
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&!JSType.isEquivalent(type,secondClause.getJSType())){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.isFunction()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.isEmptyType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=getJSType(secondClause);
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=getJSType(lValue);
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getJSType(bind.target).restrictByNotNullOrUndefined().toMaybeFunctionType()==null){
return ;
}
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return normalizeClassType(lValue.getJSType());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(createCheckTypeCallNode(lValue.getJSType(),secondClause.cloneTree())==null){
secondClause=paramName.getNext();
continue;
}
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisType!=null&&secondClause!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisType!=null&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
getSubTypes(secondClause.getConstructorType().getJSType(),Sets.newHashSet());
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=type.getGreatestSubtype(type);
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&lValue==secondClause.getFirstChild()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type!=null){
lValue.setJSType(type);
}
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&(secondClause.getFirstChild().isFunction())){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()!=null&&!lValue.isGetProp()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()==null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()!=null&&!lValue.isInc()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&lValue.getFirstChild()==secondClause&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()!=secondClause&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()==null&&!lValue.isInc()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&lValue.getFirstChild()==secondClause&&!lValue.isInc()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()!=null&&type.getInstanceType()!=null){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&!type.isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&secondClause.getScope()!=secondClause.getScope().getVar(lValue.getQualifiedName()).getScope()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&namesMatch){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getTypeOfThis().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause!=null&&!secondClause.isUnknownType()&&!secondClause.isEmptyType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause!=null&&!retType.isUnknownType()&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause!=null&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause!=null&&secondClause.getJSType()!=null&&!secondClause.isEmptyType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.isNativeObjectType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(arg.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expr.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rhs.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=calledFn.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getFirstChild().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
info=rValue.getJSDocInfo();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()==null&&secondClause.isFunction()){
varType=parent.getJSType();
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()==null||info==null){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
info=rValue.getJSDocInfo();
if(parent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getNext().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.toMaybeFunctionType().getReturnType()==null){
returnType=getNativeType(VOID_TYPE);
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(rValue.getFirstChild()==null){
actualReturnType=getNativeType(VOID_TYPE);
valueNode=rValue;
}else {
actualReturnType=getJSType(rValue.getFirstChild());
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.toMaybeFunctionType().getReturnType()==null){
returnType=getNativeType(VOID_TYPE);
}
if(rValue.getFirstChild()==null){
actualReturnType=getNativeType(VOID_TYPE);
valueNode=rValue;
}else {
actualReturnType=getJSType(rValue.getFirstChild());
}

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getFirstChild().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isOr()){
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lhs.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(secondClause==firstClause.getFirstChild()&&parent.getChildCount()==2&&expr.getNext().isName()&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(secondClause==firstClause.getFirstChild()&&parent.getChildCount()==2&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iArgument.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
inferPropertyTypesToMatchConstraint(getJSType(secondClause),getJSType(node));
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(property.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(rValue.isName());
if(parent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
return "";
}else if(type.isFunctionType()){
return getFunctionAnnotation(secondClause);
}else if(type.isEnumType()){
return "/** @enum {"+type.toMaybeEnumType().getElementsType().toAnnotationString();
}else if(!type.isUnknownType()&&!type.isEmptyType()){
return "/** @type {"+node.getJSType().toAnnotationString();
}else {
return "";
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getFirstChild().isOr()){
Node firstClause=rValue.getFirstChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(left.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause=getJSType(secondClause);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=getJSType(rValue);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
valueType=firstClause.getJSType();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=assign.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isExprAssign(node.getFirstChild())){
return null;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause==null){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isCall()&&parent.getFirstChild()==rValue){
return true;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isGet(secondClause)&&rValue==parent.getFirstChild()&&name.getNext().isString()&&name.getNext().getString().equals("call")){
Node firstClause=name.getAncestor(2);
if(gramps.isCall()&&gramps.getFirstChild()==parent){
return true;
}
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstArgument.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondArgument.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
parent=secondClause.getFirstChild().getQualifiedName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(key.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(right.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(secondClause.isAssign());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isOr()){
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nameNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null||qName.isEmpty()){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objlit.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
rightType=getNativeType(UNKNOWN_TYPE);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Preconditions.checkState(allowObjectCallDecomposing(),"Object method calls can not be decomposed.");
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
state.sideEffects=true;
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
parent=lValue;
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Preconditions.checkState(allowObjectCallDecomposing(),"Object method calls can not be decomposed.");
state.sideEffects=true;
parent=lValue;

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(receiver.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=ast1.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getFirstChild().getFirstChild().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.getFirstChild().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(secondClause.isName()||n.isGetProp());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callTarget.isOr()){
Node firstClause=callTarget.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callTarget.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=callTarget.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&firstClause.getJSType()!=null){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(object.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(scopeFuncParent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=firstClause.getParent().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=firstClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isExprAssign(rValue)){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isOr()){
Node firstClause=secondClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=secondClause.getFirstChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=secondClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
add(getTypeAnnotation(lValue.getFirstChild().getLastChild()));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isFunction());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause==null){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&firstClause.getInstanceType()!=null){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
scope.declareSlot(rValue.getFirstChild().getString(),n,firstClause);
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.getFirstChild().getFirstChild().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(current.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.setJSType(rValue.getJSType());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.setJSDocInfo(new JSDocInfo());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(function.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&parent.isName()){
Node secondClause=parent.getParent();
if(gramps!=null&&gramps.isVar()){
return false;
}
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Preconditions.checkState(secondClause.isName());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.addChildToBack(firstClause.getLastChild().detachFromParent());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.addChildToBack(secondClause.detachFromParent());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
redeclaration=true;
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Preconditions.checkState(secondClause.isName());
secondClause.addChildToBack(firstClause.getLastChild().detachFromParent());
rValue.addChildToBack(secondClause.detachFromParent());
redeclaration=true;

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=key.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.removeChild(secondClause);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
key=secondClause.getNext();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.removeChild(secondClause);
key=secondClause.getNext();
lValue.reportCodeChange();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dest.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(candidateDefinition.isOr()){
Node firstClause=candidateDefinition.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(candidateDefinition.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=candidateDefinition.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.putBooleanProp(Node.IS_NAMESPACE,true);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
if(firstClause.isName()){
Node firstClause.getNext()=firstClause.getNext();
secondClause.removeChild(firstClause);
secondClause.removeChild(firstClause.getNext());
firstClause.addChildToFront(firstClause.getNext());
Node IR.var(firstClause)=IR.var(firstClause);
IR.var(firstClause).copyInformationFrom(rValue);
rValue.getParent().replaceChild(candidateDefinition,IR.var(firstClause));
firstClause.setJSDocInfo(secondClause.getJSDocInfo());
lValue.reportCodeChange();
replacementNode=IR.var(firstClause);
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.putBooleanProp(Node.IS_NAMESPACE,true);
if(firstClause.isName()){
Node firstClause.getNext()=firstClause.getNext();
secondClause.removeChild(firstClause);
secondClause.removeChild(firstClause.getNext());
firstClause.addChildToFront(firstClause.getNext());
Node IR.var(firstClause)=IR.var(firstClause);
IR.var(firstClause).copyInformationFrom(rValue);
rValue.getParent().replaceChild(candidateDefinition,IR.var(firstClause));
firstClause.setJSDocInfo(secondClause.getJSDocInfo());
lValue.reportCodeChange();
replacementNode=IR.var(firstClause);
}

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getFirstChild().isOr()){
rValue.putBooleanProp(Node.IS_NAMESPACE,true);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
Node firstClause=lhs.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.isName()){
var=scope.getVar(firstClause.getString());
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(var.scope!=scope){
secondClause.setTaintsUnknown();
}else {
secondClause.addTaintedLocalObject(null);
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.isName()){
var=scope.getVar(firstClause.getString());
}
if(var.scope!=scope){
secondClause.setTaintsUnknown();
}else {
secondClause.addTaintedLocalObject(null);
}

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(typeArray.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getParent().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=subtree.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
if(!secondClause.isName()){
return lValue;
}
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if((firstClause!=null)&&(firstClause.isString()||firstClause.isNumber())){
if(secondClause.getString().equals("parseInt")||secondClause.getString().equals("parseFloat")){
subtree=tryFoldParseNumber(lValue,secondClause.getString(),firstClause);
}
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(!secondClause.isName()){
return lValue;
}
if((firstClause!=null)&&(firstClause.isString()||firstClause.isNumber())){
if(secondClause.getString().equals("parseInt")||secondClause.getString().equals("parseFloat")){
subtree=tryFoldParseNumber(lValue,secondClause.getString(),firstClause);
}
}

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getFirstChild().isOr()){
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rhsValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isCall()){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerName.equals(firstClause.getFirstChild().getString())){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.mayHaveSideEffects(firstClause.getNext())||NodeUtil.canBeSideEffected(rhs)){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nameArg.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getQualifiedName()==null){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=src.restrictByNotNullOrUndefined();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objectToExtend.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause!=null&&firstClause.getNext()==null&&NodeUtil.isImmutableValue(firstClause)){
Node IR.add(IR.string("").srcref(secondClause),firstClause.detachFromParent())=IR.add(IR.string("").srcref(secondClause),firstClause.detachFromParent());
rValue.getParent().replaceChild(n,IR.add(IR.string("").srcref(secondClause),firstClause.detachFromParent()));
reportCodeChange();
return IR.add(IR.string("").srcref(secondClause),firstClause.detachFromParent());
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isCall());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(rValue.isCall());
if(callTarget.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isCall());
if(rValue.isOr()){
Node firstClause=callTarget.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isCall());
if(callTarget.isOr()){
Node firstClause=callTarget.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
type=lValue.createAnonymousObjectType();
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setDeferredType(node,type);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processObjectLitProperties(node,ObjectType.cast(objectLit.getJSType()),!namesMatch);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(target.isOr()){
Node firstClause=target.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(target.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=target.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isGetProp()){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node.isOr()){
Node firstClause=node.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=node.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&firstClause.getFirstChild()==secondClause){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(node.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&firstClause.getFirstChild()==secondClause){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondArg.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.isName()){
return ;
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
docInfo=rValue.getJSDocInfo();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(info==null){
docInfo=secondClause.getJSDocInfo();
}
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
docInfo=rValue.getJSDocInfo();
if(info==null){
docInfo=secondClause.getJSDocInfo();
}

if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(object.isOr()){
Node firstClause=object.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=object.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if("prototype".equals(NodeUtil.getStringValue(secondClause.getLastChild()))){
JSType firstClause=getJSType(secondClause.getFirstChild());
if(firstClause.isFunctionType()){
FunctionType firstClause.toMaybeFunctionType()=firstClause.toMaybeFunctionType();
}
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(body.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
return null;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(lValue.getLastChild(),firstClause);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null){
firstClause.setJSType(type);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.replaceChild(lValue,firstClause);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
if(parent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objLitParent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isOr()){
Node firstClause=parent.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=parent.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isOr()){
Node firstClause=rValue.getFirstChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isOr()){
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(block.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name2.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeName1.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=firstClause.getLastChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.detachFromParent();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.detachFromParent();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
secondClause.addChildrenToBack(IR.hook(node,getBlockExpression(node).getFirstChild().getLastChild().detachFromParent(),secondClause.removeChildren()).srcref(node));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.replaceChild(node,rValue);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.detachFromParent();
rValue.detachFromParent();
secondClause.addChildrenToBack(IR.hook(node,getBlockExpression(node).getFirstChild().getLastChild().detachFromParent(),secondClause.removeChildren()).srcref(node));
lValue.replaceChild(node,rValue);
reportCodeChange();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.detachFromParent();
Node firstClause=firstClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(member.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.getFirstChild().setJSType(thisType);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null&&(secondClause.isName()||name.isString())){
thisType.defineDeclaredProperty(name.getString(),jsType,rValue);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(catchBlock.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null&&lValue.contains(rValue)){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
value=firstClause.getLastChild();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getChildCount()!=3){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ObjectPropertyStringPreprocess.EXTERN_OBJECT_PROPERTY_STRING.equals(firstClause.getQualifiedName())){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(targetExpression.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isCall()||callsite.isNew());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(secondClause.isName()||n.isString());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(stringNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionName.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isGet(rValue)){
return lValue;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeInheritsExpr.isOr()){
Node firstClause=maybeInheritsExpr.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeInheritsExpr.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=maybeInheritsExpr.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.scope=parent;
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.firstClause=rootNode;
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.namesMatch=false;
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(paramNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getJSType()!=secondClause.getJSType().visit(this)){
namesMatch=true;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeExpr.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(rValue.getParent());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(typeNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!"goog.reflect.object".equals(secondClause.getQualifiedName())||rValue.getChildCount()!=3){
return null;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.removeChild(secondClause.getLastChild());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.replaceChild(secondClause,secondClause.getLastChild());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.removeChild(secondClause.getLastChild());
lValue.replaceChild(secondClause,secondClause.getLastChild());

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(grandparent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
tryDefineLexicalQualifiedNameRef(NodeUtil.getBestLValueName(rValue),n);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.isVar()&&firstClause.hasOneChild()){
hasAnnotation=true;
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.add(node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.isVar()&&firstClause.hasOneChild()){
hasAnnotation=true;
}
secondClause.add(node);

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(init.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isFor());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isForIn(rValue)){
return n;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(src.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(param.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnIdentifingNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(forVar.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(!firstClause.hasChildren()&&rValue.getString().equals(firstClause.getString())){
lValue.removeChild(secondClause);
node.replaceChild(rValue,secondClause);
compiler.reportCodeChange();
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isString()){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isGetProp()){
return ;
}
if(n.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(JSType.toMaybeFunctionType(lValue.getJSType())==null){
return null;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(JSType.toMaybeFunctionType(lValue.getJSType())==null){
return null;
}
if(namesMatch==null){
return null;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isEnumType()){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(curNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
scope.inferQualifiedSlot(rValue,ownerName+".",secondClause==null?null:var.getType()==null?getNativeType(UNKNOWN_TYPE):oldType,NodeUtil.getObjectLitKeyTypeFromValueType(rValue,rValue.getFirstChild().getJSType()));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(symbol.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerName.endsWith(".call")||propQName.endsWith(".apply")){
lValue.defineNameIfNotExists(rValue.getFirstChild().getQualifiedName(),isExtern).markExposedToCallOrApply();
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!"goog.exportSymbol".equals(ownerName)){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=addMarker(lValue.getJSType().toMaybeFunctionType(),nodeToInsertAfter,null);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Iterables.addAll(Sets.newTreeSet(ALPHA),lValue.getJSType().toMaybeFunctionType().getAllImplementedInterfaces());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(ObjectType thisType : Sets.newTreeSet(ALPHA)){
node=addMarker(lValue.getJSType().toMaybeFunctionType(),nodeToInsertAfter,interfaceType);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callee.isOr()){
Node firstClause=callee.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callee.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=callee.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(first.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isGet(secondClause)){
rValue.putBooleanProp(Node.FREE_CALL,true);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isCall(),"Expected: CALL, Got: %s",Token.name(node.getType()));
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.functionCallHasSideEffects(secondClause)){
return true;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getParent().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(root.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnName.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c.isOr()){
Node firstClause=c.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=c.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.hasChildren()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
firstClause=secondClause.getNext();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.hasChildren()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(arrayNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null){
if(right.getNext()!=null||!NodeUtil.isImmutableValue(right)){
return node;
}
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&right.isString()&&",".equals(right.getString())){
node.removeChild(right);
reportCodeChange();
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(llhs.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch){
if(NodeUtil.isStatementParent(secondClause)){
for(Node firstClause=n.getFirstChild();child!=null;child=child.getNext()){
if(NodeUtil.isHoistedFunctionDeclaration(child)){
defineFunctionLiteral(child,n);
}
}
}
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getLastChild().isFunction()&&!NodeUtil.isEmptyBlock(assign.getLastChild().getLastChild())){
secondClause.report(firstClause.makeError(lValue,INTERFACE_FUNCTION_NOT_EMPTY,secondClause.getCodingConvention().getAbstractMethodName()));
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=firstClause.getFirstChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dest.isOr()){
Node firstClause=firstClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isOr()){
Node firstClause=firstClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
firstClause.detachChildren();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.replaceChild(firstClause,firstClause.getLastChild());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
firstClause.detachChildren();
lValue.replaceChild(firstClause,firstClause.getLastChild());

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(target.isOr()){
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(innerIf.isOr()){
Node firstClause=innerIf.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(innerIf.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=innerIf.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!(isLowerPrecedenceInExpression(lValue,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(rValue.getFirstChild(),AND_PRECEDENCE))){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(argumentNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(reference.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextSibling.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=forNode.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(NodeUtil.containsType(secondClause,Token.IN)){
return ;
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.removeChild(secondClause);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(secondClause.isVar()){
newInitializer=secondClause;
}else {
Preconditions.checkState(secondClause.hasOneChild());
newInitializer=secondClause.getFirstChild();
secondClause.removeChild(node);
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
firstClause.replaceChild(firstClause.getFirstChild(),node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
compiler.reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
if(NodeUtil.containsType(secondClause,Token.IN)){
return ;
}
lValue.removeChild(secondClause);
if(secondClause.isVar()){
newInitializer=secondClause;
}else {
Preconditions.checkState(secondClause.hasOneChild());
newInitializer=secondClause.getFirstChild();
secondClause.removeChild(node);
}
firstClause.replaceChild(firstClause.getFirstChild(),node);
compiler.reportCodeChange();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getFirstChild().isOr()){
compiler.reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objectType.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause!=null&&firstClause.isVar()){
String secondClause.getString()=secondClause.getString();
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!(type instanceof ArrowType)){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propNameNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(cur.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=lValue.getFirstChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
Node firstClause=lValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
if(isTestFunction(lValue.getFirstChild().getFirstChild(),NodeUtil.getFunctionName(lValue.getFirstChild().getFirstChild()))){
exportTestFunctionAsSymbol(NodeUtil.getFunctionName(lValue.getFirstChild().getFirstChild()),lValue,node);
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(newParam.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(call.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
state.extractBeforeStatement=extractExpression(rValue.getFirstChild(),state.extractBeforeStatement);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.removeFirstChild();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tweakIdNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(blockChild.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(finallyBlock.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(exitNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
varType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope.inferSlotType(rValue.getString(),type);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isAliasName(secondClause.getString())){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!(rValue.isScript()||namesMatch!=null&&grandparent.isFunction()&&parent.isBlock())){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(secondClause.hasOneChild());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.isReturn()){
return statement.getFirstChild();
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isOr()){
Node firstClause=parent.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&secondClause.getNext()!=null){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&secondClause.getNext()!=null){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((firstClause==null)||!lValue.isGetProp()){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=nameNode.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause!=null&&(firstClause.isString()||firstClause.isRegExp()))return false;
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callName.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisArg.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
initializedName=firstClause;
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(id.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!NodeUtil.isVarOrSimpleAssignLhs(secondClause,node)){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(secondClause.isVar()){
secondClause.removeChild(rValue);
if(!secondClause.hasChildren()){
secondClause.detachFromParent();
}
lValue.reportCodeChange();
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(firstClause.getFirstChild()==lValue);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue=trySimplifyUnusedResult(left);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause==null){
secondClause.replaceChild(lValue,NodeUtil.newUndefinedNode(call));
}else {
secondClause.replaceChild(lValue,firstClause.detachFromParent());
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isOr()){
Node firstClause=lValue.getFirstChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isOr()){
Node firstClause=lValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isUnknownType()||type.isUnionType()){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause=secondClause.getNext();
if(key.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(curParam.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(keyNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue=firstClause.getNext();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.removeChild(lValue);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
rValue.removeChild(firstClause);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=assignTarget.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(evaluatesToLocalValue(firstClause)){
return false;
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(!ownerName.isEmpty());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(exportCallTarget.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause=current.getNext();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstArg.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(greatGramp.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((secondClause==null)||!functionNode.isFunction()){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(ownerName.equals(secondClause.getString())){
return ;
}
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
info=(JSDocInfo)secondClause.getProp(Node.JSDOC_INFO_PROP);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!namesMatch.isLocal()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(typeList.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause!=null){
createEdge(secondClause,Branch.UNCOND,computeFallThrough(child));
}else {
createEdge(node,Branch.UNCOND,computeFollowNode(node,this));
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
firstClause.copyInformationFrom(secondClause);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.replaceChild(secondClause.getFirstChild(),firstClause);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(secondClause.getFirstChild().isVar()){
newStatement=secondClause.getFirstChild();
}else {
newStatement=NodeUtil.newExpr(secondClause.getFirstChild());
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.addChildBefore(node,node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
reportCodeChange("FOR initializer");
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
firstClause.copyInformationFrom(secondClause);
secondClause.replaceChild(secondClause.getFirstChild(),firstClause);
if(secondClause.getFirstChild().isVar()){
newStatement=secondClause.getFirstChild();
}else {
newStatement=NodeUtil.newExpr(secondClause.getFirstChild());
}
lValue.addChildBefore(node,node);
reportCodeChange("FOR initializer");

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getFirstChild().isOr()){
Node firstClause=c.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isOr()){
Node firstClause=c.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(aNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=valueNode.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name1.isOr()){
Node firstClause=name1.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name1.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeName2.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=name1.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=lValue.getLastChild().getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
secondClause.addChildrenToBack(IR.hook(node,secondClause.removeChildren(),lValue.getLastChild().detachFromParent()).srcref(node));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
firstClause.replaceChild(node,node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.detachFromParent();
node.detachFromParent();
secondClause.addChildrenToBack(IR.hook(node,secondClause.removeChildren(),lValue.getLastChild().detachFromParent()).srcref(node));
firstClause.replaceChild(node,node);
reportCodeChange();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.detachFromParent();
Node firstClause=rValue.getFirstChild();
Node secondClause=lValue.getLastChild().getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=lValue.getLastChild().getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.detachFromParent();
reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.detachFromParent();
reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=lValue.getLastChild().getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lr.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&NodeUtil.getStringValue(lValue)!=null){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(gramps.isOr()){
Node firstClause=gramps.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=gramps.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
replaceWithEmpty(secondClause,secondClause.getParent());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
replaceWithEmpty(secondClause,secondClause.getParent());
compiler.reportCodeChange();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.removeChild(lValue.getNext());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
secondClause.replaceChild(rValue,lValue.getNext());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.removeChild(lValue.getNext());
secondClause.replaceChild(rValue,lValue.getNext());
compiler.reportCodeChange();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps.isOr()){
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps.isOr()){
compiler.reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps.isOr()){
rValue.removeChild(lValue.getNext());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
compiler.reportCodeChange();
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.removeChild(lValue.getNext());
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
compiler.reportCodeChange();
rValue.removeChild(lValue.getNext());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(gramps.isOr()){
compiler.reportCodeChange();
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps.isOr()){
rValue.removeChild(lValue.getNext());
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps.isOr()){
compiler.reportCodeChange();
rValue.removeChild(lValue.getNext());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
compiler.reportCodeChange();
rValue.removeChild(lValue.getNext());
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps.isOr()){
compiler.reportCodeChange();
rValue.removeChild(lValue.getNext());
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expectedGetprop.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isThis()&&!isPropertyTree(leftChild)){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getStringValue(firstClause.getNext())==null){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getNext().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
Preconditions.checkState(secondClause.get(0).getValue()==Branch.UNCOND);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objectNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch!=null&&info!=INVALIDATED&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch!=null&&namesMatch!=INVALIDATED&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch!=null&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&namesMatch!=INVALIDATED&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getBooleanProp(Node.IS_CONSTANT_NAME)){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(secondClause.getString().isEmpty()){
return ;
}
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getBooleanProp(Node.IS_CONSTANT_NAME)){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.GETTER_DEF,node);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(firstClause);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.SETTER_DEF,node);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(firstClause);
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateFunctionExpression(firstClause);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateFunctionExpression(firstClause);
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstChild.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(receiver.isOr()){
Node firstClause=receiver.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=receiver.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if("call".equals(secondClause.getNext().getString())){
if(secondClause.isGetProp()){
addAction(new FunctionCallBuilder(secondClause,rValue.getNext()).setPropName(first.getFirstChild().getNext().getString()).setIsCallFunction().build());
}else {
addAction(new FunctionCallBuilder(secondClause,rValue.getNext()).setIsCallFunction().build());
}
}else {
addAction(new FunctionCallBuilder(secondClause,rValue.getNext()).setPropName(first.getNext().getString()).build());
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(currentNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sibling.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
swtich (secondClause.getType()){
case Token.ASSIGN :
break;

case Token.GETPROP :
break;

}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getElemParent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getLastChild().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rep.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.isReturn()){
return firstClause.hasOneChild();
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.isVar()){
return firstClause.hasOneChild();
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftChild.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(current.isOr()){
Node firstClause=current.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=current.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.isNativeObjectType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(!firstClause.hasChildren()){
Node lValue=firstClause;
firstClause.addChildToBack(NodeUtil.newUndefinedNode(lValue));
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getProp.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isCall());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isCall());
if(namesMatch==null){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callNode.isOr()){
Node firstClause=callNode.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=callNode.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
swtich (secondClause.getType()){
case Token.NAME :
return true;

case Token.GETPROP :
return !isExpressionTreeUnsafe(secondClause.getFirstChild(),isExtern);

case Token.GETELEM :
return !isExpressionTreeUnsafe(secondClause.getFirstChild(),isExtern)&&!isExpressionTreeUnsafe(secondClause.getLastChild(),isExtern);

}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=getNode.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(definitionSite.inExterns){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!SimpleDefinitionFinder.isSimpleFunctionDeclaration(firstClause)){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(arg1.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.reportCodeChange();
Node firstClause=parent.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null&&!define.isGlobal()){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(";");
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(secondClause.getNext());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(secondClause.getNext().getNext());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(")");
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.getParent().replaceChild(first,rValue.getFirstChild().cloneNode());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.addChildBefore(firstClause,node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
reportCodeChange("FOR-IN var declaration");
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.getParent().replaceChild(first,rValue.getFirstChild().cloneNode());
lValue.addChildBefore(firstClause,node);
reportCodeChange("FOR-IN var declaration");

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(first.isOr()){
Node firstClause=firstClause.getFirstChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(first.isOr()){
Node firstClause=firstClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(catches.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getImpureBooleanValue(lValue)!=TernaryValue.FALSE){
return secondClause;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(secondClause,n.getFirstChild()));
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objectToLoopOver.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getElem.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lValue.isNumber()){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null){
return result;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousBlock.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue==null||previousCase.getNext()==node);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(useParent.isOr()){
Node firstClause=useParent.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(useParent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=useParent.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!SimpleDefinitionFinder.isSimpleFunctionDeclaration(firstClause)){
return true;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.detachFromParent();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
if(isJqueryExtendCall(firstClause,firstClause.getQualifiedName(),this.compiler)){
maybeExpandJqueryExtendCall(rValue);
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftParent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rightParent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(next.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&ns.onlyAffectsClassDef){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subtree.isOr()){
Node firstClause=subtree.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subtree.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(NodeUtil.isGet(namesMatch)){
subtree=tryFoldKnownStringMethods(rValue);
}else {
subtree=tryFoldKnownNumericMethods(rValue);
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value.isOr()){
Node firstClause=value.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=value.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
firstClause.setString(secondClause.getString());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
NodeUtil.copyNameAnnotations(secondClause,firstClause);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.removeChild(node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.replaceChild(node,node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(NodeUtil.isHoistedFunctionDeclaration(node)){
rValue.addChildToFront(node.detachFromParent());
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
firstClause.setString(secondClause.getString());
NodeUtil.copyNameAnnotations(secondClause,firstClause);
secondClause.removeChild(node);
rValue.replaceChild(node,node);
if(NodeUtil.isHoistedFunctionDeclaration(node)){
rValue.addChildToFront(node.detachFromParent());
}
compiler.reportCodeChange();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value.isOr()){
compiler.reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.removeChild(secondClause.getFirstChild());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.replaceChild(secondClause,IR.exprResult(IR.assign(IR.getprop(IR.name("module"),IR.string("exports")),secondClause.getFirstChild())).useSourceInfoFromForTree(n));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.removeChild(secondClause.getFirstChild());
lValue.replaceChild(secondClause,IR.exprResult(IR.assign(IR.getprop(IR.name("module"),IR.string("exports")),secondClause.getFirstChild())).useSourceInfoFromForTree(n));

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(breakTarget.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isExprAssign(node)){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=skipFinallyNodes(follow);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(OBJECT_PROPERTY_STRING.equals(secondClause.getQualifiedName())){
Node IR.name(EXTERN_OBJECT_PROPERTY_STRING)=IR.name(EXTERN_OBJECT_PROPERTY_STRING);
newName.copyInformationFrom(n);
lValue.replaceChild(n,newName);
compiler.reportCodeChange();
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!EXTERN_OBJECT_PROPERTY_STRING.equals(firstClause.getQualifiedName())){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
nameGenerator=lValue.get(rValue.getFirstChild().getQualifiedName());
isExtern=true;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getChildAtIndex(1).isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(NodeUtil.isFunctionObjectApply(secondClause.getParent())||NodeUtil.isFunctionObjectCall(secondClause.getParent())){
function.isExposedToCallOrApply=true;
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue==null||n==lValue){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!NodeUtil.isObjectLitKey(rValue,n.getParent()));
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rvalue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(ref.node.getLastChild(),node);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prop.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=ancestorClone.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!NodeUtil.isValidPropertyName(secondClause.getString())){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
nonExternFunctions.add(IR.getprop(firstClause.detachFromParent(),secondClause.detachFromParent()));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
nonExternFunctions.add(node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.getParent().replaceChild(ancestor,IR.getprop(firstClause.detachFromParent(),secondClause.detachFromParent()));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
nonExternFunctions.add(IR.getprop(firstClause.detachFromParent(),secondClause.detachFromParent()));
nonExternFunctions.add(node);
node.getParent().replaceChild(ancestor,IR.getprop(firstClause.detachFromParent(),secondClause.detachFromParent()));

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
isValidExpansion=false;
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ancestor.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(destBlock.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
defineName(rValue,secondClause,node,(info!=null)?info:name.getJSDocInfo());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(block.isOr()){
Node firstClause=block.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=block.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Preconditions.checkArgument(firstClause.isReturn());
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
Preconditions.checkArgument(secondClause==namesMatch);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
newExpression=secondClause.removeFirstChild();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Preconditions.checkArgument(firstClause.isReturn());
Preconditions.checkArgument(secondClause==namesMatch);
newExpression=secondClause.removeFirstChild();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(block.isOr()){
Node firstClause=rValue.getFirstChild();
Preconditions.checkArgument(firstClause.isReturn());
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(":");
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
addExpr(rValue.getFirstChild(),1,Context.OTHER);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rl.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&NodeUtil.getStringValue(firstClause)!=null){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(callbackFunction.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(arg2.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
limit=Math.min((int)firstClause.getDouble(),namesMatch);
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=thenOp.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.removeChild(node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.replaceChild(node,NodeUtil.newExpr(new Node(rValue.getType(),rValue.removeFirstChild(),IR.hook(node,rValue.removeFirstChild(),secondClause.getLastChild()).srcref(node)).srcref(thenOp)));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.removeChild(node);
secondClause.removeChild(secondClause.getLastChild());
lValue.replaceChild(node,NodeUtil.newExpr(new Node(rValue.getType(),rValue.removeFirstChild(),IR.hook(node,rValue.removeFirstChild(),secondClause.getLastChild()).srcref(node)).srcref(thenOp)));
reportCodeChange();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.removeChild(secondClause.getLastChild());
reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(condition.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&secondClause.getIndexType()!=null){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expectedBlock.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isReturn()){
return null;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.hasOneChild()){
return null;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rootNameNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause=rootNameNode.getFirstChild();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(toRemove.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!firstClause.isFunction()||type.isFunctionType());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.replaceChild(node,NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),compiler.getCodingConvention().getGlobalObject()).srcrefTree(node));
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.replaceChild(secondClause,NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),node.getQualifiedName()+".").srcrefTree(secondClause));
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(varName.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.POS :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(map.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FUNCTION :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftSide.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkNoTypeCheckSection(rValue,true);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause==null||lValue.getParent()==null){
return null;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(returnNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETPROP :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(rValue==secondClause.getFirstChild()&&parent.getChildCount()==2&&expr.getNext().isName()&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(rValue==secondClause.getFirstChild()&&parent.getChildCount()==2&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FOR :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OBJECTLIT :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NAME :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(operand.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.ASSIGN :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETPROP :

if(dest.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETTER_DEF :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return normalizeClassType(lValue.getJSType());
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.getJSType()!=null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch==null&&!secondClause.isFunction()){
return "";
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!NodeUtil.isFunctionDeclaration(rValue)){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
info=firstClause.getJSDocInfo();
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info==null&&!(rValue.isVar()&&!parent.hasOneChild())){
docInfo=parent.getJSDocInfo();
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.getJSType()==null&&rValue.isFunction()){
varType=parent.getJSType();
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.getJSType()==null||info==null){
return ;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause=getJSType(secondClause);
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=getJSType(rValue);
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(maybeFn.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=callTarget.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getNext()!=null&&rValue.getNext().getNext()!=null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getNext()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue.getNext().getNext()!=null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getPropertyDeprecationInfo(namesMatch,rValue.getLastChild().getString())!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.isNew()){
return ;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&(rValue.isAssign()&&parent.getFirstChild()==secondClause)){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
connectToPossibleExceptionHandler(rValue,node.getFirstChild());
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&secondClause.getFirstChild()==rValue){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName());
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue.getLastChild()==lValue&&parent.getFirstChild().isQualifiedName()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(parent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!NodeUtil.isExprAssign(rValue)){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!NodeUtil.isExprAssign(node)){
return null;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(firstClause.isOr()){
Node firstClause=firstClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(firstClause.getParent().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(firstClause.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=firstClause.getParent().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=firstClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(n.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&(!rValue.isString()&&!property.isNumber())){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isNumber()){
ownerName=NodeUtil.getStringValue(property);
}else {
propertyName=property.getString();
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(null!=null&&firstClause.containsKey(grandparent)){
isExtern=false;
}else if(null!=null&&exports.containsKey(parent)){
useExportSymbol=false;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!rValue.isFunction()||type.isFunctionType());
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isAssignmentOp(lValue));
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isName()){
return new Assign(lValue,current,false);
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isString()){
return ;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(nameNode.isOr()){
Node firstClause=nameNode.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getFirstChild().isQualifiedName()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(nameNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=nameNode.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
secondClause.removeChild(firstClause);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
secondClause.removeChild(firstClause.getNext());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
firstClause.addChildToFront(firstClause.getNext());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
IR.var(firstClause).copyInformationFrom(rValue);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
rValue.getParent().replaceChild(candidateDefinition,IR.var(firstClause));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
firstClause.setJSDocInfo(secondClause.getJSDocInfo());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
lValue.reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
replacementNode=IR.var(firstClause);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
secondClause.removeChild(firstClause);
secondClause.removeChild(firstClause.getNext());
firstClause.addChildToFront(firstClause.getNext());
IR.var(firstClause).copyInformationFrom(rValue);
rValue.getParent().replaceChild(candidateDefinition,IR.var(firstClause));
firstClause.setJSDocInfo(secondClause.getJSDocInfo());
lValue.reportCodeChange();
replacementNode=IR.var(firstClause);

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(gramps.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause==null||!function.isGetProp()){
return false;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.getQualifiedName()==null){
return ;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isString()){
return ;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getFirstChild().isThis()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
rValue.getFirstChild().setJSType(thisType);
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null&&(secondClause.isName()||name.isString())){
thisType.defineDeclaredProperty(name.getString(),jsType,rValue);
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&rValue==secondClause.getFirstChild()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(secondClause.getLastChild().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(secondClause.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&namesMatch||(firstClause.isGetProp()&&parent.getLastChild()==rValue)){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName()||n.isString());
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.hasChildren()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(callee.isOr()){
Node firstClause=callee.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&rValue.getChildCount()==2){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(callee.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(param.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=callee.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(name.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.shouldPreserveTry()){
return ;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.hasOneChild()){
NodeUtil.redeclareVarsInsideBranch(catchBlock);
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.detachChildren();
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!firstClause.isArrayLit()||!secondClause.getString().equals("join")){
return node;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&right.isString()&&",".equals(right.getString())){
node.removeChild(right);
reportCodeChange();
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null&&!(isLowerPrecedenceInExpression(node,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(rValue,AND_PRECEDENCE))){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!(isLowerPrecedenceInExpression(node,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(rValue,AND_PRECEDENCE))){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&rValue.getNext()!=null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(current.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()==null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type==null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(varNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&namesMatch!=null&&grandparent.isFunction()&&rValue.isBlock()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&(rValue.isGetProp()||nextNode.isGetElem())){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(nextNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause=rValue.getNext();
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null&&!p.canCollapse()){
continue;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.isNew()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch==null){
return ;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.setSideEffectFlags(Node.NO_SIDE_EFFECTS);
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
rValue.setSideEffectFlags(Node.NO_SIDE_EFFECTS);
if(rValue.getJSType()!=null&&!rValue.isNew()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&!scope.isGlobal()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(!ownerName.isEmpty());
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.isNumber()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return createDefaultObjectUnion(type);
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
if(secondClause!=null&&("Array".equals(rValue.getString())||"Object".equals(rValue.getString()))){
JSType createFromTypeNodesInternal(secondClause.getLastChild(),sourceName,scope)=createFromTypeNodesInternal(secondClause.getLastChild(),sourceName,scope);
namedType=new ParameterizedType(this,(ObjectType)type,createFromTypeNodesInternal(secondClause.getLastChild(),sourceName,scope));
if(secondClause.hasMoreThanOneChild()){
JSType createFromTypeNodesInternal(secondClause.getFirstChild(),sourceName,scope)=createFromTypeNodesInternal(secondClause.getFirstChild(),sourceName,scope);
namedType=new IndexedType(this,(ObjectType)type,createFromTypeNodesInternal(secondClause.getFirstChild(),sourceName,scope));
}
}
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!secondClause.isBlock()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(c.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!NodeUtil.isImmutableValue(rValue)){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue.getFirstChild()==lValue){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue.getFirstChild()==lValue){
return rValue.getJSType();
}else if(parent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!NodeUtil.isImmutableValue(rValue.getFirstChild())){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(thisType.isUnknownType());
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getType()==Token.THIS||rValue.getType()==Token.NEW){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getType()==Token.THIS&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue.getType()==Token.NEW){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=Token.THIS&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()==null&&rValue.getType()==Token.NEW){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getType()==Token.THIS&&rValue.getType()==Token.NEW){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&!NodeUtil.isLValue(rValue)){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue.getFirstChild()==node){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&(rValue.isExprResult()||parent.isFor())){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!(NodeUtil.isObjectLitKey(rValue,lValue.getParent())||NodeUtil.isExprAssign(lValue.getParent().getParent()))){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(prop.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!firstClause.isNot()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isNot()){
lValue=leftParent.removeFirstChild();
}else {
leftParent.detachFromParent();
left=IR.not(leftParent).srcref(leftParent);
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(destBlock.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.IF,rValue);
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMinimumChildCount(rValue,2);
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMaximumChildCount(rValue,3);
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateExpression(rValue.getFirstChild());
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateBlock(rValue.getChildAtIndex(1));
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(toRemove.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(propName.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue==null||rValue.getParent()==null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue==null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue.getParent()==null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isObjectLitKey(rValue,lValue.getParent())){
Node getBestLValue(rValue.getParent())=getBestLValue(lValue.getParent());
if(owner!=null){
String namesMatch=getBestLValueName(owner);
if(ownerName!=null){
return ownerName+".";
}
}
return null;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()==null&&rValue.getParent()==null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue==null&&rValue.getParent()==null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue==firstClause.getFirstChild()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(secondClause.getNext().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FOR :

if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.DELPROP&&!(rValue.isGetProp()||rValue.isGetElem())){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.DELPROP&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!(rValue.isGetProp()||operand.isGetElem())){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.hasParameterType(ownerName)){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue!=null&&rValue.getJSType()!=null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo!=null&&rValueInfo.hasParameterType(ownerName)){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue!=null&&rValue.getJSType()!=null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.hasParameterType(ownerName)){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getJSType();
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.isFunctionType()&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisType!=null&&rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
declareArguments(secondClause);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(secondClause.isFunction());
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause!=null){
Node firstClause=NodeUtil.getFunctionParameters(fnNode).getFirstChild();
for(Node lValue : rValueInfo.toMaybeFunctionType().getParameters()){
if(paramNode==null){
break;
}
new StringBuilder("/**\n").append(" * ");
appendAnnotation(sb,"param",getParameterNodeJSDocType(n));
sb.append(" ").append(paramNode.getString()).append("\n");
paramNode=paramNode.getNext();
}
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(createCheckTypeCallNode(lValue.getJSType(),rValueInfo.cloneTree())==null){
rValueInfo=paramName.getNext();
continue;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=IR.exprResult(checkNode);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node==null){
firstClause.addChildToFront(createCheckTypeCallNode(lValue.getJSType(),rValueInfo.cloneTree()));
}else {
block.addChildAfter(checkNode,insertionPoint);
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getSubTypes(rValueInfo.getConstructorType().getJSType(),Sets.newHashSet());
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isEnumType()){
return ;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!rValue.isFunction()||type.isFunctionType());
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()==null){
n.setJSType(type);
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.hasEnumParameterType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
rValueInfo=NodeUtil.getBestJSDocInfo(node);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
type=lValue.createAnonymousObjectType();
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setDeferredType(node,type);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processObjectLitProperties(node,ObjectType.cast(objectLit.getJSType()),!false);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&!thisType.isEquivalentTo(this)&&thisType.isSubtype(type)&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(null!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isGetProp()){
ownerName=node.getFirstChild().getQualifiedName();
if(node.getFirstChild().isGetProp()&&getPropertyName(node.getFirstChild()).equals(PROTOTYPE_PROPERTY)){
ownerName=node.getFirstChild().getFirstChild().getQualifiedName();
}
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.getType()!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(firstClause==null||!function.isGetProp()){
return false;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isCall()){
return ;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isGetProp()){
return ;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!compiler.areNodesEqualForInlining(firstClause.getFirstChild(),node)){
return ;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&isClassDefiningCall(secondClause)){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isCall(),"Expected: CALL, Got: %s",Token.name(node.getType()));
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.functionCallHasSideEffects(secondClause)){
return true;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValueInfo.keepSubTree(secondClause);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null||qName.isEmpty()){
return ;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isName()){
return ;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
nonExternFunctions.add(node);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&!rValueInfo.isUnknownType()&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(node.hasOneChild());
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.hasThisType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo!=null&&rValueInfo.hasTypedefType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause.getQualifiedName()==null){
return ;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeRegistry.declareType(secondClause.getQualifiedName(),getNativeType(UNKNOWN_TYPE));
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeRegistry.overwriteDeclaredType(secondClause.getQualifiedName(),namesMatch);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isGetProp()){
defineSlot(candidate,candidate.getParent(),getNativeType(NO_TYPE),false);
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.isConstructor()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(secondClause.isName());
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&info.getSuppressions().contains("duplicate")){
return true;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValueInfo=origVar.nameNode.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null){
info=firstClause.getJSDocInfo();
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.hasReturnType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause==null){
return scope;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.replaceChild(node,NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),String.format("%s.superClass_.%s.call",firstClause.getQualifiedName(),rValueInfo.getString()),callee,"goog.base"));
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.removeChild(rValueInfo);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
if(rValueInfo==null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo.getVar(ownerName+".prototype")!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(scope!=rValueInfo&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((type=(String)rValueInfo.getAttribute(TagAttr.TYPE))!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch){
thisType=objectType.getImplicitPrototype();
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisType==null){
return ;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(secondClause.isObjectLit());
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=rValue.getFirstChild();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.removeChild(node);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.removeChild(rValue);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue.addChildToFront(node);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause.getParent().getParent().addChildAfter(node,firstClause.getParent());
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bind.thisValue!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.getLendsName().endsWith(".prototype")){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo!=null&&rValueInfo.getLendsName()!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo!=null&&rValueInfo.getLendsName()!=null&&rValueInfo.getLendsName().endsWith(".prototype")){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
recordClassConstructorOrInterface(null,null,null,null,null,null);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FOR :

if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.shouldPreserveTry()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(name!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(rValue);
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isName());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((rValue.getFirstChild()!=null)&&(name.getFirstChild().isFunction())){
return createConcreteFunction(name.getFirstChild(),scope);
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(rValue);
if(rValue==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isName());
if(rValue==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(rValue);
Preconditions.checkArgument(rValue.isName());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(rValue);
Preconditions.checkArgument(rValue.isName());
if(rValue==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isObjectLit()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.getJSType()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(oldParameterType!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(paramName!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null&&!secondClause.isFunction()){
return "";
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isQualifiedName()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(thisType!=null&&rValue!=null&&rValue.isObjectLit()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rhsValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
docInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(info==null){
docInfo=secondClause.getJSDocInfo();
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
docInfo=rValue.getJSDocInfo();
if(info==null){
docInfo=secondClause.getJSDocInfo();
}

if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isQualifiedName()&&scope.isGlobal()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.getType()!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isQualifiedName()&&scope.isGlobal()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.getType()!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(!rValue.isFunction()||type.isFunctionType());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.isNew()){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getNext()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(rValue.isName());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause.isVar()||parent.isFunction()){
return true;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isGet(secondClause)&&rValue==parent.getFirstChild()&&name.getNext().isString()&&name.getNext().getString().equals("call")){
Node firstClause=name.getAncestor(2);
if(gramps.isCall()&&gramps.getFirstChild()==parent){
return true;
}
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName());
if(parent!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getFirstChild().getNext()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getFirstChild()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
connectToPossibleExceptionHandler(rValue,node.getFirstChild());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(current!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(candidateDefinition!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(scopeFuncParent!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getParent()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getParent().getParent()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo==null){
return null;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo.lastIndexOf('.')==-1){
return null;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.endsWith(".prototype")){
return null;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(member!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.getFirstChild().setJSType(thisType);
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null&&(secondClause.isName()||name.isString())){
thisType.defineDeclaredProperty(name.getString(),jsType,rValue);
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=Token.SCRIPT){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(root!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.getType()==Token.BLOCK||root.getType()==Token.SCRIPT);
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isAssignmentOp(lValue));
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isName()){
return new Assign(lValue,current,false);
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isAssignmentOp(lValue));
if(current!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValue.isHook()){
firstVal=rValue.getFirstChild().getNext();
}else {
firstVal=rValue.getFirstChild();
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(right!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause==null||!callTarget.isGetProp()){
return node;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isArrayLit()||!lValue.getString().equals("join")){
return node;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&right.isString()&&",".equals(right.getString())){
node.removeChild(right);
reportCodeChange();
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isName()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(firstClause==null||!function.isGetProp()){
return false;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.getQualifiedName()==null){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isString()){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lhs!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isNumber()){
ownerName=NodeUtil.getStringValue(property);
}else {
propertyName=property.getString();
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isGetElem()){
IR.stringKey(ownerName).copyInformationFrom(rValue).setQuotedString();
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isName()&&rValue.getString().equals(var.name)&&secondClause.isAssign()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rhs!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isName()){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!scope.isDeclared(firstClause.getString(),false)){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(irNode!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.getJSDocInfo()!=null){
rValue.setJSDocInfo(rootNodeJsDoc);
rootNodeJsDoc.setAssociatedNode(irNode);
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thenOp!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName()||n.isString());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(condition!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isString()){
return ;
}
if(parent!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isExprResult()&&rValue.getFirstChild().isCall()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(maybeInheritsExpr!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isAssign()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(node!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextNode!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isCall()){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isGetProp()){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!compiler.areNodesEqualForInlining(secondClause.getFirstChild(),node)){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.mayEffectMutableState(node)){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue.add(new CallSite(node,node,node,secondClause,secondClause.getFirstChild()));
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isCall());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch!=null){
return proxyCast;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isQualifiedName()){
return null;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lValue.isObjectLit()){
return new ObjectLiteralCast(null,null,OBJECTLIT_EXPECTED);
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=Token.ELLIPSIS){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(arg!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isGetProp()){
ownerName=lValue.getLastChild().getString();
}else if(lValue.isName()){
partialName=lValue.getString();
}else {
return true;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.isExported(ownerName)){
return true;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getNext()==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(node.hasOneChild());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.getFirstChild()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue.getFirstChild()==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nameNode!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isNumber()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(arg1!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=lValue){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getFirstChild()!=lValue){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((rValue!=null)&&(rValue.isVar())){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sibling!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=info.initialValue){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(finalValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(curParam!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue==lValue){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getFirstChild()==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getFirstChild()==lValue){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(grandparent!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subtree!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(argNode!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objectToLoopOver!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null||!callbackFunction.isFunction()){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue=firstClause.getChildAtIndex(1);
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(OBJECT_PROPERTY_STRING.equals(rValue.getQualifiedName())){
Node secondClause=IR.name(EXTERN_OBJECT_PROPERTY_STRING);
newName.copyInformationFrom(n);
lValue.replaceChild(n,newName);
compiler.reportCodeChange();
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rValue.isNew()){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!EXTERN_OBJECT_PROPERTY_STRING.equals(firstClause.getQualifiedName())){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeIf!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prop!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NEG!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(toRemove!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETPROP :

if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OBJECTLIT :

if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isObjectLitKey(rValue,lValue.getParent())){
Node getBestLValue(rValue.getParent())=getBestLValue(lValue.getParent());
if(owner!=null){
String namesMatch=getBestLValueName(owner);
if(ownerName!=null){
return ownerName+".";
}
}
return null;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FOR :

if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(lValue.isFunction());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause==null){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(rValue);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isName());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()==null){
return ConcreteType.ALL;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(rValue);
Preconditions.checkArgument(rValue.isName());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.getObjectLitKeyTypeFromValueType(node,getJSType(node.getFirstChild()))==null){
rightType=getNativeType(UNKNOWN_TYPE);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.isEnumElementType()){
allowedValueType=allowedValueType.toMaybeEnumElementType().getPrimitiveType();
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rValue.isVarArgs()||rValue.isOptionalArg()&&namesMatch){
boolean secondClause.isVarArgs()&&(rValueInfo==null||thatParamType.isUnknownType()||thatParamType.isNoType())=secondClause.isVarArgs()&&(rValueInfo==null||thatParamType.isUnknownType()||thatParamType.isNoType());
if(!isTopFunction){
return false;
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rValue.isVarArgs()){
rValue=thisParam.getNext();
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=traverseChildren(node,scope);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
return "";
}else if(type.isFunctionType()){
return getFunctionAnnotation(secondClause);
}else if(type.isEnumType()){
return "/** @enum {"+type.toMaybeEnumType().getElementsType().toAnnotationString();
}else if(!type.isUnknownType()&&!type.isEmptyType()){
return "/** @type {"+node.getJSType().toAnnotationString();
}else {
return "";
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null||firstClause.getNext()==null){
return scope;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo.getAssertedParam(firstClause.getNext())==null){
return scope;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause=rValue.getFirstChild();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue=rValue.getLastChild();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
knownType=getJSType(secondClause);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=getJSType(lValue);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(n!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(rValueInfo==null?null:objType.getIndexType()!=null&&!rValueInfo==null?null:objType.getIndexType().isUnknownType()){
JSType knownType=getNativeType(STRING_TYPE).getGreatestSubtype(rValueInfo==null?null:objType.getIndexType());
if(!knownType.isEmptyType()){
iterKeyType=knownType;
}
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(secondClause.isFunction());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause!=null){
Node firstClause=NodeUtil.getFunctionParameters(fnNode).getFirstChild();
for(Node lValue : knownType.getParameters()){
if(paramNode==null){
break;
}
new StringBuilder("/**\n").append(" * ");
appendAnnotation(sb,"param",getParameterNodeJSDocType(n));
sb.append(" ").append(paramNode.getString()).append("\n");
paramNode=paramNode.getNext();
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(namesMatch&&rValueInfo!=null){
fnType=rValueInfo.restrictByNotNullOrUndefined().toMaybeFunctionType();
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(firstClause.isFunction()){
Node secondClause.getNext()=secondClause.getNext();
Node safeNext(secondClause.getNext())=safeNext(secondClause.getNext());
return new Bind(firstClause,secondClause.getNext(),safeNext(secondClause.getNext()));
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(namesMatch&&rValueInfo!=null){
fnType=rValueInfo.restrictByNotNullOrUndefined().toMaybeFunctionType();
}
if(firstClause.isFunction()){
Node secondClause.getNext()=secondClause.getNext();
Node safeNext(secondClause.getNext())=safeNext(secondClause.getNext());
return new Bind(firstClause,secondClause.getNext(),safeNext(secondClause.getNext()));
}

JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=src.restrictByNotNullOrUndefined();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null){
return null;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isExprAssign(firstClause.getFirstChild())){
return null;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isGetProp()&&lhs.getFirstChild().isThis()){
Node firstClause.getFirstChild().getFirstChild().getLastChild()=firstClause.getFirstChild().getFirstChild().getLastChild();
if(rhs.isName()&&rhs.getString().equals(rValueInfo.getString())){
Node secondClause.getLastChild()=lhs.getLastChild();
return propertyName;
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.setJSType(firstClause.getJSType());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.setJSDocInfo(new JSDocInfo());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(declInfo.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isEnumType()){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(rValueInfo!=null&&rValueInfo.isTypeInferred()){
rValueInfo.setType(rValueInfo==null?null:var.getType()==null?NodeUtil.getObjectLitKeyTypeFromValueType(firstClause,knownType):oldType.getLeastSupertype(oldType));
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
scope.inferQualifiedSlot(firstClause,ownerName+".",rValueInfo==null?null:var.getType()==null?getNativeType(UNKNOWN_TYPE):oldType,NodeUtil.getObjectLitKeyTypeFromValueType(firstClause,knownType));
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(rValueInfo!=null&&rValueInfo.isTypeInferred()){
rValueInfo.setType(rValueInfo==null?null:var.getType()==null?NodeUtil.getObjectLitKeyTypeFromValueType(firstClause,knownType):oldType.getLeastSupertype(oldType));
}
scope.inferQualifiedSlot(firstClause,ownerName+".",rValueInfo==null?null:var.getType()==null?getNativeType(UNKNOWN_TYPE):oldType,NodeUtil.getObjectLitKeyTypeFromValueType(firstClause,knownType));

JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(isUselessCase(secondClause,(rValue.getFirstChild()==rValue.getFirstChild())?null:lastNonRemovable)){
removeCase(rValue,secondClause);
return null;
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isSwitch());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(secondClause.isGetProp()&&firstClause.isAssign());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=addMarker(rValueInfo,nodeToInsertAfter,null);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Iterables.addAll(Sets.newTreeSet(ALPHA),rValueInfo.getAllImplementedInterfaces());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(ObjectType thisType : Sets.newTreeSet(ALPHA)){
node=addMarker(rValueInfo,nodeToInsertAfter,interfaceType);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=traverseChildren(rValue,scope);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=tightenTypesAfterAssertions(scope,rValue);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause.isCall()&&parent.getFirstChild()==rValue){
return true;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isGet(secondClause)&&rValue==parent.getFirstChild()&&name.getNext().isString()&&name.getNext().getString().equals("call")){
Node firstClause=name.getAncestor(2);
if(gramps.isCall()&&gramps.getFirstChild()==parent){
return true;
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isName()||n.isGetProp());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(node.isName());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isCandidateUsage(node)){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isAssign()&&parent.getFirstChild()==node){
rValueInfo.setInline(false);
}else {
fs.setRemove(false);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.getFirstChild().setJSType(thisType);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(knownType!=null&&(secondClause.isName()||name.isString())){
thisType.defineDeclaredProperty(name.getString(),jsType,rValue);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(firstClause.isFunction());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(owner!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
Preconditions.checkNotNull(scope);
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(rValue.isAssign());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(null!=null&&firstClause.containsKey(grandparent)){
isExtern=false;
}else if(null!=null&&exports.containsKey(parent)){
useExportSymbol=false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isNumber()){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!(firstClause.getDouble()>=0)||Double.isInfinite(dindex)){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(isExtern){
String rValue.getString()=rValue.getString();
if(namesMatch!=null&&!namesMatch.isLocal()){
info.put(rValue.getString(),newSymbolForGlobalVar(rValue));
}
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((firstClause==null)||!lValue.isGetProp()){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(codingConvention.isExported(firstClause.getLastChild().getString())){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isAssignmentOp(lValue));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isName()){
return new Assign(lValue,current,false);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&parent.isName()){
Node rValueInfo=parent.getParent();
if(gramps!=null&&gramps.isVar()){
return false;
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isExprAssign(node)){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isCall());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null){
if(right.getNext()!=null||!NodeUtil.isImmutableValue(right)){
return node;
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isArrayLit()||!lValue.getString().equals("join")){
return node;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&right.isString()&&",".equals(right.getString())){
node.removeChild(right);
reportCodeChange();
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isUnknownType()||type.isUnionType()){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getChildCount()!=4){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.getQualifiedName()==null){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assertDefinitionNode(rValue,Token.VAR);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info.isConstant()){
if(rValue.getString().isEmpty()){
return ;
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(namesMatch&&!rValue.getBooleanProp(Node.IS_CONSTANT_NAME)){
if(isExtern){
String rValue.getString()=rValue.getString();
throw new IllegalStateException("Unexpected const change.\n"+"  name: "+rValue.getString());
}
rValue.putBooleanProp(Node.IS_CONSTANT_NAME,true);
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(rValue.getString().isEmpty()){
return ;
}
if(namesMatch&&!rValue.getBooleanProp(Node.IS_CONSTANT_NAME)){
if(isExtern){
String rValue.getString()=rValue.getString();
throw new IllegalStateException("Unexpected const change.\n"+"  name: "+rValue.getString());
}
rValue.putBooleanProp(Node.IS_CONSTANT_NAME,true);
}

JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!scope.isDeclared(firstClause.getString(),false)){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rhs.isName()&&rhs.getString().equals(var.name)&&secondClause.isAssign()){
n.removeChild(rhs);
n.getParent().replaceChild(n,rhs);
compiler.reportCodeChange();
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValueInfo.isParamList());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isCall(),"Expected: CALL, Got: %s",Token.name(node.getType()));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.functionCallHasSideEffects(secondClause)){
return true;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isNumber()){
ownerName=NodeUtil.getStringValue(property);
}else {
propertyName=property.getString();
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isGetElem()){
IR.stringKey(ownerName).copyInformationFrom(rValue).setQuotedString();
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!SimpleDefinitionFinder.isSimpleFunctionDeclaration(rValueInfo)){
return true;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null||qName.isEmpty()){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null||var.isLocal()||var.isExtern()){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
nonExternFunctions.add(node);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isCall()){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isGetProp()){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!info.areNodesEqualForInlining(secondClause.getFirstChild(),node)){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.mayEffectMutableState(node)){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue.add(new CallSite(node,node,node,secondClause,secondClause.getFirstChild()));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName()||n.isString());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!"goog.exportSymbol".equals(rValueInfo)){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null||secondClause.getNext()!=null){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(lValue.isFor());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isForIn(lValue)){
return n;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.getNext().isEmpty()){
increment=trySimplifyUnusedResult(increment,false);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lValue.getFirstChild().isEmpty()){
return n;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getImpureBooleanValue(firstClause)!=TernaryValue.FALSE){
return lValue;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(lValue);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(lValue.isFor());
NodeUtil.redeclareVarsInsideBranch(lValue);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getChildCount()!=3){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isCall());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(NodeUtil.isGet(rValue.getFirstChild()));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
state.extractBeforeStatement=firstClause;
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(NodeUtil.isGet(firstClause.getFirstChild().getFirstChild()));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
state.extractBeforeStatement=extractExpression(firstClause.getFirstChild().getFirstChild().getFirstChild(),state.extractBeforeStatement);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.removeFirstChild();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lValue.replaceChild(rValue,IR.call(IR.getprop(secondClause.cloneNode(),IR.string("call")),extractExpression(firstClause.getFirstChild().getFirstChild().getFirstChild(),state.extractBeforeStatement).getFirstChild().cloneNode()).srcref(rValue));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isCall());
Preconditions.checkArgument(NodeUtil.isGet(rValue.getFirstChild()));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isCall());
rValue.removeFirstChild();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(NodeUtil.isGet(rValue.getFirstChild()));
rValue.removeFirstChild();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isCall());
Preconditions.checkArgument(NodeUtil.isGet(rValue.getFirstChild()));
rValue.removeFirstChild();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(secondClause.isCall()||callsite.isNew());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
secondClause.add(node.getFirstChild());
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(rValue.isName()){
Node firstClause=rValue.getParent();
if(firstClause.isVar()&&firstClause.hasOneChild()){
hasAnnotation=true;
}
secondClause.add(rValue);
}else if(rValue.isAssign()){
if(hasNoSideEffectsAnnotation(rValue)){
hasAnnotation=true;
}
secondClause.add(rValue.getFirstChild());
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(hasNoSideEffectsAnnotation(node)){
lValue.addAll(secondClause);
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
secondClause.add(node.getFirstChild());
if(rValue.isName()){
Node firstClause=rValue.getParent();
if(firstClause.isVar()&&firstClause.hasOneChild()){
hasAnnotation=true;
}
secondClause.add(rValue);
}else if(rValue.isAssign()){
if(hasNoSideEffectsAnnotation(rValue)){
hasAnnotation=true;
}
secondClause.add(rValue.getFirstChild());
}
if(hasNoSideEffectsAnnotation(node)){
lValue.addAll(secondClause);
}

JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!mayHaveSideEffects(firstClause.getNext())&&firstClause.getNext().getNext()!=null){
rValue.removeChild(elseBody);
n.replaceChild(thenBody,elseBody);
Node secondClause=new Node(Token.NOT);
n.replaceChild(firstClause,notCond);
notCond.addChildToFront(cond);
cond=notCond;
thenBody=cond.getNext();
elseBody=null;
reportCodeChange();
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(doc.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isAssign()){
ownerName=n.getFirstChild().getQualifiedName();
}else if(n.isVar()){
name=n.getFirstChild().getString();
}else if(n.isFunction()){
name=n.getFirstChild().getString();
if(name.isEmpty()){
return ;
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!typeRegistry.equals(secondClause.getString())){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause==null||!parent.isFunction()||secondClause==parent.getFirstChild()||parent==scope.getRootNode()){
if(NodeUtil.isStatementParent(secondClause)){
for(Node secondClause.getFirstChild()=n.getFirstChild();child!=null;child=child.getNext()){
if(NodeUtil.isHoistedFunctionDeclaration(child)){
defineFunctionLiteral(child,n);
}
}
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isString()){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(firstClause.isCall());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isGet(secondClause)){
firstClause.putBooleanProp(Node.FREE_CALL,true);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(flags!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
pattern=makeForwardSlashBracketSafe(secondClause);
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
firstClause.replaceChild(node,node);
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
reportCodeChange();
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
pattern=makeForwardSlashBracketSafe(secondClause);
firstClause.replaceChild(node,node);
reportCodeChange();

JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getQualifiedName()==null){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeRegistry.declareType(secondClause.getQualifiedName(),getNativeType(UNKNOWN_TYPE));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeRegistry.overwriteDeclaredType(secondClause.getQualifiedName(),knownType);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isGetProp()){
defineSlot(candidate,candidate.getParent(),getNativeType(NO_TYPE),false);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TWEAK_FUNCTIONS_MAP.get(secondClause.getFirstChild().getQualifiedName())==null){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rValueInfo.hasChildren()){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(true){
Node IR.or(rValue.cloneTree(),IR.objectlit().srcref(node)).srcref(n)=IR.or(rValue.cloneTree(),IR.objectlit().srcref(node)).srcref(n);
Node IR.assign(rValue.cloneTree(),IR.or(rValue.cloneTree(),IR.objectlit().srcref(node)).srcref(n)).srcref(node)=IR.assign(objectToExtend.cloneTree(),assignVal).srcref(n);
secondClause.addChildrenToFront(IR.exprResult(assign).srcref(n));
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null){
return proxyCast;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!"goog.reflect.object".equals(firstClause.getQualifiedName())||rValue.getChildCount()!=3){
return null;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lValue.isObjectLit()){
return new ObjectLiteralCast(null,null,OBJECTLIT_EXPECTED);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(rValue.getParent()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue==null){
return true;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.isExported(ownerName)){
return true;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.hasChildren()){
NodeUtil.redeclareVarsInsideBranch(firstClause);
if(firstClause.getNext()!=null){
rValue.removeChild(finallyBlock);
n.getParent().replaceChild(n,finallyBlock);
}else {
n.getParent().removeChild(n);
}
reportCodeChange();
return finallyBlock;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(secondClause.isIf());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isStatementBlock(secondClause.getParent())){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(firstClause);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(firstClause.getNext());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue==null){
throw new MalformedException("Message string literal expected",stringLiteralNode);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isQualifiedName()&&n.getJSDocInfo()!=null){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(rValueInfo!=null&&rValueInfo.getAssociatedNode()!=null){
isExtern=rValueInfo.getAssociatedNode().isFromExterns();
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(parent!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(namesMatch==null){
pushContainingFunction(graph.UNKNOWN);
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(firstClause.isName());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(knownType==null){
varType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope.inferSlotType(firstClause.getString(),knownType);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isHook());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(rValue.getParent());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
rValue.detachChildren();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(mayHaveSideEffects(secondClause)){
lValue=IR.comma(cond,rValueInfo.toBoolean(true)?firstClause:firstClause.getNext()).srcref(rValue);
}else {
replacement=branchToKeep;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isHook());
Preconditions.checkNotNull(rValue.getParent());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(rValue.isHook());
rValue.detachChildren();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(rValue.getParent());
rValue.detachChildren();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(rValue.isHook());
Preconditions.checkNotNull(rValue.getParent());
rValue.detachChildren();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!(rValue.isScript()||rValueInfo!=null&&grandparent.isFunction()&&parent.isBlock())){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(node.hasOneChild());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(scope.getRootNode().getFirstChild().getNext().getChildCount()==2){
secondClause.markAllParametersEscaped();
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.analyze();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.isReturn()){
return statement.getFirstChild();
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(nextParent!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(!isExtern&&ownerName!=null&&firstClause.equals(ownerName)){
nonExternFunctions.add(secondClause);
}else if(isExtern||(ownerName!=null&&firstClause.equals(ownerName))){
nonExternFunctions.add(secondClause);
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue=trySimplifyUnusedResult(left);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.setSideEffectFlags(Node.NO_SIDE_EFFECTS);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isExtern){
for(Node node : node.getAncestors()){
if(NodeUtil.isControlStructure(ancestor)){
compiler.report(secondClause.makeError(n,CONDITIONAL_ID_GENERATOR_CALL));
return ;
}
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(OBJECT_PROPERTY_STRING.equals(rValue.getQualifiedName())){
Node secondClause=IR.name(EXTERN_OBJECT_PROPERTY_STRING);
newName.copyInformationFrom(n);
lValue.replaceChild(n,newName);
compiler.reportCodeChange();
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!EXTERN_OBJECT_PROPERTY_STRING.equals(firstClause.getQualifiedName())){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(c!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
Preconditions.checkState(rValue.isStringKey());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info.isConstant()){
add(":");
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
addExpr(rValue.getFirstChild(),1,Context.OTHER);
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
Preconditions.checkState(rValue.isStringKey());
add(":");
addExpr(rValue.getFirstChild(),1,Context.OTHER);

JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isThis()&&!isPropertyTree(leftChild)){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getStringValue(firstClause.getNext())==null){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(s.propertyScope!=null){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
inferThisType(info);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isUnknownType());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.GETTER_DEF,node);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(firstClause);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue=n.getNext();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(false&&namesMatch){
firstClause.add(node);
lValue.add(new Collapse(varNode,rValue,node));
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.SETTER_DEF,node);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateFunctionExpression(firstClause);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=tryMinimizeCondition(left);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=tryMinimizeCondition(right);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(rValue.getFirstChild()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
checkNoTypeCheckSection(secondClause,true);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isStatement(secondClause)){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isGetProp());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause=knownType!=null?boxedType:instanceType;
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValueInfo!=null);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
firstClause.setNode(node);
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(namesMatch!=null&&prototypeVar.scope==secondClause){
secondClause.undeclare(namesMatch);
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
firstClause.setNode(node);
if(namesMatch!=null&&prototypeVar.scope==secondClause){
secondClause.undeclare(namesMatch);
}

JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(docInfo.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
return null;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null){
ObjectType namesMatch.getImplicitPrototype()=objType.getImplicitPrototype();
if(implicitProto!=null){
return getTypeDeprecationInfo(implicitProto);
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue==null){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue=firstClause.getChildAtIndex(1);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,NodeUtil.getFunctionBody(rValue.getNext()),new FindCallbackArgumentReferences(callbackFunction,Lists.newArrayList(),Lists.newArrayList(),rValue.isArrayLit()));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue=skipFinallyNodes(follow);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ControlFlowAnalysis.computeFollowNode(secondClause)==null&&(secondClause.isThrow()||secondClause.getFirstChild()!=null)){
return n;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ControlFlowAnalysis.computeFollowNode(secondClause)==null||areMatchingExits(secondClause,follow)){
n.detachFromParent();
reportCodeChange();
return null;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(maybeIf!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isExtern){
secondClause.setStruct();
}else if(isExtern){
fnType.setDict();
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=ControlFlowAnalysis.computeFollowNode(secondClause)){
if(!isPure(lValue.getFirstChild())){
return lValue;
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ControlFlowAnalysis.computeFollowNode(secondClause)==null&&(lValue.isThrow()||lValue.getFirstChild()!=null)){
return n;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ControlFlowAnalysis.computeFollowNode(secondClause)==null||areMatchingExits(lValue,follow)){
Node IR.breakNode()=IR.breakNode();
n.getParent().replaceChild(n,replacement);
this.reportCodeChange();
return replacement;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(isReturnExpressBlock(node)){
thenExpr=getBlockReturnExpression(node);
null.detachFromParent();
}else {
thenExpr=NodeUtil.newUndefinedNode(node);
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
lValue.detachFromParent();
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info.isConstant()){
firstClause.detachFromParent();
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
secondClause.replaceChild(node,IR.returnNode(IR.hook(lValue,null,firstClause).srcref(node)));
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
secondClause.removeChild(node);
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(isReturnExpressBlock(node)){
thenExpr=getBlockReturnExpression(node);
null.detachFromParent();
}else {
thenExpr=NodeUtil.newUndefinedNode(node);
}
lValue.detachFromParent();
firstClause.detachFromParent();
secondClause.replaceChild(node,IR.returnNode(IR.hook(lValue,null,firstClause).srcref(node)));
secondClause.removeChild(node);
reportCodeChange();

JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
lValue.detachFromParent();
reportCodeChange();
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(prop!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
isValidExpansion=false;
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(DELPROP!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(secondClause.isPostfix()){
firstClause.putBooleanProp(Node.INCRDECR_PROP,true);
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
if(NodeUtil.isFunctionExpression(node)){
}else {
if(!isExtern||!secondClause.getInput().isExtern()){
t.report(node,UNDEFINED_VAR_ERROR,ownerName);
}
if(isExtern){
throw new IllegalStateException("Unexpected variable "+varName);
}else {
createSynthesizedExternVar(varName);
firstClause.getGlobalScope().declare(varName,n,null,getSynthesizedExternsInput());
}
}
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue==null||n==lValue){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!NodeUtil.isObjectLitKey(lValue,n.getParent()));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isExtern){
return rValue;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isDo());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.getImpureBooleanValue(secondClause)!=TernaryValue.FALSE){
return rValue;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(rValue,n.getFirstChild()));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause.replaceChild(rValue,rValue.removeFirstChild());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(secondClause)){
Node IR.exprResult(secondClause.detachFromParent()).srcref(cond)=IR.exprResult(cond.detachFromParent()).srcref(cond);
firstClause.addChildAfter(condStatement,rValue.removeFirstChild());
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.containsFunction(lValue)){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause.analyze();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(null!=null){
secondClause.removeChild(result);
firstClause.replaceChild(n,result);
reportCodeChange();
return result;
}else {
return n;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(firstClause!=null);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(nonExternFunctions.size()==1||secondClause.getType()==Token.BLOCK||parentType==Token.SCRIPT||parentType==Token.LABEL);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getType()==Token.LABEL&&nonExternFunctions.size()!=1){
Node firstClause=IR.block();
for(Node rValue : nonExternFunctions){
newChild.copyInformationFrom(node);
Node rValue.getParent()=newChild.getParent();
block.addChildToBack(newChild);
}
secondClause.replaceChild(node,block);
}else {
for(Node newChild : replacements){
newChild.copyInformationFrom(node);
Node oldParent=newChild.getParent();
parent.addChildBefore(newChild,node);
}
parent.removeChild(node);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
thisType.setOwnerFunction(this);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisType!=null){
oldPrototype.setOwnerFunction(null);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch){
clearCachedValues();
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null){
return getPropertyDeprecationInfo(implicitProto,ownerName);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isReturn()){
return null;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.hasOneChild()){
return null;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
recordClassConstructorOrInterface(null,null,null,null,null,null);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(firstClause,"%s should be in the name graph as a node.",null+".prototype.");
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node!=null){
firstClause.addAssignmentDeclaration(assign);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause.setType(type);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
info.reportCodeChange();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(ref.node.getLastChild(),node);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(toRemove!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETPROP :

if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OBJECTLIT :

if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo.getReferenceName()==null){
return true;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getName().equals(rValueInfo.getReferenceName())){
return true;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CATCH :

if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isExtern){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue==null||lValue.getParent()==null){
return null;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.FUNCTION :

if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.ASSIGN :

if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.VAR :

if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.POS :

if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(expr!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(secondClause.getNext()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(secondClause!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FOR :

if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.INC :

if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case REGISTER_NUMBER :

if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case OVERRIDE_DEFAULT_VALUE :

if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GT :

if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstructor()&&info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info.isConstructor()||info.hasType()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
type=secondClause.restrictByNotNullOrUndefined();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstructor()&&info.hasType()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue!=null&&NodeUtil.isObjectLitKey(lValue,lValue.getParent())){
return false;
}
if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lValue.isName());
if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue.isGetProp()||NodeUtil.isObjectLitKey(n,rValue)){
JSDocInfo rValueInfo=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
namesMatch=info!=null&&info.getSuppressions().contains("duplicate");
}
if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null){
if((rValue.getJSDocInfo()!=null)&&(irNode.getJSDocInfo().getLicense()!=null)){
fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());
}
irNode.setJSDocInfo(fileOverviewInfo);
fileOverviewInfo.setAssociatedNode(irNode);
}
if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
inferThisType(info);
if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isImplicitCast()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info.isImplicitCast()&&info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
return false;
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.contains(rValue))return ;
if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.isIf())return ;
if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue=n.getNext();
if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstructor()||root.scope.isGlobalScope()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
secondClause.removeChild(ref.node);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
ref.node=null;
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
secondClause.removeChild(ref.node);
ref.node=null;

if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isExtern){
return ;
}
if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&(objType.isPropertyInExterns(firstClause.getLastChild().getString()))&&(type.toMaybeFunctionType()).getParameters()!=null){
List<Action> Lists.newArrayList()=Lists.newArrayList();
Iterator<Node> (type.toMaybeFunctionType()).getParameters().iterator()=(recvType.toMaybeFunctionType()).getParameters().iterator();
Iterator<Node> lValue.children().iterator()=lValue.children().iterator();
argumentIter.next();
while(paramIter.hasNext()&&argumentIter.hasNext()){
Node secondClause=argumentIter.next();
Node (type.toMaybeFunctionType()).getParameters().iterator().next()=paramIter.next();
if(arg.getJSType()!=null&&arg.getJSType().isFunctionType()){
actions.addAll(getImplicitActionsFromArgument(arg,arg.getJSType().toMaybeFunctionType().getTypeOfThis(),param.getJSType()));
}
}
return actions;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(lValue.isFunction());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause==null){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue.setJSType(type);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(rValue);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isName());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()==null){
return ConcreteType.ALL;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(rValue);
Preconditions.checkArgument(rValue.isName());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.getObjectLitKeyTypeFromValueType(node,getJSType(node.getFirstChild()))==null){
rightType=getNativeType(UNKNOWN_TYPE);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getJSType(node).isEnumElementType()){
allowedValueType=allowedValueType.toMaybeEnumElementType().getPrimitiveType();
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=traverseChildren(lValue,scope);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.isAssignAdd()){
updateScopeForTypeChange(scope,firstClause,firstClause.getJSType(),type);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null){
return "";
}else if(type.isFunctionType()){
return getFunctionAnnotation(lValue);
}else if(type.isEnumType()){
return "/** @enum {"+type.toMaybeEnumType().getElementsType().toAnnotationString();
}else if(!type.isUnknownType()&&!type.isEmptyType()){
return "/** @type {"+node.getJSType().toAnnotationString();
}else {
return "";
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isExtern){
ObjectType namesMatch=type.dereference();
if(dereferenced!=null){
type=dereferenced;
}
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.isFunctionPrototypeType()||(type.toObjectType()!=null&&type.toObjectType().getConstructor()!=null)){
return type.toString();
}else if(lValue.getQualifiedName()!=null){
return qualifiedName;
}else if(type.isFunctionType()){
return "function";
}else {
return type.toString();
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause=rValue.getFirstChild();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue=rValue.getLastChild();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
firstClause=getJSType(secondClause);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValueInfo=getJSType(lValue);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.setJSType(type);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isCall()){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lValue.isGetProp()){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null||!nextNode.isExprResult()){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(declInfo.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isEnumType()){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(lValue.isCall());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo==null){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!"goog.exportSymbol".equals(rValueInfo)){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isString()){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null||firstClause.getNext().getNext()!=null){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue.getFirstChild().setJSType(thisType);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(knownType!=null&&(secondClause.isName()||name.isString())){
thisType.defineDeclaredProperty(name.getString(),jsType,lValue);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.setJSType(firstClause.getJSType());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.setJSDocInfo(new JSDocInfo());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=src.restrictByNotNullOrUndefined();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=addMarker(rValueInfo,nodeToInsertAfter,null);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Iterables.addAll(Sets.newTreeSet(ALPHA),rValueInfo.getAllImplementedInterfaces());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(ObjectType thisType : Sets.newTreeSet(ALPHA)){
node=addMarker(rValueInfo,nodeToInsertAfter,interfaceType);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.getQualifiedName()==null){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeRegistry.declareType(lValue.getQualifiedName(),getNativeType(UNKNOWN_TYPE));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
typeRegistry.overwriteDeclaredType(lValue.getQualifiedName(),knownType);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.isGetProp()){
defineSlot(candidate,candidate.getParent(),getNativeType(NO_TYPE),false);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null){
return null;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isExprAssign(firstClause.getFirstChild())){
return null;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isGetProp()&&lhs.getFirstChild().isThis()){
Node firstClause.getFirstChild().getFirstChild().getLastChild()=firstClause.getFirstChild().getFirstChild().getLastChild();
if(rhs.isName()&&rhs.getString().equals(rValueInfo.getString())){
Node secondClause.getLastChild()=lhs.getLastChild();
return propertyName;
}
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(node.getLastChild(),lValue);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null){
lValue.setJSType(type);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.replaceChild(node,lValue);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause.reportCodeChange();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isName()||n.isGetProp());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
return false;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assertDefinitionNode(lValue,Token.VAR);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(secondClause.isGetProp()&&firstClause.isAssign());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isTypeOf());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.getFirstChild()!=null);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=tightenTypesAfterAssertions(scope,lValue);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!SimpleDefinitionFinder.isSimpleFunctionDeclaration(rValueInfo)){
return true;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ObjectPropertyStringPreprocess.EXTERN_OBJECT_PROPERTY_STRING.equals(firstClause.getQualifiedName())){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==Token.GETPROP){
Node secondClause.getFirstChild()=secondClause.getFirstChild();
secondArgument.removeChild(newChild);
rValue.replaceChild(lValue,newChild);
n.replaceChild(secondArgument,IR.string(secondArgument.getFirstChild().getString()));
}else if(secondArgumentType==Token.GETELEM){
Node secondClause.getFirstChild()=secondArgument.getFirstChild();
secondArgument.removeChild(newFirstArgument);
Node secondClause.getLastChild()=secondArgument.getLastChild();
secondArgument.removeChild(newSecondArgument);
n.replaceChild(firstArgument,newFirstArgument);
n.replaceChild(secondArgument,newSecondArgument);
}else {
n.replaceChild(secondArgument,IR.string(secondArgument.getString()));
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(lValue.isSwitch());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue.getChildCount()!=4){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.getQualifiedName()==null){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(definitionSite.inExterns){
return false;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!SimpleDefinitionFinder.isSimpleFunctionDeclaration(lValue)){
return false;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause.isCall()&&parent.getFirstChild()==rValue){
return true;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isGet(secondClause)&&rValue==parent.getFirstChild()&&name.getNext().isString()&&name.getNext().getString().equals("call")){
Node firstClause=name.getAncestor(2);
if(gramps.isCall()&&gramps.getFirstChild()==parent){
return true;
}
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lValue.isName());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
annotate(lValue);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null||qName.isEmpty()){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null||var.isLocal()||var.isExtern()){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
nonExternFunctions.add(lValue);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(OBJECT_PROPERTY_STRING.equals(lValue.getQualifiedName())){
Node IR.name(EXTERN_OBJECT_PROPERTY_STRING)=IR.name(EXTERN_OBJECT_PROPERTY_STRING);
newName.copyInformationFrom(n);
node.replaceChild(n,newName);
compiler.reportCodeChange();
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!EXTERN_OBJECT_PROPERTY_STRING.equals(firstClause.getQualifiedName())){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isDeclared(secondClause.getString(),false)){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rhs.isName()&&rhs.getString().equals(var.name)&&node.isAssign()){
n.removeChild(rhs);
n.getParent().replaceChild(n,rhs);
compiler.reportCodeChange();
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isCandidateUsage(lValue)){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isAssign()&&parent.getFirstChild()==lValue){
rValueInfo.setInline(false);
}else {
fs.setRemove(false);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lValue.isName());
if(rValueInfo==null){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rValueInfo!=null&&info.isOverride()&&!isExtern){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null){
return proxyCast;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!"goog.reflect.object".equals(firstClause.getQualifiedName())||lValue.getChildCount()!=3){
return null;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.getNext().isObjectLit()){
return new ObjectLiteralCast(null,null,OBJECTLIT_EXPECTED);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause==null){
return true;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.isExported(ownerName)){
return true;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isGetProp());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.isName()&&isNameAssignedTo(name.getString(),lValue)){
return false;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null){
return false;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lValue.isFunction());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
inferThisType(info);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lValue.isAssign());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue==null||lValue.getParent()==null){
return null;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(NodeUtil.isAssignmentOp(lValue));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause.isName()){
return new Assign(lValue,current,false);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(ref.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.setSideEffectFlags(Node.NO_SIDE_EFFECTS);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lValue.isCall());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(doc.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isAssign()){
ownerName=n.getFirstChild().getQualifiedName();
}else if(n.isVar()){
name=n.getFirstChild().getString();
}else if(n.isFunction()){
name=n.getFirstChild().getString();
if(name.isEmpty()){
return ;
}
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isExprAssign(lValue)){
return false;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.isExprResult()){
Node firstClause=n.getFirstChild();
rValueInfo=assign.getLastChild();
}else if(n.isVar()){
Node secondClause=n.getFirstChild();
value=name.getFirstChild();
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.inGlobalScope()&&!false){
compiler.report(t.makeError(lValue,NON_GLOBAL_ID_GENERATOR_CALL));
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!false){
for(Node node : lValue.getAncestors()){
if(NodeUtil.isControlStructure(ancestor)){
compiler.report(secondClause.makeError(n,CONDITIONAL_ID_GENERATOR_CALL));
return ;
}
}
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause!=null&&parent.isName()){
Node rValueInfo=parent.getParent();
if(gramps!=null&&gramps.isVar()){
return false;
}
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null)return relationship;
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isCall(),"Expected: CALL, Got: %s",Token.name(node.getType()));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.functionCallHasSideEffects(secondClause)){
return true;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isUnknownType()||type.isUnionType()){
return false;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.isNumber()){
ownerName=NodeUtil.getStringValue(property);
}else {
propertyName=property.getString();
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isGetElem()){
firstClause.setQuotedString();
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause.addChildToBack(secondClause.getNext().detachFromParent());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.addChildToBack(firstClause);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.detachFromParent();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(namesMatch||type!=null);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defineSlot(lValue,secondClause,n.getQualifiedName(),type,namesMatch);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null){
return getPropertyDeprecationInfo(implicitProto,ownerName);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerName.equals(firstClause.getFirstChild().getString())){
return false;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.mayHaveSideEffects(firstClause.getNext())||NodeUtil.canBeSideEffected(rhs)){
return false;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isLiteralValue(firstClause.getNext(),true)&&mightContainForwardReference(rhs,ownerName)){
return false;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (lValue.getType()){
case Token.ARRAYLIT :
if(!collectArrayProperty(value,node)){
return false;
}
break;

case Token.OBJECTLIT :
if(!collectObjectProperty(value,propertyCandidate)){
return false;
}
break;

default :
throw new IllegalStateException();

}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isCall());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(NodeUtil.isGet(rValue.getFirstChild()));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
state.extractBeforeStatement=firstClause;
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(NodeUtil.isGet(lValue));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
state.extractBeforeStatement=extractExpression(lValue.getFirstChild(),state.extractBeforeStatement);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.removeFirstChild();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
secondClause.replaceChild(rValue,IR.call(IR.getprop(firstClause.getFirstChild().cloneNode(),IR.string("call")),extractExpression(lValue.getFirstChild(),state.extractBeforeStatement).getFirstChild().cloneNode()).srcref(rValue));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isCall());
Preconditions.checkArgument(NodeUtil.isGet(rValue.getFirstChild()));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isCall());
Preconditions.checkArgument(NodeUtil.isGet(lValue));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isCall());
rValue.removeFirstChild();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(NodeUtil.isGet(rValue.getFirstChild()));
Preconditions.checkArgument(NodeUtil.isGet(lValue));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(NodeUtil.isGet(rValue.getFirstChild()));
rValue.removeFirstChild();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(NodeUtil.isGet(lValue));
rValue.removeFirstChild();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isCall());
Preconditions.checkArgument(NodeUtil.isGet(rValue.getFirstChild()));
Preconditions.checkArgument(NodeUtil.isGet(lValue));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isCall());
Preconditions.checkArgument(NodeUtil.isGet(rValue.getFirstChild()));
rValue.removeFirstChild();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isCall());
Preconditions.checkArgument(NodeUtil.isGet(lValue));
rValue.removeFirstChild();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(NodeUtil.isGet(rValue.getFirstChild()));
Preconditions.checkArgument(NodeUtil.isGet(lValue));
rValue.removeFirstChild();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isCall());
Preconditions.checkArgument(NodeUtil.isGet(rValue.getFirstChild()));
Preconditions.checkArgument(NodeUtil.isGet(lValue));
rValue.removeFirstChild();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(rValue.isName()||n.isString());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.hasEnumParameterType()){
if(rValue!=null&&c.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.hasEnumParameterType()){
if(!NodeUtil.isExprAssign(node)){
return false;
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.hasEnumParameterType()){
if((rValue.getFirstChild()==null)||!rValue.getFirstChild().isFunction()){
return false;
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.hasEnumParameterType()){
return secondClause.isGetProp()&&secondClause.getLastChild().getString().equals("prototype");
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.hasEnumParameterType()){
if(!NodeUtil.isExprAssign(node)){
return false;
}
if((rValue.getFirstChild()==null)||!rValue.getFirstChild().isFunction()){
return false;
}
return secondClause.isGetProp()&&secondClause.getLastChild().getString().equals("prototype");

if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(lValue.isNew());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause.getString().equals("String")){
Node secondClause.getNext()=objectType.getNext();
String null=null;
if(value==null){
stringValue="";
}else {
if(!NodeUtil.isImmutableValue(value)){
return lValue;
}
stringValue=NodeUtil.getStringValue(value);
}
if(stringValue==null){
return n;
}
Node firstClause=n.getParent();
Node IR.string(null)=IR.string(stringValue);
parent.replaceChild(n,newString);
newString.copyInformationFrom(parent);
reportCodeChange();
return newString;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.getChildCount()!=3){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isCall()||callsite.isNew());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lValue.isObjectLit());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(lValue.isCall()||n.isNew());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause==null||!parent.isFunction()||lValue==parent.getFirstChild()||parent==scope.getRootNode()){
if(NodeUtil.isStatementParent(lValue)){
for(Node rValue=n.getFirstChild();child!=null;child=child.getNext()){
if(NodeUtil.isHoistedFunctionDeclaration(child)){
defineFunctionLiteral(child,n);
}
}
}
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.hasEnumParameterType()){
if(rValue==null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info.hasEnumParameterType()){
if(null==rValue&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info.hasEnumParameterType()){
pattern=makeForwardSlashBracketSafe(secondClause.getNext());
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.hasEnumParameterType()){
firstClause.replaceChild(lValue,node);
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.hasEnumParameterType()){
reportCodeChange();
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.hasEnumParameterType()){
return node;
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.hasEnumParameterType()){
pattern=makeForwardSlashBracketSafe(secondClause.getNext());
firstClause.replaceChild(lValue,node);
reportCodeChange();
return node;

if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(null==secondClause.getNext()||(null!=rValue&&null!=flags.getNext())){
return lValue;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isFor());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isForIn(rValue)){
return n;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isEmpty()){
increment=trySimplifyUnusedResult(increment,false);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rValue.getFirstChild().isEmpty()){
return n;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getImpureBooleanValue(lValue)!=TernaryValue.FALSE){
return rValue;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(rValue);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!mayHaveSideEffects(lValue)){
NodeUtil.removeChild(rValue.getParent(),n);
}else {
Node IR.exprResult(lValue.detachFromParent()).copyInformationFrom(cond)=IR.exprResult(cond.detachFromParent()).copyInformationFrom(cond);
n.getParent().replaceChild(n,statement);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isFor());
NodeUtil.redeclareVarsInsideBranch(rValue);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
thisType.setOwnerFunction(this);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisType!=null){
oldPrototype.setOwnerFunction(null);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch){
clearCachedValues();
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isGetProp()){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause!=null){
createEdge(lValue,Branch.UNCOND,computeFallThrough(child));
}else {
createEdge(node,Branch.UNCOND,computeFollowNode(node,this));
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause!=null){
swtich (parent.getType()){
case Token.DEFAULT_CASE :

case Token.CASE :

case Token.TRY :
break;

default :
if(lValue.isBlock()&&node.isSyntheticBlock()){
createEdge(node,Branch.SYN_BLOCK,computeFollowNode(node,this));
}
break;

}
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(isConstructor()||isInterface());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(getInstanceType().hasProperty(ownerName));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue==null){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isExprResult()||n.isBlock()){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isQualifiedName()&&n.getJSDocInfo()!=null){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(secondClause.isIf());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isStatementBlock(secondClause.getParent())){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(firstClause);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(firstClause.getNext());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isGet(secondClause)){
lValue.putBooleanProp(Node.FREE_CALL,true);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValueInfo==null||previousCase.getNext()==node);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isTry());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!lValue.hasChildren()){
NodeUtil.redeclareVarsInsideBranch(firstClause);
if(firstClause.getNext()!=null){
rValue.removeChild(finallyBlock);
n.getParent().replaceChild(n,finallyBlock);
}else {
n.getParent().removeChild(n);
}
reportCodeChange();
return finallyBlock;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!(rValue.isScript()||rValueInfo!=null&&grandparent.isFunction()&&parent.isBlock())){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(node.hasOneChild());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(docInfo.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.getLastChild().isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.getFirstChild().getFirstChild().isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.getFirstChild().isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(scope.getRootNode().getFirstChild().getNext().getChildCount()==2){
secondClause.markAllParametersEscaped();
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.analyze();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(firstClause.isName());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(knownType==null){
varType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope.inferSlotType(firstClause.getString(),knownType);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(secondClause.isHook());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.detachChildren();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(lValue)){
node=IR.comma(cond,rValueInfo.toBoolean(true)?lValue.getNext():lValue.getNext().getNext()).srcref(secondClause);
}else {
replacement=branchToKeep;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause.replaceChild(secondClause,node);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(firstClause);
reportCodeChange();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue=trySimplifyUnusedResult(left);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.isReturn()){
return statement.getFirstChild();
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isForIn(firstClause)){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (rValue.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(firstClause.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node firstClause.getParent()=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isVar()&&!n.getFirstChild().hasChildren()){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.removeChild(rValue.getParent(),n);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(rValue);
compiler.reportCodeChange();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(firstClause.isObjectLit());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause==null){
return null;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.contains(rValue))return ;
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.isIf())return ;
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue=n.getNext();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isExtern){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&!define.isGlobal()){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(firstClause.isString());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.getParent().replaceChild(node,IR.string(ownerName));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause=firstClause.getChildAtIndex(1);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,NodeUtil.getFunctionBody(rValue),new FindCallbackArgumentReferences(callbackFunction,Lists.newArrayList(),Lists.newArrayList(),secondClause.isArrayLit()));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isStatement(secondClause)){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
knownType=rValue.getNext();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&!p.canCollapse()){
continue;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isExtern){
node.removeChild(rValue);
lValue.detachFromParent();
}else {
secondClause=IR.name(appendPropForAlias(ownerName,ownerName));
if(key.getBooleanProp(Node.IS_CONSTANT_NAME)){
refNode.putBooleanProp(Node.IS_CONSTANT_NAME,true);
}
key.replaceChild(value,refNode);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause.addChildToFront(lValue);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getBooleanProp(Node.IS_CONSTANT_NAME)){
firstClause.putBooleanProp(Node.IS_CONSTANT_NAME,true);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(lValue.isGetProp());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
firstClause=knownType!=null?boxedType:instanceType;
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValueInfo!=null);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
Preconditions.checkArgument(firstClause.isString());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
node.getParent().replaceChild(node,IR.string(ownerName));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
reportCodeChange();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(firstClause.isString());
node.getParent().replaceChild(node,IR.string(ownerName));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(firstClause.isString());
reportCodeChange();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.getParent().replaceChild(node,IR.string(ownerName));
reportCodeChange();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
Preconditions.checkArgument(firstClause.isString());
node.getParent().replaceChild(node,IR.string(ownerName));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
Preconditions.checkArgument(firstClause.isString());
reportCodeChange();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
node.getParent().replaceChild(node,IR.string(ownerName));
reportCodeChange();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(firstClause.isString());
node.getParent().replaceChild(node,IR.string(ownerName));
reportCodeChange();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
Preconditions.checkArgument(firstClause.isString());
node.getParent().replaceChild(node,IR.string(ownerName));
reportCodeChange();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.hasEnumParameterType()){
try{
regexTree=RegExpTree.parseRegExp(rValue.getFirstChild().getString(),rValue.getChildCount()==2?subtree.getLastChild().getString():"");
}catch (IllegalArgumentException ex) {
  return subtree;
}

if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&sourceName!=null){
Preconditions.checkState(sourceFile.equals(lValue.getSourceFileName()));
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.GETTER_DEF,lValue);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(lValue,1);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(lValue);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(firstClause);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",lValue);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.SETTER_DEF,lValue);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(lValue,1);
validateObjectLiteralKeyName(lValue);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(lValue,1);
validateFunctionExpression(firstClause);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(lValue,1);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",lValue);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(lValue);
validateFunctionExpression(firstClause);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(lValue);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",lValue);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",lValue);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(lValue,1);
validateObjectLiteralKeyName(lValue);
validateFunctionExpression(firstClause);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(lValue,1);
validateObjectLiteralKeyName(lValue);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",lValue);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(lValue,1);
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",lValue);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(lValue);
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",lValue);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(lValue,1);
validateObjectLiteralKeyName(lValue);
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",lValue);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkNoTypeCheckSection(lValue,true);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(thisType.isUnknownType());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue==null){
return n;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null){
return rValue;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((int)namesMatch!=namesMatch){
error(INVALID_GETELEM_INDEX_ERROR,lValue);
return node;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((int)namesMatch<0){
error(INDEX_OUT_OF_BOUNDS_ERROR,lValue);
return node;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(null==null){
error(INDEX_OUT_OF_BOUNDS_ERROR,lValue);
return node;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(null.isEmpty()){
elem=NodeUtil.newUndefinedNode(elem);
}else {
firstClause.removeChild(elem);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch){
Preconditions.checkState(lValue.isName()||NodeUtil.isGet(expr));
Node firstClause=new Node(NodeUtil.getOpFromAssignmentOp(rValue)).copyInformationFrom(parent);
Node rValue.getLastChild()=parent.getLastChild();
parent.setType(Token.ASSIGN);
parent.replaceChild(rightOperand,opNode);
opNode.addChildToFront(IR.name(getTempConstantValueName()).srcref(lValue));
opNode.addChildToBack(rightOperand);
node=expr.cloneTree();
}else {
parent.replaceChild(expr,replacementValueNode);
tempNameValue=expr;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isExtern){
typeRegistry.createConstructorType(ownerName,firstClause.getSourceNode(),node,type).setStruct();
}else if(isExtern){
fnType.setDict();
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maybeSetBaseType(typeRegistry.createConstructorType(ownerName,firstClause.getSourceNode(),node,type));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getScopeDeclaredIn().isGlobal()&&!ownerName.isEmpty()){
typeRegistry.declareType(fnName,typeRegistry.createConstructorType(ownerName,firstClause.getSourceNode(),node,type).getInstanceType());
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=skipFinallyNodes(follow);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ControlFlowAnalysis.computeFollowNode(lValue)==null&&(lValue.isThrow()||lValue.getFirstChild()!=null)){
return n;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ControlFlowAnalysis.computeFollowNode(lValue)==null||areMatchingExits(lValue,follow)){
n.detachFromParent();
reportCodeChange();
return null;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(ref.node.getLastChild(),node);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isExtern){
return lValue;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=ControlFlowAnalysis.computeFollowNode(secondClause)){
if(!isPure(lValue.getFirstChild())){
return lValue;
}
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ControlFlowAnalysis.computeFollowNode(secondClause)==null&&(lValue.isThrow()||lValue.getFirstChild()!=null)){
return n;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ControlFlowAnalysis.computeFollowNode(secondClause)==null||areMatchingExits(lValue,follow)){
Node IR.breakNode()=IR.breakNode();
n.getParent().replaceChild(n,replacement);
this.reportCodeChange();
return replacement;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isDo());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(rValue,n.getFirstChild()));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause.replaceChild(rValue,rValue.removeFirstChild());
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(lValue)){
Node IR.exprResult(lValue.detachFromParent()).srcref(cond)=IR.exprResult(cond.detachFromParent()).srcref(cond);
firstClause.addChildAfter(condStatement,rValue.removeFirstChild());
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isDo());
if(NodeUtil.getImpureBooleanValue(lValue)!=TernaryValue.FALSE){
return rValue;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isDo());
reportCodeChange();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getImpureBooleanValue(lValue)!=TernaryValue.FALSE){
return rValue;
}
reportCodeChange();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isDo());
if(NodeUtil.getImpureBooleanValue(lValue)!=TernaryValue.FALSE){
return rValue;
}
reportCodeChange();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.containsFunction(lValue)){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause.analyze();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getString().isEmpty()){
Preconditions.checkState(lValue.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (lValue.getType()){
case Token.NUMBER :
return ;

case Token.AND :

case Token.OR :

case Token.COMMA :
tryConvertToNumber(n.getLastChild());
return ;

case Token.HOOK :
tryConvertToNumber(n.getChildAtIndex(1));
tryConvertToNumber(n.getLastChild());
return ;

case Token.NAME :
if(!NodeUtil.isUndefined(n)){
return ;
}
break;

}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue.getParent().replaceChild(n,firstClause);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
return ;
}
reportCodeChange();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue==null||n==lValue){
return ;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!NodeUtil.isObjectLitKey(rValue,n.getParent()));
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(firstClause!=null);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(nonExternFunctions,"\"replacements\" is null.");
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(nonExternFunctions.size()==1||secondClause.getType()==Token.BLOCK||parentType==Token.SCRIPT||parentType==Token.LABEL);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getType()==Token.LABEL&&nonExternFunctions.size()!=1){
Node firstClause=IR.block();
for(Node lValue : nonExternFunctions){
newChild.copyInformationFrom(node);
Node lValue.getParent()=newChild.getParent();
block.addChildToBack(newChild);
}
secondClause.replaceChild(node,block);
}else {
for(Node newChild : replacements){
newChild.copyInformationFrom(node);
Node oldParent=newChild.getParent();
parent.addChildBefore(newChild,node);
}
parent.removeChild(node);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
notifyOfRemoval(node);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.getString().equals("split")){
lValue=tryFoldStringSplit(subtree,lValue,lValue.getNext());
}else if(firstArg==null){
if(functionNameString.equals("toLowerCase")){
subtree=tryFoldStringToLowerCase(subtree,stringNode);
}else if(functionNameString.equals("toUpperCase")){
subtree=tryFoldStringToUpperCase(subtree,stringNode);
}
return subtree;
}else if(NodeUtil.isImmutableValue(firstArg)){
if(functionNameString.equals("indexOf")||functionNameString.equals("lastIndexOf")){
subtree=tryFoldStringIndexOf(subtree,functionNameString,stringNode,firstArg);
}else if(functionNameString.equals("substr")){
subtree=tryFoldStringSubstr(subtree,stringNode,firstArg);
}else if(functionNameString.equals("substring")){
subtree=tryFoldStringSubstring(subtree,stringNode,firstArg);
}else if(functionNameString.equals("charAt")){
subtree=tryFoldStringCharAt(subtree,stringNode,firstArg);
}else if(functionNameString.equals("charCodeAt")){
subtree=tryFoldStringCharCodeAt(subtree,stringNode,firstArg);
}
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(null!=null){
secondClause.removeChild(result);
firstClause.replaceChild(n,result);
reportCodeChange();
return result;
}else {
return n;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FUNCTION :

if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.VAR :

if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
if(!secondClause.mayHaveNonEmptyReturns()&&!contents.mayHaveSingleThrow()){
returnType=typeRegistry.getNativeType(VOID_TYPE);
namesMatch=true;
}
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
returnType=typeRegistry.getNativeType(UNKNOWN_TYPE);
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue==null){
throw new IllegalStateException("All Function types must have params and a return type");
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
typeRegistry.clearTemplateTypeNames();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue==null){
throw new IllegalStateException("All Function types must have params and a return type");
}
typeRegistry.clearTemplateTypeNames();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.POS :

if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.AND :

if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.INC :

if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETTER_DEF :

if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case REGISTER_NUMBER :

if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case OVERRIDE_DEFAULT_VALUE :

if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETELEM :

if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETPROP :

if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OR :

if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.HOOK :

if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasParameterType(lValue.getString())){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(node!=null){
secondClause=parametersNode.getFirstChild();
}
if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info==null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(docInfo!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue!=null&&NodeUtil.isObjectLitKey(lValue,lValue.getParent())){
return false;
}
if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info!=null){
type=secondClause.restrictByNotNullOrUndefined();
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lValue.isName());
if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info!=null){
if(namesMatch!=null){
secondClause.setDesc(namesMatch);
messageHasDesc=true;
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null){
if(info.getMeaning()!=null){
secondClause.setMeaning(info.getMeaning());
}
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null){
if(namesMatch!=null){
secondClause.setDesc(namesMatch);
messageHasDesc=true;
}
if(info.getMeaning()!=null){
secondClause.setMeaning(info.getMeaning());
}

if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rootNodeJsDoc!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null){
if((lValue.getJSDocInfo()!=null)&&(irNode.getJSDocInfo().getLicense()!=null)){
fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());
}
irNode.setJSDocInfo(fileOverviewInfo);
fileOverviewInfo.setAssociatedNode(irNode);
}
if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.contains(rValue))return ;
if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.isIf())return ;
if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue=n.getNext();
if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null){
secondClause.removeChild(ref.node);
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null){
ref.node=null;
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null){
secondClause.removeChild(ref.node);
ref.node=null;

if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isExtern){
return ;
}
if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getString().isEmpty()){
Preconditions.checkState(lValue.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));
return ;
}
if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypedScopeCreator,1320
========
if(rValue!=null&&rValue.isFunction()&&lValue.isName()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return normalizeClassType(node.getJSType());
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(lValue);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(lValue.isName());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((lValue.getFirstChild()!=null)&&(name.getFirstChild().isFunction())){
return createConcreteFunction(name.getFirstChild(),scope);
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(lValue);
Preconditions.checkArgument(lValue.isName());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(thisParam!=null&&thisParam.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&!thisParam.isOptionalArg()&&!thisParam.isVarArgs()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&!rValue.isOptionalArg()&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(thisParam!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&thisParam.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!this.type.isSubtype(that.returnType)){
return false;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null){
return "";
}else if(type.isFunctionType()){
return getFunctionAnnotation(lValue);
}else if(type.isEnumType()){
return "/** @enum {"+type.toMaybeEnumType().getElementsType().toAnnotationString();
}else if(!type.isUnknownType()&&!type.isEmptyType()){
return "/** @type {"+node.getJSType().toAnnotationString();
}else {
return "";
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&rValue.isStringKey()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(type);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null){
return scope;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo.hasReferenceName()&&!lValue.getJSDocInfo()!=null&&n.getJSDocInfo().getLendsName()!=null){
return scope;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&lValue.getParent().isExprResult()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&getJSType(scope.getRootNode()).isConstructor()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue==null||lValue.getParent()==null||lValue.getParent().getParent()==null&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo==null){
return null;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo.lastIndexOf('.')==-1){
return null;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.endsWith(".prototype")){
return null;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&rValue.hasOneChild()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!lValue.isGetProp()){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null||!nextNode.isExprResult()){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isCall()){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isGetProp()){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&lValue.isQualifiedName()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo!=null&&info.isConstructor()){
lValue=secondClause.getFirstChild();
}else {
info=firstClause.getJSDocInfo();
if(info!=null&&info.isConstructor()){
name=n.getFirstChild();
}
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&info.hasType()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
declareArguments(lValue);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null||!rValue.isFunction()||NodeUtil.isVarArgsFunction(rValue)){
return false;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((firstClause==null)||!lValue.isGetProp()){
return false;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(codingConvention.isExported(firstClause.getLastChild().getString())){
return false;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&type.isFunctionType()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&firstClause.isAssign()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node.isNew()){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null||!lValue.isGetProp()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue.getFirstChild().setJSType(thisType);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(knownType!=null&&(secondClause.isName()||name.isString())){
thisType.defineDeclaredProperty(name.getString(),jsType,lValue);
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue==null||!lValue.isFunction()||NodeUtil.isVarArgsFunction(lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue==null||!rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&NodeUtil.isVarArgsFunction(lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(definitionSite.inExterns){
return false;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!SimpleDefinitionFinder.isSimpleFunctionDeclaration(lValue)){
return false;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue==null||!rValue.isFunction()&&NodeUtil.isVarArgsFunction(lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.copyNameAnnotations(lValue.getLastChild(),firstClause);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null){
firstClause.setJSType(type);
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.replaceChild(lValue,firstClause);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&lValue.isGetProp()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(secondClause.isGetProp()&&firstClause.isAssign());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isTypeOf());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.getFirstChild()!=null);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&rValue.isObjectLit()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&NodeUtil.isObjectLitKey(secondClause,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause.isVar()||parent.isFunction()){
return true;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isGet(secondClause)&&rValue==parent.getFirstChild()&&name.getNext().isString()&&name.getNext().getString().equals("call")){
Node firstClause=name.getAncestor(2);
if(gramps.isCall()&&gramps.getFirstChild()==parent){
return true;
}
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&NodeUtil.isFunctionExpression(lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&NodeUtil.isConstantByConvention(compiler.getCodingConvention(),lValue,node)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(OBJECT_PROPERTY_STRING.equals(rValue.getQualifiedName())){
Node IR.name(EXTERN_OBJECT_PROPERTY_STRING)=IR.name(EXTERN_OBJECT_PROPERTY_STRING);
newName.copyInformationFrom(n);
node.replaceChild(n,newName);
compiler.reportCodeChange();
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rValue.isNew()){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!EXTERN_OBJECT_PROPERTY_STRING.equals(firstClause.getQualifiedName())){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.replaceChild(lValue,NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),compiler.getCodingConvention().getGlobalObject()).srcrefTree(lValue));
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
rValue.replaceChild(secondClause,NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),lValue.getQualifiedName()+".").srcrefTree(secondClause));
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.replaceChild(lValue,NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),compiler.getCodingConvention().getGlobalObject()).srcrefTree(lValue));
compiler.reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&mayHaveSideEffects(rValue.getFirstChild())){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lValue.isSwitch());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
inferThisType(info);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&lValue.getFirstChild().isName()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(firstClause.getQualifiedName()==null){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isString()){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&lValue.getString().equals(ownerName)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lValue.isFunction());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(lValue.isFunction());
if(rValue!=null&&rValue.isFunction()&&NodeUtil.isFunctionExpression(lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!rValueInfo!=null&&info.isOverride()&&!secondClause!=null&&superClass.getInstanceType().hasProperty(ownerName)){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lValue.isName());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isCandidateUsage(lValue)){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isNew()){
Node firstClause=parent.getFirstChild();
if(target.isName()&&target.getString().equals(ObjectPropertyStringPreprocess.EXTERN_OBJECT_PROPERTY_STRING)){
rValueInfo.setInline(false);
}
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null){
return ;
}else if(NodeUtil.isForIn(nextSibling)){
Node secondClause=nextSibling;
Node lValue=forNode.getFirstChild();
if(forVar.isName()&&rValue.isVar()){
Node firstClause=n.getFirstChild();
if(!name.hasChildren()&&forVar.getString().equals(name.getString())){
node.removeChild(n);
forNode.replaceChild(forVar,n);
compiler.reportCodeChange();
}
}
}else if(nextSibling.isFor()&&nextSibling.getFirstChild().isEmpty()){
if(NodeUtil.containsType(n,Token.IN)){
return ;
}
Node forNode=nextSibling;
Node secondClause.getFirstChild()=forNode.getFirstChild();
parent.removeChild(n);
Node node;
if(n.isVar()){
newInitializer=n;
}else {
Preconditions.checkState(n.hasOneChild());
newInitializer=n.getFirstChild();
n.removeChild(newInitializer);
}
forNode.replaceChild(oldInitializer,newInitializer);
compiler.reportCodeChange();
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(lValue.isCall());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch!=null){
return proxyCast;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isQualifiedName()){
return null;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.getNext().isObjectLit()){
return new ObjectLiteralCast(null,null,OBJECTLIT_EXPECTED);
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isCall()&&rValue.getFirstChild()!=null&&rValue.getFirstChild().isName()&&"define".equals(rValue.getFirstChild().getString())){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isCall()&&n.getFirstChild()!=null&&n.getFirstChild().isName()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&"define".equals(rValue.getFirstChild().getString())){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.getFirstChild().isName()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.getFirstChild().isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.getFirstChild().isName()&&"define".equals(rValue.getFirstChild().getString())){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.getFirstChild().isFunction()&&"define".equals(rValue.getFirstChild().getString())){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!secondClause.isCall()&&!node.isNew()){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.setSideEffectFlags(Node.NO_SIDE_EFFECTS);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&GET_CSS_NAME_FUNCTION.equals(rValue.getFirstChild().getQualifiedName())){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&lValue.isScript()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(firstClause==null||!parent.isFunction()||lValue==parent.getFirstChild()||parent==scope.getRootNode()){
if(NodeUtil.isStatementParent(lValue)){
for(Node lValue.getFirstChild()=n.getFirstChild();child!=null;child=child.getNext()){
if(NodeUtil.isHoistedFunctionDeclaration(child)){
defineFunctionLiteral(child,n);
}
}
}
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&rValue.isHook()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo==null||!parent.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&NodeUtil.isLValue(lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(lValue.getType()==Token.BLOCK||root.getType()==Token.SCRIPT);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&NodeUtil.isObjectLitKey(lValue,lValue.getParent())){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch!=null)return relationship;
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!node.isVar()){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(node.hasOneChild());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.isNumber()){
ownerName=NodeUtil.getStringValue(property);
}else {
propertyName=property.getString();
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isGetElem()){
firstClause.setQuotedString();
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause.addChildToBack(secondClause.getNext().detachFromParent());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.addChildToBack(firstClause);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.detachFromParent();
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null){
if((lValue.getJSDocInfo()!=null)&&(irNode.getJSDocInfo().getLicense()!=null)){
fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());
}
irNode.setJSDocInfo(fileOverviewInfo);
fileOverviewInfo.setAssociatedNode(irNode);
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isBlock()&&firstClause!=null&&parent.isTry()&&NodeUtil.getCatchBlock(parent)==node&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause!=null){
createEdge(rValue,Branch.UNCOND,computeFallThrough(child));
}else {
createEdge(node,Branch.UNCOND,computeFollowNode(node,this));
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause!=null){
swtich (parent.getType()){
case Token.DEFAULT_CASE :

case Token.CASE :

case Token.TRY :
break;

default :
if(rValue.isBlock()&&node.isSyntheticBlock()){
createEdge(node,Branch.SYN_BLOCK,computeFollowNode(node,this));
}
break;

}
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&type.isUnknownType()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName()||n.isString());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&lValue.getFirstChild().getFirstChild().isName()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&thisType.isEnumType()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&ownerName.equals(lValue.getString())){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getNext().isString()&&!"".equals(pattern.getString())&&(null==rValue||flags.isString())&&(isEcmaScript5OrGreater()||!containsUnicodeEscape(pattern.getString()))){
pattern=makeForwardSlashBracketSafe(pattern);
Node lValue;
if(null==flags||"".equals(flags.getString())){
regexLiteral=IR.regexp(pattern);
}else {
if(!areValidRegexpFlags(flags.getString())){
error(INVALID_REGULAR_EXPRESSION_FLAGS,flags);
return lValue;
}
if(!areSafeFlagsToFold(flags.getString())){
return n;
}
n.removeChild(flags);
regexLiteral=IR.regexp(pattern,flags);
}
firstClause.replaceChild(n,regexLiteral);
reportCodeChange();
return regexLiteral;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&rValue.isOr()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&canNameValueChange(lValue,node)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isName()){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getString().isEmpty()){
Preconditions.checkState(lValue.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(lValue.isFunction());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isStatement(lValue)){
return true;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isName()&&firstClause.isVar()){
return true;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isExprAssign(firstClause)&&secondClause.getChildAtIndex(1)==lValue){
return true;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==var.input||currInput==null||varInput==null){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isName()){
return ;
}
if(secondClause.getString().isEmpty()){
Preconditions.checkState(lValue.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState((NodeUtil.isAssociative(secondClause.getType())&&NodeUtil.isCommutative(opType))||secondClause.isAdd());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!secondClause.isAdd()||!NodeUtil.mayBeString(n));
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&rValue.isComma()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue==null){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isExprResult()||n.isBlock()){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isQualifiedName()&&n.getJSDocInfo()!=null){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValueInfo==null||previousCase.getNext()==node);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node.getParent().getLastChild()!=node&&rValueInfo!=null){
Node firstClause=previousCase.getLastChild();
if(!previousBlock.hasChildren()||!isExit(previousBlock.getLastChild())){
return false;
}
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&lValue.isUnscopedQualifiedName()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue==null||rValueInfo==null&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(secondClause.isIf());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isStatementBlock(secondClause.getParent())){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(firstClause);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(firstClause.getNext());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&secondClause.isVarArgs()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&firstClause.getString().equals("lastIndexOf")){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue!=null&&lValue.isName()&&lValue.getString().equals(var.name)&&secondClause.isAssign()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue!=null&&rhs.isName()&&rhs.getString().equals(var.name)&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&secondClause.isAssign()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&ARGUMENTS.equals(lValue.getString())){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&root.scope.isGlobalScope()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.inGlobalScope()&&lValue.getJSDocInfo()!=null&&lValue.getJSDocInfo().isDefine()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.inGlobalScope()&&lValue.getJSDocInfo()!=null&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&lValue.getJSDocInfo().isDefine()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&isDeclaration(lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&mayThrowException(lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rValueInfo.hasChildren()){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(true){
Node IR.or(rValue.cloneTree(),IR.objectlit().srcref(lValue)).srcref(n)=IR.or(rValue.cloneTree(),IR.objectlit().srcref(lValue)).srcref(n);
Node IR.assign(rValue.cloneTree(),IR.or(rValue.cloneTree(),IR.objectlit().srcref(lValue)).srcref(n)).srcref(lValue)=IR.assign(objectToExtend.cloneTree(),assignVal).srcref(n);
firstClause.addChildrenToFront(IR.exprResult(assign).srcref(n));
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&collapseAssignEqualTo(node,node,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.isDeprecated()&&shouldEmitDeprecationWarning(secondClause,lValue,firstClause)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&docInfo.isDeprecated()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&shouldEmitDeprecationWarning(secondClause,lValue,firstClause)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.isFunction()||parent.isVar()){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return createDefaultObjectUnion(type);
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
if(secondClause!=null&&("Array".equals(lValue.getString())||"Object".equals(lValue.getString()))){
JSType createFromTypeNodesInternal(secondClause.getLastChild(),sourceName,scope)=createFromTypeNodesInternal(secondClause.getLastChild(),sourceName,scope);
namedType=new ParameterizedType(this,(ObjectType)type,createFromTypeNodesInternal(secondClause.getLastChild(),sourceName,scope));
if(secondClause.hasMoreThanOneChild()){
JSType knownType=createFromTypeNodesInternal(secondClause.getFirstChild(),sourceName,scope);
namedType=new IndexedType(this,(ObjectType)type,knownType);
}
}
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue=trySimplifyUnusedResult(left);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&RENAME_PROPERTY_FUNCTION_NAME.equals(lValue.getString())){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&secondClause.isFunction()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isForIn(firstClause)){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (rValue.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(firstClause.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node firstClause.getParent()=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isVar()&&!n.getFirstChild().hasChildren()){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(rValue);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.removeChild(rValue.getParent(),n);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(rValue);
compiler.reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&NodeUtil.isFunctionObjectCall(lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&rValue.isSetterDef()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&containsName(node)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&isMarkedExpose(lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&rValue.isIf()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!isExtern){
return ;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=skipFinallyNodes(follow);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=ControlFlowAnalysis.computeFollowNode(secondClause)){
if(!isPure(lValue.getFirstChild())){
return lValue;
}
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ControlFlowAnalysis.computeFollowNode(secondClause)==null||areMatchingExits(lValue,follow)){
Node IR.breakNode()=IR.breakNode();
n.getParent().replaceChild(n,replacement);
this.reportCodeChange();
return replacement;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&rValue.getString().endsWith("__")){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause.contains(rValue))return ;
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node.isIf())return ;
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue=n.getNext();
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isGet(lValue)&&namesMatch==secondClause.getParent().getFirstChild()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&lValue.isOr()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&secondClause.isAdd()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause!=null&&objectNode.isName()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&lValue.isNumber()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(node.isCall());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(firstClause.isString());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.getParent().replaceChild(node,IR.string(ownerName));
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&rValue.isQualifiedName()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&rValue.isFunction()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue.getFirstChild().getString()!=null&&!name.isEmpty()&&node!=null&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.isAssign()&&lValue.getFirstChild()==rValue&&rValue.getNext().isFunction()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue.isAssign()&&parent.getFirstChild()==rValue&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&rValue.getNext().isFunction()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&lValue.isFunction()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&ownerName.equals(rValue.getChildCount()==2?subtree.getLastChild().getString():"")){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&"module.exports".equals(lValue.getQualifiedName())){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(node.isCall());
if(rValue!=null&&rValue.isFunction()&&lValue.isNumber()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(firstClause.isString());
if(rValue!=null&&rValue.isFunction()&&lValue.isNumber()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.getParent().replaceChild(node,IR.string(ownerName));
if(rValue!=null&&rValue.isFunction()&&lValue.isNumber()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&lValue.isNumber()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
Preconditions.checkArgument(firstClause.isString());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
node.getParent().replaceChild(node,IR.string(ownerName));
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(firstClause.isString());
node.getParent().replaceChild(node,IR.string(ownerName));
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(firstClause.isString());
reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.getParent().replaceChild(node,IR.string(ownerName));
reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
Preconditions.checkArgument(firstClause.isString());
if(rValue!=null&&rValue.isFunction()&&lValue.isNumber()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
node.getParent().replaceChild(node,IR.string(ownerName));
if(rValue!=null&&rValue.isFunction()&&lValue.isNumber()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&lValue.isNumber()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(firstClause.isString());
node.getParent().replaceChild(node,IR.string(ownerName));
if(rValue!=null&&rValue.isFunction()&&lValue.isNumber()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(firstClause.isString());
reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&lValue.isNumber()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.getParent().replaceChild(node,IR.string(ownerName));
reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&lValue.isNumber()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
Preconditions.checkArgument(firstClause.isString());
node.getParent().replaceChild(node,IR.string(ownerName));
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
Preconditions.checkArgument(firstClause.isString());
reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
node.getParent().replaceChild(node,IR.string(ownerName));
reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(firstClause.isString());
node.getParent().replaceChild(node,IR.string(ownerName));
reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
Preconditions.checkArgument(firstClause.isString());
node.getParent().replaceChild(node,IR.string(ownerName));
if(rValue!=null&&rValue.isFunction()&&lValue.isNumber()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
Preconditions.checkArgument(firstClause.isString());
reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&lValue.isNumber()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
node.getParent().replaceChild(node,IR.string(ownerName));
reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&lValue.isNumber()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(firstClause.isString());
node.getParent().replaceChild(node,IR.string(ownerName));
reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&lValue.isNumber()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isCall());
Preconditions.checkArgument(firstClause.isString());
node.getParent().replaceChild(node,IR.string(ownerName));
reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&isPinningPropertyUse(lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&firstClause.isName()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
knownType=rValue.getNext();
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&!p.canCollapse()){
continue;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isExtern){
node.removeChild(rValue);
lValue.detachFromParent();
}else {
node=IR.name(appendPropForAlias(ownerName,ownerName));
if(key.getBooleanProp(Node.IS_CONSTANT_NAME)){
refNode.putBooleanProp(Node.IS_CONSTANT_NAME,true);
}
key.replaceChild(value,refNode);
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause.addChildToFront(lValue);
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getBooleanProp(Node.IS_CONSTANT_NAME)){
firstClause.putBooleanProp(Node.IS_CONSTANT_NAME,true);
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node!=null){
secondClause.addChildAfter(IR.var(firstClause).copyInformationFromForTree(rValue),nameToAddAfter);
}else {
varParent.addChildBefore(newVar,node);
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&lValue.isVar()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&lValue.isInc()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(node.isGetProp()&&node==lValue.getFirstChild()&&NodeUtil.isAssignmentOp(lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node.isGetProp()&&n==lValue.getFirstChild()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&NodeUtil.isAssignmentOp(lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(firstClause!=null&&grandparent.isScript()&&lValue.isExprResult()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lValue.isFunction()||NodeUtil.getFunctionName(lValue)!=null||NodeUtil.getFunctionParameters(lValue).hasChildren()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!lValue.isFunction()||NodeUtil.getFunctionName(anonymousFnNode)!=null&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&NodeUtil.getFunctionParameters(lValue).hasChildren()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo==null){
return rValue;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (rValue.getType()){
case Token.RETURN :
if(n.hasChildren()){
break;
}

case Token.BREAK :

case Token.CONTINUE :
List<DiGraphEdge<Node,Branch>> secondClause=rValueInfo.getOutEdges();
if(outEdges.size()==1&&(n.getNext()==null||n.getNext().isFunction())){
Preconditions.checkState(outEdges.get(0).getValue()==Branch.UNCOND);
Node computeFollowing(rValue)=computeFollowing(n);
Node namesMatch=outEdges.get(0).getDestination().getValue();
if(nextCfgNode==fallThrough){
removeDeadExprStatementSafely(n);
return fallThrough;
}
}

}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&lValue.getLastChild().getString().equals("prototype")){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&NodeUtil.referencesThis(lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&NodeUtil.isGet(lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch){
Preconditions.checkState(lValue.isName()||NodeUtil.isGet(expr));
Node firstClause=new Node(NodeUtil.getOpFromAssignmentOp(secondClause)).copyInformationFrom(parent);
Node secondClause.getLastChild()=parent.getLastChild();
parent.setType(Token.ASSIGN);
parent.replaceChild(rightOperand,opNode);
opNode.addChildToFront(IR.name(getTempConstantValueName()).srcref(lValue));
opNode.addChildToBack(rightOperand);
rValue=expr.cloneTree();
}else {
parent.replaceChild(expr,replacementValueNode);
tempNameValue=expr;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&NodeUtil.isControlStructure(lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&ownerName.equals("Function")){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isExtern){
typeRegistry.createConstructorType(ownerName,firstClause.getSourceNode(),node,type).setStruct();
}else if(isExtern){
fnType.setDict();
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maybeSetBaseType(typeRegistry.createConstructorType(ownerName,firstClause.getSourceNode(),node,type));
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getScopeDeclaredIn().isGlobal()&&!ownerName.isEmpty()){
typeRegistry.declareType(fnName,typeRegistry.createConstructorType(ownerName,firstClause.getSourceNode(),node,type).getInstanceType());
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&scope.isLocal()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch!=ControlFlowAnalysis.computeFollowNode(lValue)){
if(!isPure(lValue.getFirstChild())){
return lValue;
}
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ControlFlowAnalysis.computeFollowNode(lValue)==null||areMatchingExits(lValue,follow)){
n.detachFromParent();
reportCodeChange();
return null;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&lValue.hasOneChild()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&isUselessCase(lValue,node)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isDo());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(hasBreakOrContinue(rValue)){
return n;
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(rValue,n.getFirstChild()));
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause.replaceChild(rValue,rValue.removeFirstChild());
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(lValue)){
Node IR.exprResult(lValue.detachFromParent()).srcref(cond)=IR.exprResult(cond.detachFromParent()).srcref(cond);
firstClause.addChildAfter(condStatement,rValue.removeFirstChild());
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isDo());
reportCodeChange();
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&rValue.isNumber()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&lValue.isCall()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(!NodeUtil.isObjectLitKey(lValue,n.getParent()));
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isExpressionTreeUnsafe(lValue,state.sideEffects)){
state.sideEffects=true;
state.extractBeforeStatement=extractExpression(n,state.extractBeforeStatement);
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()&&lValue.isEmpty()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&NodeUtil.isAssociative(type)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
if(!secondClause.mayHaveNonEmptyReturns()&&!contents.mayHaveSingleThrow()){
returnType=typeRegistry.getNativeType(VOID_TYPE);
namesMatch=true;
}
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
returnType=typeRegistry.getNativeType(UNKNOWN_TYPE);
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node==null){
throw new IllegalStateException("All Function types must have params and a return type");
}
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeRegistry.clearTemplateTypeNames();
if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isFunction()&&secondClause.isString()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.SHEQ :

if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.LT :

if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.AND :

if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OR :

if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.HOOK :

if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
inferThisType(info);
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(scope.getVar(ownerName)!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lValue.isName());
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&type.isUnknownType()){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return thisType.isEquivalentTo(type)?thisType:thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return thisType.isEquivalentTo(type)?thisType:rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info==null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(docInfo!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getJSType()==null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return normalizeClassType(secondClause.getFirstChild().getJSType());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return normalizeClassType(secondClause.getJSType());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return normalizeClassType(lValue.getJSType());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasParameterType(sourceName)){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(node!=null){
rValue=parametersNode.getFirstChild();
}
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!false){
while(rValue!=null&&!isVarArgs){
new FunctionParamBuilder(typeRegistry).newParameterFromNode(oldParameterType);
oldParameterType=oldParameterType.getNext();
}
}
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return getNativeType(UNKNOWN_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return rValueInfo.restrictByNotNullOrUndefined();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
if(rValueInfo==null){
if(CONSERVATIVE){
throw new RuntimeException("Type system failed us :(");
}else {
return compiler.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
}
return getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(scope.getVar(sourceName)!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(lValue.isName());
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(lValue.isName());
if(scope.getVar(sourceName)!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return thisType.isEquivalentTo(type)?thisType:thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return thisType.isEquivalentTo(type)?thisType:getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return filterNoResolvedType(thisType);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return filterNoResolvedType(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return thisType.toMaybeUnionType().meet(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return type.toMaybeUnionType().meet(thisType);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return thisType.toMaybeRecordType().getGreatestSubtypeHelper(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return type.toMaybeRecordType().getGreatestSubtypeHelper(thisType);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
if(!firstClause.isGetProp()){
return false;
}
return getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
if(secondClause.isUnknownType()||type.isUnionType()){
return false;
}
return getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return createDefaultObjectUnion(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return type.getGreatestSubtype(firstClause.getInstanceType());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
if(thisType.isUnknownType()){
return type;
}
return getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return type.getRestrictedUnion(firstClause.getInstanceType());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
if(secondClause.isUnionType()){
type=type.restrictByNotNullOrUndefined();
if(type.isUnionType()){
for(JSType type : type.toMaybeUnionType().getAlternates()){
if(isInvalidatingType(alt)){
return true;
}
}
return false;
}
}
return getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info==null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(docInfo!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getJSType()==null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getParent()!=null&&NodeUtil.isStatement(n)&&lentObjectLiterals!=null){
for(Node node : lentObjectLiterals){
defineObjectLiteral(objLit);
}
lentObjectLiterals.clear();
}
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return createFromTypeNodesInternal(lValue,sourceName,scope);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return createDefaultObjectUnion(createFromTypeNodesInternal(namesMatch,sourceName,scope));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.EQUALS :

if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return getDeclaredTypeInAnnotation(sourceName,lValue,info);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.hasType()){
return getDeclaredTypeInAnnotation(sourceName,lValue,info);
}else if(rValue!=null&&rValue.isFunction()&&shouldUseFunctionLiteralType(JSType.toMaybeFunctionType(rValue.getJSType()),info,lValue)){
return rValue.getJSType();
}else if(info!=null){
if(info.hasEnumParameterType()){
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}
}else if(info.isConstructor()||info.isInterface()){
return createFunctionTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}else {
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}
}
}
return getNativeType(JSTypeNative.UNKNOWN_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
com.google.javascript.jscomp.TypedScopeCreator,1493
========
if(valueType==null&&rhsValue!=null){
valueType=node.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
valueType=left.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
leftIsRefineable=false;
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
valueType=right.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
rightIsRefineable=false;
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!valueType.isEnumType()){
return ;
}
if(valueType==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!valueType.isEnumType()){
return ;
}
if(info==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(varType==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
valueType=parent.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(valueType==null&&rhsValue!=null){
leftIsRefineable=false;
valueType=left.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
rightIsRefineable=false;
valueType=right.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rhsValue.getJSType()!=null&&valueType!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rhsValue.getJSType()!=null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(valueType==null&&valueType!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(valueType==null&&oldParameterType!=null){
valueType=oldParameterType.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rhsValue!=null&&rhsValue.getJSType()!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(valueType==null&&rhsValue.getJSType()!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(valueType==null&&oldParameterType!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
valueType=oldParameterType.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
isOptionalParam=rhsValue.isOptionalArg();
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
isVarArgs=rhsValue.isVarArgs();
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
isOptionalParam=rhsValue.isOptionalArg();
isVarArgs=rhsValue.isVarArgs();

valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
actualReturnType=getNativeType(VOID_TYPE);
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(createCheckTypeCallNode(node.getJSType(),rhsValue.cloneTree())==null){
rhsValue=paramName.getNext();
continue;
}
if(valueType==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue==null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(valueType==null&&rhsValue==parent.getFirstChild()){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(valueType==null&&n!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type!=null){
node.setJSType(type);
}
if(valueType==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&n==null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(parameterType==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setDeferredType(node,valueType);
if(valueType==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processObjectLitProperties(node,ObjectType.cast(objectLit.getJSType()),!isExtern);
if(valueType==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getJSType()!=null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
scope=traverseChildren(n,scope);
if(valueType==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypeInference,535
========
if("prototype".equals(propName)){
type.defineDeclaredProperty(propName,rightType,getprop);
}else {
type.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("prototype".equals(propName)){
type.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("prototype".equals(propName)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
type.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("prototype".equals(propName)){
registry.unregisterPropertyOnType(propName,objectType);
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if("prototype".equals(propName)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
registry.unregisterPropertyOnType(propName,objectType);
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if("prototype".equals(propName)){
registry.unregisterPropertyOnType(propName,objectType);
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
registry.unregisterPropertyOnType(propName,objectType);
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if("prototype".equals(NodeUtil.JSC_PROPERTY_NAME_FN)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if("prototype".equals(ObjectPropertyStringPreprocess.EXTERN_OBJECT_PROPERTY_STRING)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if("prototype".equals(propName)){
defineDeclaredProperty(propName,new FunctionBuilder(registry).withParams(new FunctionParamBuilder(registry)).withReturnType(getReturnType()).build(),getprop);
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("prototype".equals(propName)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
defineDeclaredProperty(propName,new FunctionBuilder(registry).withParams(new FunctionParamBuilder(registry)).withReturnType(getReturnType()).build(),getprop);
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("prototype".equals(jsError.description)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("prototype".equals(JSDocInfo.Visibility.PRIVATE)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if("prototype".equals(NEVER_MATCHES)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("prototype".equals(jsError.sourceName)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName!=null?"prototype".equals(propName):null){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if("prototype".equals(REPLACE_ONE_MARKER)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("prototype".equals(ARGUMENTS)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("prototype".equals(relationship.subclassName)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!"base".equals(propName)){
ensureLibraryInjected("base");
}
if("prototype".equals(propName)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!propName.equals(ARGUMENTS));
if("prototype".equals(propName)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(getprop.isGetProp());
if("prototype".equals(propName)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if("prototype".equals(PROTECTOR_FN)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("prototype".equals(LINE)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("prototype".equals(var.name)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("prototype".equals(ARGUMENT_ARRAY_ALIAS)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("prototype".equals(PROTOTYPE_PROPERTY)){
objectType.defineDeclaredProperty(propName,rightType,getprop);
}else {
objectType.defineInferredProperty(propName,rightType,getprop);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getprop.getFirstChild().hasChildren()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
if(getprop.getFirstChild().getJSType()==null||getprop.getFirstChild().getJSType().toObjectType()==null){
return ;
}
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getprop.getFirstChild().isThis()&&getprop.getJSType().isFunctionType()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getprop.getFirstChild().isReturn()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(block.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getprop.getFirstChild().setJSType(objectType);
if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nodeType!=null&&(getprop.getLastChild().isName()||name.isString())){
objectType.defineDeclaredProperty(name.getString(),jsType,getprop);
}
if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
nodeType=getJSType(getprop);
if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
Preconditions.checkState(NodeUtil.isGet(getprop));
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getprop.getFirstChild().isThis()&&isMarkedExpose(getprop)){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
type.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
typeRegistry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
registry.unregisterPropertyOnType(propName,objectType);
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
objectType.removeProperty(propName);
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
registry.unregisterPropertyOnType(propName,objectType);
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
objectType.removeProperty(propName);
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
return true;
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
reportCodeChange();
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isLowerPrecedenceInExpression(getprop,OR_PRECEDENCE)&&isLowerPrecedenceInExpression(getprop.getFirstChild(),OR_PRECEDENCE)){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isLowerPrecedenceInExpression(getprop,OR_PRECEDENCE)&&getJSType(syntacticScope.getRootNode()).isConstructor()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getprop.getFirstChild().isThis()&&isLowerPrecedenceInExpression(getprop.getFirstChild(),OR_PRECEDENCE)){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isLowerPrecedenceInExpression(getprop,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(getprop.getFirstChild(),AND_PRECEDENCE)){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isLowerPrecedenceInExpression(getprop,AND_PRECEDENCE)&&getJSType(syntacticScope.getRootNode()).isConstructor()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getprop.getFirstChild().isThis()&&isLowerPrecedenceInExpression(getprop.getFirstChild(),AND_PRECEDENCE)){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
objectType.defineInferredProperty(propName,rightType,getprop);
}else {
return ;
registry.registerPropertyOnType(propName,objectType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
Timeout!
