java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 482b7676 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Run post-checkout hook..................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 482b7676:bbf1b138..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Closure-11b..................................... OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 2
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testIssue810
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5
PURIFY IS FALSE
=================================================
Project : closure_11	start : 19/10/19 14:24

Variable type inconsistancy of 'start' in method 'parseRegExp,String,String' with types : int and char
Variable type inconsistancy of 'end' in method 'parseRegExp,String,String' with types : int and char
Field type inconsistancy 'errors' with types : JSError[] and List<JSError>
Field type inconsistancy 'type' with types : Type and JSType
Field type inconsistancy 'SUPER' with types : FunctionInjector.Reference and SimpleReference<SimpleSlot>
Variable type inconsistancy of 'name' in method 'visit,NodeTraversal,Node,Node' with types : String and Name
Field type inconsistancy 'THIS' with types : Token and int
readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/closure/11.txt#ATTEMPTS: 2

# FAILING TESTS: 2
TIMEOUT : 18000000
===========
locations= [<com.google.javascript.jscomp.TypedScopeCreator,1493>, <com.google.javascript.jscomp.TypeInference,1245>, <com.google.javascript.jscomp.TypeInference,1246>, <com.google.javascript.jscomp.TypeInference,1252>, <com.google.javascript.jscomp.TypeCheck,490>, <com.google.javascript.jscomp.TypeCheck,491>, <com.google.javascript.jscomp.TypeCheck,921>, <com.google.javascript.rhino.jstype.JSType,575>, <com.google.javascript.rhino.jstype.JSType,576>, <com.google.javascript.rhino.jstype.JSType,580>, <com.google.javascript.rhino.Node,1581>, <com.google.javascript.rhino.Node,1616>, <com.google.javascript.jscomp.parsing.IRFactory,1220>, <com.google.javascript.rhino.jstype.NoObjectType,138>, <com.google.javascript.rhino.jstype.NoObjectType,144>, <com.google.javascript.rhino.jstype.NoObjectType,151>, <com.google.javascript.rhino.jstype.NoObjectType,161>, <com.google.javascript.rhino.jstype.NoObjectType,171>, <com.google.javascript.jscomp.TypedScopeCreator,560>, <com.google.javascript.jscomp.TypedScopeCreator,561>, <com.google.javascript.jscomp.TypedScopeCreator,1320>, <com.google.javascript.jscomp.TypeInference,545>, <com.google.javascript.jscomp.TypeInference,550>, <com.google.javascript.jscomp.LinkedFlowScope,116>, <com.google.javascript.jscomp.LinkedFlowScope,117>, <com.google.javascript.jscomp.LinkedFlowScope,120>, <com.google.javascript.jscomp.TypedScopeCreator,1718>, <com.google.javascript.jscomp.TypedScopeCreator,1720>, <com.google.javascript.jscomp.TypedScopeCreator,1730>, <com.google.javascript.jscomp.TypedScopeCreator,1735>, <com.google.javascript.jscomp.TypedScopeCreator,1738>, <com.google.javascript.jscomp.TypeCheck,320>, <com.google.javascript.jscomp.TypeCheck,322>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,219>, <com.google.javascript.jscomp.parsing.IRFactory,735>, <com.google.javascript.jscomp.TypedScopeCreator,1275>, <com.google.javascript.jscomp.TypeInference,535>, <com.google.javascript.jscomp.LinkedFlowScope,105>, <com.google.javascript.jscomp.LinkedFlowScope,106>, <com.google.javascript.jscomp.LinkedFlowScope,107>, <com.google.javascript.jscomp.LinkedFlowScope,108>, <com.google.javascript.jscomp.LinkedFlowScope,109>, <com.google.javascript.rhino.jstype.SimpleSlot,58>, <com.google.javascript.rhino.jstype.SimpleSlot,59>, <com.google.javascript.rhino.jstype.SimpleSlot,60>, <com.google.javascript.rhino.jstype.SimpleSlot,61>, <com.google.javascript.rhino.jstype.SimpleSlot,62>, <com.google.javascript.jscomp.LinkedFlowScope,371>, <com.google.javascript.jscomp.LinkedFlowScope,372>, <com.google.javascript.jscomp.LinkedFlowScope,373>, <com.google.javascript.rhino.InputId,66>, <com.google.javascript.rhino.InputId,67>, <com.google.javascript.rhino.InputId,68>, <com.google.javascript.rhino.InputId,69>, <com.google.javascript.jscomp.TypeValidator,508>, <com.google.javascript.jscomp.TypeValidator,509>, <com.google.javascript.jscomp.TypeValidator,511>, <com.google.javascript.jscomp.TypeValidator,515>, <com.google.javascript.jscomp.TypeValidator,533>, <com.google.javascript.jscomp.TypeValidator,534>, <com.google.javascript.jscomp.TypeValidator,535>, <com.google.javascript.jscomp.TypeValidator,545>, <com.google.javascript.jscomp.TypeValidator,550>, <com.google.javascript.jscomp.TypeValidator,559>, <com.google.javascript.jscomp.TypeValidator,560>, <com.google.javascript.jscomp.TypeValidator,561>, <com.google.javascript.jscomp.TypeValidator,562>, <com.google.javascript.jscomp.TypeValidator,564>, <com.google.javascript.jscomp.TypeValidator,565>, <com.google.javascript.jscomp.TypeValidator,570>, <com.google.javascript.jscomp.TypeValidator,571>, <com.google.javascript.jscomp.TypeValidator,573>, <com.google.javascript.jscomp.TypeValidator,590>, <com.google.javascript.jscomp.TypeCheck,355>, <com.google.javascript.jscomp.TypeCheck,388>, <com.google.javascript.jscomp.TypeCheck,533>, <com.google.javascript.jscomp.TypeCheck,534>, <com.google.javascript.jscomp.TypeCheck,535>, <com.google.javascript.jscomp.TypeCheck,966>, <com.google.javascript.jscomp.TypeCheck,967>, <com.google.javascript.jscomp.TypeCheck,968>, <com.google.javascript.jscomp.TypeCheck,969>, <com.google.javascript.jscomp.TypeCheck,970>, <com.google.javascript.jscomp.TypeCheck,1075>, <com.google.javascript.jscomp.TypeCheck,1079>, <com.google.javascript.jscomp.TypeCheck,1080>, <com.google.javascript.jscomp.TypeCheck,1082>, <com.google.javascript.jscomp.TypeCheck,1086>, <com.google.javascript.jscomp.TypeCheck,1087>, <com.google.javascript.jscomp.TypeCheck,1088>, <com.google.javascript.jscomp.TypeCheck,1098>, <com.google.javascript.jscomp.TypeCheck,1100>, <com.google.javascript.jscomp.TypeCheck,1101>, <com.google.javascript.jscomp.TypeCheck,1103>, <com.google.javascript.jscomp.TypeCheck,1128>, <com.google.javascript.jscomp.TypeCheck,1132>, <com.google.javascript.jscomp.TypeCheck,1195>, <com.google.javascript.jscomp.TypeCheck,1196>, <com.google.javascript.jscomp.TypeCheck,1201>, <com.google.javascript.jscomp.TypeCheck,1203>, <com.google.javascript.jscomp.TypeCheck,1204>, <com.google.javascript.jscomp.TypeCheck,1206>, <com.google.javascript.jscomp.TypeCheck,1210>, <com.google.javascript.jscomp.TypeCheck,1211>, <com.google.javascript.jscomp.TypeCheck,1214>, <com.google.javascript.jscomp.TypeCheck,1215>, <com.google.javascript.jscomp.TypeCheck,1429>, <com.google.javascript.jscomp.TypeCheck,1430>, <com.google.javascript.jscomp.TypeCheck,1431>, <com.google.javascript.jscomp.TypeCheck,1433>, <com.google.javascript.jscomp.TypeCheck,1435>, <com.google.javascript.jscomp.TypeCheck,1436>, <com.google.javascript.jscomp.TypeCheck,1437>, <com.google.javascript.jscomp.TypeCheck,1438>, <com.google.javascript.jscomp.TypeCheck,1440>, <com.google.javascript.jscomp.TypeCheck,1441>, <com.google.javascript.jscomp.TypeCheck,1442>, <com.google.javascript.jscomp.TypeCheck,1445>, <com.google.javascript.jscomp.TypeCheck,1446>, <com.google.javascript.jscomp.TypeCheck,1453>, <com.google.javascript.jscomp.TypeCheck,1454>, <com.google.javascript.jscomp.TypeCheck,1893>, <com.google.javascript.jscomp.TypeCheck,1894>, <com.google.javascript.jscomp.TypeCheck,1895>, <com.google.javascript.rhino.jstype.JSType,122>, <com.google.javascript.rhino.jstype.JSType,424>, <com.google.javascript.rhino.jstype.ObjectType,142>, <com.google.javascript.jscomp.FunctionTypeBuilder,258>, <com.google.javascript.jscomp.FunctionTypeBuilder,259>, <com.google.javascript.jscomp.FunctionTypeBuilder,260>, <com.google.javascript.jscomp.FunctionTypeBuilder,269>, <com.google.javascript.jscomp.FunctionTypeBuilder,271>, <com.google.javascript.jscomp.FunctionTypeBuilder,272>, <com.google.javascript.jscomp.FunctionTypeBuilder,273>, <com.google.javascript.jscomp.FunctionTypeBuilder,274>, <com.google.javascript.jscomp.FunctionTypeBuilder,275>, <com.google.javascript.jscomp.FunctionTypeBuilder,276>, <com.google.javascript.jscomp.FunctionTypeBuilder,277>, <com.google.javascript.jscomp.FunctionTypeBuilder,278>, <com.google.javascript.jscomp.FunctionTypeBuilder,280>, <com.google.javascript.jscomp.FunctionTypeBuilder,286>, <com.google.javascript.jscomp.FunctionTypeBuilder,290>, <com.google.javascript.jscomp.FunctionTypeBuilder,303>, <com.google.javascript.jscomp.FunctionTypeBuilder,307>, <com.google.javascript.jscomp.FunctionTypeBuilder,309>, <com.google.javascript.jscomp.FunctionTypeBuilder,391>, <com.google.javascript.jscomp.FunctionTypeBuilder,393>, <com.google.javascript.jscomp.FunctionTypeBuilder,394>, <com.google.javascript.jscomp.FunctionTypeBuilder,395>, <com.google.javascript.jscomp.FunctionTypeBuilder,396>, <com.google.javascript.jscomp.FunctionTypeBuilder,400>, <com.google.javascript.jscomp.FunctionTypeBuilder,451>, <com.google.javascript.jscomp.FunctionTypeBuilder,488>, <com.google.javascript.jscomp.FunctionTypeBuilder,529>, <com.google.javascript.jscomp.FunctionTypeBuilder,571>, <com.google.javascript.jscomp.FunctionTypeBuilder,614>, <com.google.javascript.jscomp.FunctionTypeBuilder,687>, <com.google.javascript.jscomp.FunctionTypeBuilder,688>, <com.google.javascript.jscomp.FunctionTypeBuilder,689>, <com.google.javascript.jscomp.FunctionTypeBuilder,694>, <com.google.javascript.jscomp.FunctionTypeBuilder,695>, <com.google.javascript.jscomp.FunctionTypeBuilder,698>, <com.google.javascript.jscomp.FunctionTypeBuilder,703>, <com.google.javascript.jscomp.PrepareAst,242>, <com.google.javascript.jscomp.Scope,516>, <com.google.javascript.jscomp.Scope,517>, <com.google.javascript.jscomp.Scope,518>, <com.google.javascript.jscomp.Scope,519>, <com.google.javascript.rhino.jstype.FunctionType,193>, <com.google.javascript.rhino.jstype.FunctionType,332>, <com.google.javascript.rhino.jstype.FunctionType,590>, <com.google.javascript.rhino.jstype.FunctionType,592>, <com.google.javascript.rhino.jstype.FunctionType,593>, <com.google.javascript.rhino.jstype.FunctionType,594>, <com.google.javascript.rhino.jstype.FunctionType,596>, <com.google.javascript.rhino.jstype.FunctionType,618>, <com.google.javascript.rhino.jstype.FunctionType,917>, <com.google.javascript.rhino.jstype.FunctionType,1094>, <com.google.javascript.rhino.jstype.FunctionType,1101>, <com.google.javascript.rhino.jstype.FunctionType,1107>, <com.google.javascript.rhino.jstype.FunctionType,1108>, <com.google.javascript.rhino.jstype.FunctionType,1112>, <com.google.javascript.rhino.jstype.FunctionType,1113>, <com.google.javascript.rhino.jstype.FunctionParamBuilder,115>, <com.google.javascript.rhino.jstype.FunctionParamBuilder,116>, <com.google.javascript.rhino.jstype.FunctionParamBuilder,117>, <com.google.javascript.rhino.jstype.FunctionParamBuilder,118>, <com.google.javascript.rhino.jstype.ArrowType,117>, <com.google.javascript.rhino.jstype.ArrowType,118>, <com.google.javascript.rhino.jstype.ArrowType,119>, <com.google.javascript.rhino.jstype.ArrowType,120>, <com.google.javascript.rhino.jstype.ArrowType,126>, <com.google.javascript.rhino.jstype.ArrowType,127>, <com.google.javascript.rhino.jstype.ArrowType,128>, <com.google.javascript.rhino.jstype.ArrowType,129>, <com.google.javascript.rhino.jstype.ArrowType,132>, <com.google.javascript.rhino.jstype.ArrowType,138>, <com.google.javascript.rhino.jstype.ArrowType,143>, <com.google.javascript.rhino.jstype.ArrowType,149>, <com.google.javascript.rhino.jstype.ArrowType,150>]
======================com.google.javascript.jscomp.TypedScopeCreator,1493
========
if(valueType==null&&rhsValue!=null){
valueType=node.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
valueType=left.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
leftIsRefineable=false;
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
valueType=right.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
rightIsRefineable=false;
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!valueType.isEnumType()){
return ;
}
if(valueType==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!valueType.isEnumType()){
return ;
}
if(info==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(varType==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
valueType=parent.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(valueType==null&&rhsValue!=null){
leftIsRefineable=false;
valueType=left.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
rightIsRefineable=false;
valueType=right.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rhsValue.getJSType()!=null&&valueType!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rhsValue.getJSType()!=null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(valueType==null&&valueType!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(valueType==null&&oldParameterType!=null){
valueType=oldParameterType.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rhsValue!=null&&rhsValue.getJSType()!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(valueType==null&&rhsValue.getJSType()!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(valueType==null&&oldParameterType!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
valueType=oldParameterType.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
isOptionalParam=rhsValue.isOptionalArg();
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
isVarArgs=rhsValue.isVarArgs();
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
isOptionalParam=rhsValue.isOptionalArg();
isVarArgs=rhsValue.isVarArgs();

valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue!=null){
actualReturnType=getNativeType(VOID_TYPE);
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(createCheckTypeCallNode(node.getJSType(),rhsValue.cloneTree())==null){
rhsValue=paramName.getNext();
continue;
}
if(valueType==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&rhsValue==null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(valueType==null&&rhsValue==parent.getFirstChild()){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(valueType==null&&n!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type!=null){
node.setJSType(type);
}
if(valueType==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null&&n==null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(parameterType==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setDeferredType(node,valueType);
if(valueType==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processObjectLitProperties(node,ObjectType.cast(objectLit.getJSType()),!isExtern);
if(valueType==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getJSType()!=null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
scope=traverseChildren(n,scope);
if(valueType==null&&rhsValue!=null){
valueType=rhsValue.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypeInference,1245
========
if(interfaceType!=null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(topInterface!=null){
propertyType=topInterface.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(regType!=null&&regType.getConstructor()!=null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(topInterface!=null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(regType!=null){
propertyType=topInterface.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(baseInterfaceObj!=null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(proto!=null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(INHERITS!=null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(superClass!=null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(extInterface!=null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objectType!=null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeSuperInstanceType!=null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(regType!=null&&regType.getConstructor()!=null&&regType.getConstructor().isInterface()){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType!=null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(regType!=null&&(regType.getConstructor()!=null||regType.isFunctionPrototypeType())){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instType!=null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instanceType!=null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(regType==null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(isConstructor()||isInterface());
if(regType!=null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeSuperInstanceType==null){
propertyType=regType.getConstructor();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(objectType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType==null&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
var.setType(getSlot(var.getName()).getType());
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null&&regType.hasOwnProperty(qualifiedName)){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(maybeType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
type=getNativeType(UNKNOWN_TYPE);
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType==null&&objType!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((propertyType==null||propertyType.isUnknownType())&&objType!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(objType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(registry.getType(qualifiedName)!=null&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n!=null&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(regType!=null&&!objType.isUnknownType()&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType!=null&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(var.getType()==null||slotType.isAllType()||slotType.isNoType()){
return null;
}
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(qualifiedName!=null&&functionPrivateName.length()>0&&syntacticScope.isDeclared(functionPrivateName,false)&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(regType!=null){
return objType.isNominalType()&&propName.equals(objType.getReferenceName());
}
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("prototype".equals(qualifiedName)){
return null;
}
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(qualifiedName==null?null:registry.getType(delegateName)!=null&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==null){
return null;
}
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
ObjectType regType=var==null?null:ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
if(var!=null&&var.isTypeInferred()){
var.setType(propertyType==null?objType:oldType.getLeastSupertype(oldType));
}
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
scope.inferQualifiedSlot(n,qualifiedName+".",propertyType==null?getNativeType(UNKNOWN_TYPE):oldType,objType);
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
if(var!=null&&var.isTypeInferred()){
var.setType(propertyType==null?objType:oldType.getLeastSupertype(oldType));
}
scope.inferQualifiedSlot(n,qualifiedName+".",propertyType==null?getNativeType(UNKNOWN_TYPE):oldType,objType);

ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setDeferredType(n,propertyType);
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processObjectLitProperties(n,ObjectType.cast(objectLit.getJSType()),!isLocallyInferred);
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((propertyType==null||propertyType.isUnknownType())&&IN_FOR_INIT_CLAUSE!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType!=null&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isLocallyInferred||regType!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isLocallyInferred&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((propertyType==null||propertyType.isUnknownType())&&regType!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType!=null&&!retType.isUnknownType()&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=traverseChildren(n,scope);
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propertyType==null||jsType.isUnknownType()&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
ObjectType regType=isLocallyInferred?ObjectType.cast(registry.getType(qualifiedName)):null;
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isLocallyInferred&&qualifiedName!=null){
ObjectType regType=isLocallyInferred?ObjectType.cast(registry.getType(qualifiedName)):null;
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propertyType!=null&&ownerType.isFunctionType()&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isLocallyInferred&&"Window".equals(qualifiedName)&&objType.isFunctionType()&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
ObjectType regType=registry.getNativeObjectType(GLOBAL_THIS).cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
registry.getNativeObjectType(GLOBAL_THIS).getConstructor().getInstanceType().clearCachedValues();
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
registry.getNativeObjectType(GLOBAL_THIS).getConstructor().getPrototype().clearCachedValues();
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
registry.getNativeObjectType(GLOBAL_THIS).getConstructor().setPrototypeBasedOn((objType.toMaybeFunctionType()).getInstanceType());
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
registry.getNativeObjectType(GLOBAL_THIS).getConstructor().getInstanceType().clearCachedValues();
registry.getNativeObjectType(GLOBAL_THIS).getConstructor().getPrototype().clearCachedValues();
registry.getNativeObjectType(GLOBAL_THIS).getConstructor().setPrototypeBasedOn((objType.toMaybeFunctionType()).getInstanceType());

ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==null&&qualifiedName!=null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName==null){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((propertyType==null||propertyType.isUnknownType())&&n.getFirstChild()==n){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=n){
ObjectType regType=ObjectType.cast(registry.getType(qualifiedName));
if(regType!=null){
propertyType=regType.getConstructor();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypeInference,1246
com.google.javascript.jscomp.TypeInference,1252
========
if(propertyType.isEquivalentTo(unknownType)&&this==getNativeType(JSTypeNative.UNKNOWN_TYPE)){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(JSTypeNative.CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&rightIsUnknown){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&options.disambiguateProperties){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&disambiguateProperties){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&!propertyType.isEquivalentTo(unknownType)){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return unknownType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return type;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(JSTypeNative.UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(JSTypeNative.ALL_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(unknownType.matchesNumberContext()&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(leftType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isUnknownType()&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(that.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return UNKNOWN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isUnknownType()&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return UNKNOWN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(that.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return UNKNOWN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isSubtype(this)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return TRUE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isObject()&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(thisType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return objType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return objType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return objType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isEnumElementType()){
JSType unknownType.toMaybeEnumElementType().meet(objType)=thisType.toMaybeEnumElementType().meet(unknownType);
if(inf!=null){
return inf;
}
}else if(thatType.isEnumElementType()){
JSType inf=thatType.toMaybeEnumElementType().meet(thisType);
if(inf!=null){
return inf;
}
}
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isObject()&&isLocallyInferred){
return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isObject()&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return objType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isObject()&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return objType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
}else {
return objType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
}else {
return objType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isObject()&&isLocallyInferred){
return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
}else {
return objType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isObject()&&isLocallyInferred){
return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
}else {
return objType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propertyType.isEquivalentTo(unknownType)&&prototypeVar.scope==syntacticScope){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&!objType.isEmptyType()){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(anyObjectType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&qualifiedName!=null){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propertyType.isEquivalentTo(unknownType)&&(propertyType.isUnknownType()||objType.isUnknownType())){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objType.isFunctionType()&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(aType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return FALSE;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isFunctionType()&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return UNKNOWN;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType.isEquivalentTo(unknownType)&&propertyType!=null){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propertyType.isEquivalentTo(unknownType)&&!unknownType.isUnknownType()){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(UNKNOWN_TYPE);
}else {
return jsType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jsType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(returnType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propVarType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rightType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType==null){
return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(varType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType!=null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(inf==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objType.isObject()&&unknownType.isObject()){
return thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);
}
if(propertyType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(delegateType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(varType!=null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(otherParamType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(aType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((propertyType==null||propertyType.isUnknownType())&&qualifiedName!=null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Assert.assertTrue("Both types must be null, or both must be non-null "+propertyType,(a==null)==(unknownType==null));
if(propertyType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Assert.assertTrue(qualifiedName+(message.isEmpty()?"":"\n"),propertyType.isEquivalentTo(unknownType));
if(propertyType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Assert.assertTrue(qualifiedName+" Equals is not symmetric.\n",unknownType.isEquivalentTo(propertyType));
if(propertyType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType==null&&propertyType!=null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(newType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&!propertyType.isEquivalentTo(objType)){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(varType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&!propertyType.isEquivalentTo(objType)){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(realType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getQualifiedName()==null){
return ;
}
if(propertyType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objIndexType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(altPropType==null){
return getNativeType(UNKNOWN_TYPE);
}else if(propertyType.isEquivalentTo(unknownType)&&isLocallyInferred){
return getNativeType(CHECKED_UNKNOWN_TYPE);
}else {
return propertyType;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypeCheck,490
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  compiler.report(t.makeError(n,INVALID_STYLE_ERROR,styleStr));
  return;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  compiler.report(t.makeError(n,INVALID_STYLE_ERROR,styleStr));
  return;
}

UNKNOWN ASTNode type : catch (UnsupportedOperationException ex) {
  error(NEGATING_A_NON_NUMBER_ERROR,left);
  return n;
}

UNKNOWN ASTNode type : catch (UnsupportedOperationException ex) {
  error(NEGATING_A_NON_NUMBER_ERROR,left);
  return n;
}

========
case Token.NUMBER :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
ensureTyped(t,n,STRING_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.STRING_KEY :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
ensureTyped(t,n,ARRAY_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.REGEXP :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
ensureTyped(t,n,BOOLEAN_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.VOID :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.BITNOT :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CASE :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.LABEL :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FUNCTION :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NAME :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
typeable=false;
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.FOR :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.TRUE :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
typeable=visitName(t,n,parent);
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.PARAM_LIST :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
typeable=!parent.isExprResult();
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
checkNameVisibility(t,n,parent);
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETPROP :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
ensureTyped(t,n);
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NEW :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
typeable=!(parent.isAssign()&&parent.getFirstChild()==n);
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.GETELEM :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.VAR :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.SCRIPT :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.INC :
left=n.getFirstChild();
validator.expectNumber(t,left,getJSType(left),"increment/decrement");
ensureTyped(t,n,NUMBER_TYPE);
break;

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NEG :
left=n.getFirstChild();
validator.expectNumber(t,left,getJSType(left),"sign operator");
ensureTyped(t,n,NUMBER_TYPE);
break;

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
inputId=n.getInputId();
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
type=n==parent.getFirstChild()?Ref.Type.CALL_GET:Ref.Type.ALIASING_GET;
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
left=n.getFirstChild();
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ensureTyped(t,n,BOOLEAN_TYPE);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.INSTANCEOF :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.WHILE :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.BANG :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
ensureTyped(t,n,NUMBER_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!childType.matchesInt32Context()){
report(t,n,BIT_OPERATION,NodeUtil.opToStr(n.getType()),childType.toString());
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.AND :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OBJECTLIT :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.THIS :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.EXPR_RESULT :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parent.getFirstChild().getNext().isString()){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.removeChild(n,n);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
Preconditions.checkState(nullCount==0);
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.TYPEOF :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
annotateDispatchers(n,parent);
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.visit(t,n,n);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
OVERRIDING_PROTOTYPE_WITH_NON_OBJECT=n.getQualifiedName();
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(OVERRIDING_PROTOTYPE_WITH_NON_OBJECT==null)return ;
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.ELLIPSIS :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.DELPROP :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validator.expectActualObject(t,right,rightType,"instanceof requires an object");
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.ASSIGN :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
childType=getJSType(n);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validator.expectObject(t,n,childType,"with requires an object");
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeable=false;
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(n.getChildCount()<3){
return true;
}
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
n=n.getLastChild();
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
if(n.getChildCount()<3){
return true;
}
n=n.getLastChild();

ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftType.isFunctionPrototypeType()){
FunctionType leftType.toObjectType().getOwnerFunction()=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent==null){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.HOOK :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CATCH :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
reportCodeChange();
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
addPossibleSignature(n.getFirstChild().getString(),key.getFirstChild(),t);
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
type=getValueType(n.getFirstChild());
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
type=Name.Type.GET;
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
type=Name.Type.SET;
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.hasOneChild()){
NodeUtil.redeclareVarsInsideBranch(catchBlock);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OBJECTLIT :
String getStringValue(n)=getStringValue(n);
return value!=null?getStringNumberValue(value):null;

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETELEM :
Node n.getFirstChild().getNext()=n.getFirstChild().getNext();
if(dest.isString()){
String n.getFirstChild().getNext().getString()=dest.getString();
if(s.equals("prototype")){
processPrototypeParent(n,t.getInput());
}else {
markPropertyAccessCandidate(dest,t.getInput());
}
}

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
child=n.getFirstChild().getNext();
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
child=NodeUtil.getLoopCodeBlock(n);
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(parent.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
NodeUtil.maybeAddFinally(parent.getParent());
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
Preconditions.checkArgument(parent.isFor(),"Unsupported assignment in replaceWithRhs. parent: %s",Token.name(parent.getType()));
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!parent.isFunction()||(parent!=null&&!requiresNode.isArrayLit())){
unsupportedDefineError(t,n);
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getBestLValueName(NodeUtil.getBestLValue(n))!=null&&lValueName.endsWith(".prototype")){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
isSet=true;
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
type=n==null?Name.Type.OTHER:getValueType(n);
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
isSet=true;
type=n==null?Name.Type.OTHER:getValueType(n);

ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OR :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
ensureTyped(t,n,leftType);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftType==null){
type=getNativeType(UNKNOWN_TYPE);
Var t.getScope().getVar(n.getString())=t.getScope().getVar(n.getString());
if(var!=null){
JSType t.getScope().getVar(n.getString()).getType()=var.getType();
if(varType!=null){
type=varType;
}
}
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
tryMinimizeExits(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(NodeUtil.getImpureBooleanValue(n)==TernaryValue.FALSE){
tryMinimizeExits(n.getFirstChild(),Token.BREAK,null);
}
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==null||!callbackFunction.isFunction()){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.SUB :
validator.expectNumber(t,n,leftType,"left operand");
validator.expectNumber(t,right,rightType,"right operand");
break;

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.BITOR :
validator.expectBitwiseable(t,n,leftType,"bad left operand to bitwise operator");
validator.expectBitwiseable(t,right,rightType,"bad right operand to bitwise operator");
break;

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETELEM :
Node n.getFirstChild().getNext()=n.getFirstChild().getNext();
if(dest.isString()){
if(dest.getString().equals("prototype")){
processPrototypeParent(t,n);
}else {
if(parent.isAssign()&&parent.getFirstChild()==n){
addPossibleSignature(dest.getString(),n.getNext(),t);
}
}
}

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(n.getFirstChild().getNext().isString()&&parent.isAssign()){
Node n=parent.getFirstChild().getNext();
addPossibleSignature(n.getFirstChild().getNext().getString(),n,t);
}
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(mayHaveSideEffects(left)){
return n;
}
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
knownLength=left.getChildCount();
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(mayHaveSideEffects(left)){
return n;
}
knownLength=left.getChildCount();

ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
knownLength=left.getString().length();
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftType!=null){
parent.setJSType(type);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.FUNCTION :
 final Scope t.getScope()=t.getScope();
 final String n.getFirstChild().getString()=n.getFirstChild().getString();
if(functionPrivateName!=null&&functionPrivateName.length()>0&&outerScope.isDeclared(functionPrivateName,false)&&!(outerScope.getVar(functionPrivateName).getType() instanceof FunctionType)){
report(t,n,FUNCTION_MASKS_VARIABLE,functionPrivateName);
}
break;

}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OR :
Node trySimplifyUnusedResult(n.getLastChild())=trySimplifyUnusedResult(n.getLastChild());
if(conditionalResultNode==null){
Preconditions.checkState(n.hasOneChild());
n=trySimplifyUnusedResult(n.getFirstChild());
}

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!areSafeFlagsToFold(parent.getString())){
return n;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent=IR.regexp(n,parent);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.ASSIGN :
JSDocInfo n.getJSDocInfo()=n.getJSDocInfo();
if(info!=null&&info.isNoTypeCheck()){
if(reportMissingProperties){
noTypeCheckSection++;
}else {
noTypeCheckSection--;
}
}

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(nullCount!=-1);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.replaceChild(n,parent);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
reportCodeChange();
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(OVERRIDING_PROTOTYPE_WITH_NON_OBJECT.indexOf('?')>0){
if(OVERRIDING_PROTOTYPE_WITH_NON_OBJECT.contains(":")){
return null;
}
return handlePlugins(t,n,moduleName.substring(condition+1),parent);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isGetterDef()){
parent=IR.call(replacement);
replacement.putBooleanProp(Node.FREE_CALL,true);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.detachFromParent();
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.replaceChild(n,parent);
reportCodeChange();
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.detachFromParent();
parent.replaceChild(n,parent);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.detachFromParent();
reportCodeChange();
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.detachFromParent();
parent.replaceChild(n,parent);
reportCodeChange();
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent!=null&&nameNode.getParent()!=null&&nameNode.getParent().isCatch()){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
IR.block().copyInformationFrom(n);
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
IR.block().addChildToFront(n);
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
reportCodeChange("LABEL normalization");
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
IR.block().copyInformationFrom(n);
IR.block().addChildToFront(n);
reportCodeChange("LABEL normalization");

ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
inExterns=reportMissingProperties;
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(reportMissingProperties){
inferJSDocInfo.process(n,null);
}else {
inferJSDocInfo.process(null,node);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.replaceChild(n,NodeUtil.newExpr(parent));
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compiler.getCodingConvention().describeFunctionBind(n,true)==null){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getJSType(bind.target).restrictByNotNullOrUndefined().toMaybeFunctionType()==null){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(reportMissingProperties&&left.isNumber()){
double left.getDouble()=left.getDouble();
if(left.getDouble()==0||left.getDouble()==1){
return n;
}
}
ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(reportMissingProperties&&left.isNumber()){
double left.getDouble()=left.getDouble();
if(left.getDouble()==0||left.getDouble()==1){
return n;
}
}
reportCodeChange();

ensureTyped(t,n,NULL_TYPE);
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.replaceChild(n,n.removeFirstChild());
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nullCount+1>=nullCount){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.replaceChild(n,n.getFirstChild().getNext());
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent==null){
topScope=new Scope(n,compiler);
}else {
scope=new Scope(parent,n);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeHandlePrototypePrefix(t,n,n,OVERRIDING_PROTOTYPE_WITH_NON_OBJECT))return ;
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nullCount<0||OVERRIDING_PROTOTYPE_WITH_NON_OBJECT.length()<=index){
return n;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nullCount<0||OVERRIDING_PROTOTYPE_WITH_NON_OBJECT.length()<=index){
return n;
}
reportCodeChange();
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent=n;
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==null||n==n){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!NodeUtil.isObjectLitKey(n,n.getParent()));
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isExpressionTreeUnsafe(n,state.sideEffects)){
state.sideEffects=true;
state.extractBeforeStatement=extractExpression(n,state.extractBeforeStatement);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(parent)){
parent=IR.comma(cond,parent).srcref(n);
}else {
replacement=branchToKeep;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isVar()){
if(n.getFirstChild()!=null){
n.getFirstChild().setJSType(leftType);
}
}else {
Preconditions.checkState(parent.isFunction());
parent.setJSType(varType);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(parent)){
Node IR.exprResult(parent.detachFromParent()).srcref(cond)=IR.exprResult(cond.detachFromParent()).srcref(cond);
parent.addChildAfter(condStatement,parent);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!reportMissingProperties&&parent==null){
elseBody=IR.block().srcref(n);
n.addChildToBack(elseBody);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportMissingProperties?parent:parent.addChildToFront(IR.exprResult(parent).srcref(cond));
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("jQuery.prototype".equals(parent.getQualifiedName())){
parent=objectToExtend.removeFirstChild();
}else {
targetVal=objectToExtend.detachFromParent();
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,IR.function(IR.name("").srcref(n),IR.paramList().srcref(n),parent));
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.putBooleanProp(Node.FREE_CALL,true);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypeCheck,491
========
case Token.NULL :
ensureTyped(t,n,STRING_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
ensureTyped(t,n,ARRAY_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
ensureTyped(t,n,BOOLEAN_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.THIS :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FOR :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CALL :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
typeable=false;
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
typeable=visitName(t,n,parent);
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.DELPROP :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.COMMA :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.ASSIGN :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.BITNOT :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.HOOK :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
checkNameVisibility(t,n,parent);
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
Preconditions.checkState(nullCount==1,"Object lit key must have 1 child");
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.AND :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FUNCTION :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.POS :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
ensureTyped(t,n);
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
Preconditions.checkState(nullCount==0);
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
result=false;
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
addPossibleSignature(n.getString(),key.getFirstChild(),t);
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
type=n==parent.getFirstChild()?Ref.Type.CALL_GET:Ref.Type.ALIASING_GET;
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PARAM_LIST :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
Preconditions.checkState(!n.getString().isEmpty());
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(parent!=null);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
inputId=n.getInputId();
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(getPureBooleanValue(n.getFirstChild())!=TernaryValue.UNKNOWN){
return getPureBooleanValue(n.getFirstChild()).toBoolean(true)?"false":"true";
}
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(getPureBooleanValue(n.getFirstChild())!=TernaryValue.UNKNOWN){
return getPureBooleanValue(n.getFirstChild()).toBoolean(true)?0.0:1.0;
}
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
left=n.getFirstChild();
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

ensureTyped(t,n,BOOLEAN_TYPE);
case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
Preconditions.checkArgument(parent.isFor(),"Unsupported assignment in replaceWithRhs. parent: %s",Token.name(parent.getType()));
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
if("undefined".equals(n.getString())||"Infinity".equals(n.getString())){
return n.getString();
}
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
result=true;
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.visit(t,n,n);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(parent.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
NodeUtil.maybeAddFinally(parent.getParent());
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
if(n.getChildCount()<3){
return true;
}
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
n=n.getLastChild();
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
if(n.getChildCount()<3){
return true;
}
n=n.getLastChild();

ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
tryMinimizeExits(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(NodeUtil.getImpureBooleanValue(n)==TernaryValue.FALSE){
tryMinimizeExits(n.getFirstChild(),Token.BREAK,null);
}
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftType.isFunctionPrototypeType()){
FunctionType leftType.toObjectType().getOwnerFunction()=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
type=getValueType(n.getFirstChild());
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
type=Name.Type.GET;
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
type=Name.Type.SET;
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.ASSIGN_BITAND :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.ASSIGN_ADD :

case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
childType=getJSType(n);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validator.expectObject(t,n,childType,"with requires an object");
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeable=false;
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
annotateDispatchers(n,n);
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
reportCodeChange();
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
isSet=true;
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
type=n==null?Name.Type.OTHER:getValueType(n);
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
isSet=true;
type=n==null?Name.Type.OTHER:getValueType(n);

ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dereferenceToObject(leftType)==null||objType.getJSDocInfo()!=null){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(n.getString().equals("arguments")){
return false;
}else {
Var topScope.getVar(n.getString())=topScope.getVar(n.getString());
if(topScope.getVar(n.getString())!=null&&(topScope.getVar(n.getString()).isLocal()||v.nameNode.getParent().isCatch())){
return false;
}
}
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(!inExterns&&n.getFirstChild().isGetProp()){
return getImplicitActionsFromCall(n,n.getFirstChild().getJSType());
}
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getBestLValueName(NodeUtil.getBestLValue(n))!=null&&lValueName.endsWith(".prototype")){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(mayHaveSideEffects(left)){
return n;
}
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
knownLength=left.getChildCount();
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(mayHaveSideEffects(left)){
return n;
}
knownLength=left.getChildCount();

ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
knownLength=left.getString().length();
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parent.isFunction()||(parent!=null&&!requiresNode.isArrayLit())){
unsupportedDefineError(t,n);
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(n.getFirstChild().getNext().isString()&&parent.isAssign()){
Node n=parent.getFirstChild().getNext();
addPossibleSignature(n.getFirstChild().getNext().getString(),n,t);
}
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
ensureTyped(t,n,n.getJSType());
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
result=nullCount&0xffffffffL>>>nullCount;
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent!=null&&nameNode.getParent()!=null&&nameNode.getParent().isCatch()){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(nullCount==1);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compiler.getCodingConvention().describeFunctionBind(n,true)==null){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getJSType(bind.target).restrictByNotNullOrUndefined().toMaybeFunctionType()==null){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(reportMissingProperties&&left.isNumber()){
double left.getDouble()=left.getDouble();
if(left.getDouble()==0||left.getDouble()==1){
return n;
}
}
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(reportMissingProperties&&left.isNumber()){
double left.getDouble()=left.getDouble();
if(left.getDouble()==0||left.getDouble()==1){
return n;
}
}
reportCodeChange();

ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isGetterDef()){
parent=IR.call(replacement);
replacement.putBooleanProp(Node.FREE_CALL,true);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
Preconditions.checkState(n.hasOneChild());
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
if(n.getFirstChild().isName()&&n.getFirstChild().hasChildren()){
maybeAddFunction(new FunctionVar(n),t.getModule());
}
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
Preconditions.checkState(n.hasOneChild());
if(n.getFirstChild().isName()&&n.getFirstChild().hasChildren()){
maybeAddFunction(new FunctionVar(n),t.getModule());
}

ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
Preconditions.checkState(NodeUtil.isStatementBlock(n)||parent.isLabel());
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
if(!NodeUtil.isFunctionExpression(n)){
Function new NamedFunction(n)=new NamedFunction(n);
maybeAddFunction(new NamedFunction(n),t.getModule());
}
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
Preconditions.checkState(NodeUtil.isStatementBlock(n)||parent.isLabel());
if(!NodeUtil.isFunctionExpression(n)){
Function new NamedFunction(n)=new NamedFunction(n);
maybeAddFunction(new NamedFunction(n),t.getModule());
}

ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent==null){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isVar()){
removeVarDeclaration(n);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent==null||parent==null||!areNodesEqualForInlining(lastTrue,lastFalse)){
break;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.detachFromParent();
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
IR.block().copyInformationFrom(n);
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
IR.block().addChildToFront(n);
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
reportCodeChange("LABEL normalization");
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
IR.block().copyInformationFrom(n);
IR.block().addChildToFront(n);
reportCodeChange("LABEL normalization");

ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
{
String n.getFirstChild().getString()=n.getFirstChild().getString();
}
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.isReturn()){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=null){
newReportFunctionExitNode().addChildToBack(returnRhs);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
Preconditions.checkState(n.hasChildren(),"AST should be normalized");
ensureTyped(t,n,NULL_TYPE);
break;


case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nullCount+1>=nullCount){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent==null){
topScope=new Scope(n,compiler);
}else {
scope=new Scope(parent,n);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!areValidRegexpFlags(parent.getString())){
error(INVALID_REGULAR_EXPRESSION_FLAGS,flags);
return n;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!areSafeFlagsToFold(parent.getString())){
return n;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent=IR.regexp(n,parent);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.validateMinimumChildCount(n,1);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMinimumChildCount(n,1);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateExpression(n.getFirstChild());
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==null||n==n){
return ;
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!NodeUtil.isObjectLitKey(n,n.getParent()));
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isExpressionTreeUnsafe(n,state.sideEffects)){
state.sideEffects=true;
state.extractBeforeStatement=extractExpression(n,state.extractBeforeStatement);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(parent);
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
inExterns=reportMissingProperties;
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(reportMissingProperties){
inferJSDocInfo.process(parent,null);
}else {
inferJSDocInfo.process(null,node);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.detachFromParent();
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.getChildBefore(n)==null){
parent.addChildToFront(NodeUtil.newVarNode(OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,n));
}else {
parent.addChildAfter(var,prev);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftType!=null){
constructorType=constructorType.restrictByNotNullOrUndefined();
if(constructorType.isUnknownType()){
leftType=getNativeType(UNKNOWN_TYPE);
}else {
FunctionType leftType.toMaybeFunctionType()=constructorType.toMaybeFunctionType();
if(ct==null&&constructorType instanceof FunctionType){
ct=(FunctionType)constructorType;
}
if(ct!=null&&ct.isConstructor()){
type=ct.getInstanceType();
backwardsInferenceFromCallSite(n,ct);
}
}
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(null==parent||"".equals(flags.getString())){
parent=IR.regexp(n);
}else {
if(!areValidRegexpFlags(flags.getString())){
error(INVALID_REGULAR_EXPRESSION_FLAGS,flags);
return n;
}
if(!areSafeFlagsToFold(flags.getString())){
return n;
}
n.removeChild(flags);
regexLiteral=IR.regexp(pattern,flags);
}
case Token.NULL :
ensureTyped(t,n,NULL_TYPE);
break;

case Token.NUMBER :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypeCheck,921
========
if(qVar.isTypeInferred()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(identifyConstants.isTypeInferred()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(depends.isTypeInferred()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(reachingDef.isTypeInferred()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!topScope.isDeclared(OVERRIDING_PROTOTYPE_WITH_NON_OBJECT,false)){
return ;
}
if(var.isTypeInferred()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(compiler.isTypeInferred()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var.isTypeInferred()){
compiler.report(t.makeError(assign,BAD_PRIVATE_GLOBAL_ACCESS,name.getString(),var.getSourceFile().getName()));
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var.isTypeInferred()){
assign.removeChild(assign);
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(var.isTypeInferred()){
assign.getParent().replaceChild(n,assign);
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var.isTypeInferred()){
compiler.reportCodeChange();
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(var.isTypeInferred()){
assign.removeChild(assign);
assign.getParent().replaceChild(n,assign);
compiler.reportCodeChange();

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(var.isTypeInferred()){
assign.removeChild(assign);
compiler.reportCodeChange();
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
com.google.javascript.rhino.jstype.JSType,575
========
if("prototype".equals(propertyName)){
return null;
}
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType==null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(resolveResult.isNullType()||alternate.isVoidType()){
continue;
}
if(autoboxObjType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(objectType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resolveResult=this.getRestrictedWithoutUndefined(jsType);
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(type!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(autoboxObjType.getReferenceName()==null){
return true;
}
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(objType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==resolveResult){
return true;
}
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(baseInterfaceObj!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(typeA.isUnionType()){
type=type.restrictByNotNullOrUndefined();
if(type.isUnionType()){
for(JSType resolveResult : type.toMaybeUnionType().getAlternates()){
if(isInvalidatingType(alt)){
return true;
}
}
return false;
}
}
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resolveResult=resolveResult.autoboxesTo()!=null?boxedType:instanceType;
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(objectType==null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(ownerType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(referencedObjType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
if(typeA.isUnknownType()||type.isUnionType()){
return false;
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(implicitPrototype!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null&&autoboxObjType.getImplicitPrototype()!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isNativeObjectType()){
return false;
}
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
registry.registerPropertyOnType(propertyName,this);
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(genericType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(thisType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null&&autoboxObjType.isInstanceType()){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
typeA=type.restrictByNotNullOrUndefined();
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(typeA.isUnionType()){
for(JSType resolveResult : type.toMaybeUnionType().getAlternates()){
addInvalidatingType(alt);
}
}
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null&&autoboxObjType.getConstructor()!=null&&autoboxObjType.getConstructor().isInterface()){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(instType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeA=type.restrictByNotNullOrUndefined();
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null&&autoboxObjType.isInstanceType()){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(typeA.isUnionType()){
for(JSType resolveResult : type.toMaybeUnionType().getAlternates()){
addInvalidatingType(alt);
}
}
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null&&autoboxObjType.isInstanceType()){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeA=type.restrictByNotNullOrUndefined();
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(objType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(typeA.isUnionType()){
for(JSType resolveResult : type.toMaybeUnionType().getAlternates()){
addInvalidatingType(alt);
}
}
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(objType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeA=type.restrictByNotNullOrUndefined();
if(typeA.isUnionType()){
for(JSType resolveResult : type.toMaybeUnionType().getAlternates()){
addInvalidatingType(alt);
}
}
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeA=type.restrictByNotNullOrUndefined();
if(typeA.isUnionType()){
for(JSType resolveResult : type.toMaybeUnionType().getAlternates()){
addInvalidatingType(alt);
}
}
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(autoboxObjType!=null&&autoboxObjType.isInstanceType()){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeA=type.restrictByNotNullOrUndefined();
if(typeA.isUnionType()){
for(JSType resolveResult : type.toMaybeUnionType().getAlternates()){
addInvalidatingType(alt);
}
}
ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
if(objType!=null){
return autoboxObjType.findPropertyType(propertyName);
}
return null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.rhino.jstype.JSType,576
========
if(implicitPrototype!=null){
return autoboxObjType.findPropertyType(propertyName);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(referencedObjType!=null){
return autoboxObjType.findPropertyType(propertyName);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objectType!=null){
return autoboxObjType.findPropertyType(propertyName);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(autoboxObjType==null){
return autoboxObjType.findPropertyType(propertyName);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(prototype!=null){
return autoboxObjType.findPropertyType(propertyName);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.rhino.jstype.JSType,580
com.google.javascript.rhino.Node,1581
========
if(type==Token.DELPROP){
return "this";
}else {
return null;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type==Token.CALL){
return "this";
}else {
return null;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type==Token.NAME){
return "this";
}else {
return null;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type!=Token.THIS){
return "this";
}else {
return null;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type==Token.GETELEM){
return "this";
}else {
return null;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(BLOCK==Token.THIS){
return "this";
}else {
return null;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.NOT){
return "this";
}else {
return null;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type==Token.OBJECTLIT){
return "this";
}else {
return null;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(GETPROP==Token.THIS){
return "this";
}else {
return null;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(GETELEM==Token.THIS){
return "this";
}else {
return null;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NAME==Token.THIS){
return "this";
}else {
return null;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.SCRIPT){
return "this";
}else {
return null;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(INC==Token.THIS){
return "this";
}else {
return null;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.FUNCTION){
return "this";
}else {
return null;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type==Token.RETURN){
return "this";
}else {
return null;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
com.google.javascript.rhino.Node,1616
========
swtich (getType()){
default :
return false;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.FOR :
swtich (nodeB.getChildCount()){
case 3 :
return null;

case 4 :
return nodeB.getFirstChild().getNext();

}
throw new IllegalArgumentException("malformed \'for\' statement "+nodeB);

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.CASE :
return null;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.FOR :
swtich (nodeB.getChildCount()){
case 3 :
return null;

case 4 :
return nodeB.getFirstChild().getNext();

}
throw new IllegalArgumentException("malformed \'for\' statement "+nodeB);

case Token.CASE :
return null;


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.LABEL :
break;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
throw new IllegalArgumentException("Unsupported parent node type in replaceWithRhs "+Token.name(parent.getType()));

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.LABEL :
break;

default :
throw new IllegalArgumentException("Unsupported parent node type in replaceWithRhs "+Token.name(parent.getType()));


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.COMMA :
tryConvertToNumber(nodeB.getLastChild());
return ;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.HOOK :
tryConvertToNumber(nodeB.getChildAtIndex(1));
tryConvertToNumber(nodeB.getLastChild());
return ;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.NAME :
if(!NodeUtil.isUndefined(nodeB)){
return ;
}
break;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.COMMA :
tryConvertToNumber(nodeB.getLastChild());
return ;

case Token.HOOK :
tryConvertToNumber(nodeB.getChildAtIndex(1));
tryConvertToNumber(nodeB.getLastChild());
return ;

case Token.NAME :
if(!NodeUtil.isUndefined(nodeB)){
return ;
}
break;


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.FALSE :
return true;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.NOT :
return isImmutableValue(nodeB.getFirstChild());

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.NEG :
return isImmutableValue(nodeB.getFirstChild());

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.NAME :
String nodeB.getString()=nodeB.getString();
return "undefined".equals(nodeB.getString())||"Infinity".equals(nodeB.getString());

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.FALSE :
return true;

case Token.NOT :
return isImmutableValue(nodeB.getFirstChild());

case Token.NEG :
return isImmutableValue(nodeB.getFirstChild());

case Token.NAME :
String nodeB.getString()=nodeB.getString();
return "undefined".equals(nodeB.getString())||"Infinity".equals(nodeB.getString());


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
return null;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
return new CodePrinter.Builder(nodeB).build();

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.NUMBER :
return getStringValue(parent);

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.GETELEM :
return true;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.FUNCTION :
Preconditions.checkState(isFunctionExpression(nodeB));
return false;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.GETELEM :
return true;

case Token.FUNCTION :
Preconditions.checkState(isFunctionExpression(nodeB));
return false;


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
return false;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
if(nodeB.hasChildren()){
Node nodeB.getLastChild()=nodeB.getLastChild();
return statementMustExitParent(nodeB.getLastChild());
}
return false;



}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
return false;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return true;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.LE :
return true;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.BITNOT :
tryReduceOperandsForOp(nodeB);
return tryFoldUnaryOperator(nodeB);

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.VOID :
return tryReduceVoid(nodeB);

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
tryReduceOperandsForOp(nodeB);
return tryFoldBinaryOperator(nodeB);

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.BITNOT :
tryReduceOperandsForOp(nodeB);
return tryFoldUnaryOperator(nodeB);

case Token.VOID :
return tryReduceVoid(nodeB);

default :
tryReduceOperandsForOp(nodeB);
return tryFoldBinaryOperator(nodeB);


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.THROW :
return true;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.THROW :
return true;

default :
return false;


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.EXPR_RESULT :
return true;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.RETURN :
return last.hasChildren();

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.FOR :
return NodeUtil.isForIn(last)&&!NodeUtil.mayHaveSideEffects(last.getFirstChild());

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.EXPR_RESULT :
return true;

case Token.RETURN :
return last.hasChildren();

case Token.FOR :
return NodeUtil.isForIn(last)&&!NodeUtil.mayHaveSideEffects(last.getFirstChild());


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.MUL :
return true;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
throw new IllegalStateException("unexpected");

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.ASSIGN :
Preconditions.checkArgument(parent.isFor(),"Unsupported assignment in replaceWithRhs. parent: %s",Token.name(parent.getType()));
break;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
throw new IllegalArgumentException("Unsupported node type in replaceWithRhs "+Token.name(nodeB.getType()));

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.ASSIGN :
Preconditions.checkArgument(parent.isFor(),"Unsupported assignment in replaceWithRhs. parent: %s",Token.name(parent.getType()));
break;

default :
throw new IllegalArgumentException("Unsupported node type in replaceWithRhs "+Token.name(nodeB.getType()));


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.WHILE :
break;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.FOR :
n=nodeB.getLastChild();
continue;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.FOR :
n=nodeB.getLastChild();
continue;

default :
return false;


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.WITH :
return true;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.OR :
return nodeB!=parent.getFirstChild();

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.WITH :
return true;

case Token.OR :
return nodeB!=parent.getFirstChild();


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.SWITCH :
return true;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.TRY :
return used;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.SWITCH :
return true;

case Token.TRY :
return used;

default :
return false;


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.EXPR_RESULT :
fuseExpresssonIntoFirstChild(nodeB,last);
return ;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.FOR :
if(NodeUtil.isForIn(last)){
fuseExpresssonIntoSecondChild(nodeB,last);
}
return ;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
throw new IllegalStateException("Statement fusion missing.");

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.EXPR_RESULT :
fuseExpresssonIntoFirstChild(nodeB,last);
return ;

case Token.FOR :
if(NodeUtil.isForIn(last)){
fuseExpresssonIntoSecondChild(nodeB,last);
}
return ;

default :
throw new IllegalStateException("Statement fusion missing.");


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.NAME :
return nodeB.hasChildren();

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.THROW :
return true;

case Token.NAME :
return nodeB.hasChildren();

default :
return false;


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
if(nodeB.isBlock()&&nodeB.isSyntheticBlock()){
createEdge(nodeB,Branch.SYN_BLOCK,computeFollowNode(node,this));
}
break;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.INSTANCEOF :
return true;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.FUNCTION :
return false;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.INSTANCEOF :
return true;

case Token.FUNCTION :
return false;


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.OR :
return true;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.OR :
return true;

default :
return false;


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
violation("Expected assignment target expression but was "+Token.name(nodeB.getType()),n);

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.DEFAULT_CASE :
return true;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.DEFAULT_CASE :
return true;

default :
return false;


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.FOR :
return NodeUtil.getConditionExpression(parent)==nodeB;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.TYPEOF :
return true;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.HOOK :
return parent.getFirstChild()==nodeB;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.NOT :
return parent.getParent().isOr()&&parent.getParent().getFirstChild()==parent;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.FOR :
return NodeUtil.getConditionExpression(parent)==nodeB;

case Token.TYPEOF :
return true;

case Token.HOOK :
return parent.getFirstChild()==nodeB;

case Token.NOT :
return parent.getParent().isOr()&&parent.getParent().getFirstChild()==parent;


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.ASSIGN_MOD :
return true;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
violation("Expected object literal key expression but was "+Token.name(nodeB.getType()),n);

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
return nodeB;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.CATCH :
return !NodeUtil.hasFinally(getTryForCatch(parent));

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.IF :
return nodeB==parent.getLastChild();

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.CATCH :
return !NodeUtil.hasFinally(getTryForCatch(parent));

case Token.IF :
return nodeB==parent.getLastChild();


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.VAR :
Preconditions.checkState(nodeB==parent.getFirstChild());
return parent;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.DEFAULT_CASE :
return null;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.VAR :
Preconditions.checkState(nodeB==parent.getFirstChild());
return parent;

case Token.DEFAULT_CASE :
return null;


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
return ;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.SHNE :
complementOperator=Token.SHEQ;
break;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.SHNE :
complementOperator=Token.SHEQ;
break;

default :
return nodeB;


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.DO :
return ;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
Node IR.block()=IR.block();
IR.block().copyInformationFrom(last);
nodeB.replaceChild(last,IR.block());
IR.block().addChildToFront(last);
reportCodeChange("LABEL normalization");
return ;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.DO :
return ;

default :
Node IR.block()=IR.block();
IR.block().copyInformationFrom(last);
nodeB.replaceChild(last,IR.block());
IR.block().addChildToFront(last);
reportCodeChange("LABEL normalization");
return ;


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
throw new IllegalStateException();

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.FOR :
continue;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.RETURN :
continue;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.FOR :
continue;

case Token.RETURN :
continue;


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
throw new MalformedException("STRING, NAME, or ADD node expected; found: "+getReadableTokenName(nodeB),node);

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.OBJECTLIT :
break;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.ASSIGN :
JSDocInfo nodeB.getJSDocInfo()=nodeB.getJSDocInfo();
if(nodeB.getJSDocInfo()!=null&&nodeB.getJSDocInfo().isNoTypeCheck()){
if(used){
propType++;
}else {
propType--;
}
}
break;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.PARAM_LIST :
return nodeB.getParent().getParent().isFunction();

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.PARAM_LIST :
return nodeB.getParent().getParent().isFunction();

default :
return false;


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
throw new AssertionError("Bad LHS for assignment: "+parent.toStringTree());

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
safe=NodeUtil.isImmutableValue(nodeB);
break;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.CALL :
break;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
throw new IllegalStateException("unexpected:"+nodeB);

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(parent!=null);
swtich (getType()){
default :
return false;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
throw new IllegalArgumentException("Node cannot be refined. \n"+nodeB.toStringTree());

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
throw new IllegalArgumentException("Illegal type of node.");

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.FUNCTION :
return true;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.HOOK :
Node nodeB.getFirstChild().getNext()=nodeB.getFirstChild().getNext();
Name.Type getValueType(nodeB.getFirstChild().getNext())=getValueType(nodeB.getFirstChild().getNext());
if(getValueType(nodeB.getFirstChild().getNext())!=Name.Type.OTHER)return getValueType(nodeB.getFirstChild().getNext());
Node nodeB.getFirstChild().getNext().getNext()=nodeB.getFirstChild().getNext().getNext();
return getValueType(nodeB.getFirstChild().getNext().getNext());

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(parent!=null);
swtich (getType()){
default :
return false;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return true;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.SHNE :
return !(Token.NULL==value.getType());

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
throw new IllegalStateException("unexpected.");

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
case Token.SHNE :
return !(Token.NULL==value.getType());

default :
throw new IllegalStateException("unexpected.");


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkNoTypeCheckSection(nodeB,true);
swtich (getType()){
case Token.SHNE :
return !(Token.NULL==value.getType());

default :
throw new IllegalStateException("unexpected.");


case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (getType()){
default :
throw new IllegalStateException("unexpect OBJECTLIT key: "+nodeB.getFirstChild());

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(nodeB.isFunction());
swtich (getType()){
default :
throw new IllegalStateException("unexpect OBJECTLIT key: "+nodeB.getFirstChild());

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.getReferenceName()==null){
return true;
}
swtich (getType()){
default :
throw new IllegalStateException("unexpect OBJECTLIT key: "+nodeB.getFirstChild());

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.isUnknownType()||type.isUnionType()){
return false;
}
swtich (getType()){
default :
throw new IllegalStateException("unexpect OBJECTLIT key: "+nodeB.getFirstChild());

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(nodeB.isNew(),"Expected: NEW, Got: %s",Token.name(node.getType()));
swtich (getType()){
default :
throw new IllegalStateException("unexpect OBJECTLIT key: "+nodeB.getFirstChild());

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return false;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.DELPROP :

swtich (getType()){
default :
return false;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return true;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(nodeB.isCall(),"Expected: CALL, Got: %s",Token.name(node.getType()));
swtich (getType()){
default :
return false;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return true;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.functionCallHasSideEffects(nodeB)){
return true;
}
swtich (getType()){
default :
return false;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return true;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!(parent.getType()==Token.BLOCK||pType==Token.SCRIPT||pType==Token.NAME||pType==Token.ASSIGN||pType==Token.STRING_KEY)){
return false;
}
swtich (getType()){
default :
return false;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return true;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isObjectLitKey(parent,parent.getParent())){
JSDocInfo parent.getParent().getJSDocInfo()=gramps.getJSDocInfo();
if(maybeLends!=null&&maybeLends.getLendsName()!=null&&maybeLends.getLendsName().endsWith(".prototype")){
return false;
}
}
swtich (getType()){
default :
return false;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return true;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument((nodeB.isAnd())||(node.isOr()),"Expected: AND or OR, Got: %s",Token.name(node.getType()));
swtich (getType()){
default :
return false;

case Token.NAME :
return getString().isEmpty()?false:true;

case Token.GETPROP :
return getFirstChild().isUnscopedQualifiedName();

default :
return true;


}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.parsing.IRFactory,1220
com.google.javascript.rhino.jstype.NoObjectType,138
========
return getNativeType(JSTypeNative.CHECKED_UNKNOWN_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getNativeType(JSTypeNative.STRING_OBJECT_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getNativeType(JSTypeNative.BOOLEAN_OBJECT_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getNativeType(JSTypeNative.STRING_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getNativeType(JSTypeNative.BOOLEAN_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getNativeType(JSTypeNative.ALL_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getNativeType(JSTypeNative.NUMBER_OBJECT_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getNativeType(JSTypeNative.NO_OBJECT_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getNativeType(JSTypeNative.UNKNOWN_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getNativeType(JSTypeNative.NULL_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getNativeType(JSTypeNative.NUMBER_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getNativeType(JSTypeNative.VOID_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getNativeType(JSTypeNative.NO_RESOLVED_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getNativeType(JSTypeNative.GLOBAL_THIS);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return getNativeType(UNKNOWN_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getNativeType(ALL_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getNativeType(ARRAY_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getNativeType(U2U_CONSTRUCTOR_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getNativeType(NUMBER_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getNativeType(BOOLEAN_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getNativeType(STRING_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getNativeType(VOID_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getNativeType(NO_TYPE);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.rhino.jstype.NoObjectType,144
com.google.javascript.rhino.jstype.NoObjectType,151
com.google.javascript.rhino.jstype.NoObjectType,161
com.google.javascript.rhino.jstype.NoObjectType,171
com.google.javascript.jscomp.TypedScopeCreator,560
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  compiler.report(t.makeError(n,INVALID_STYLE_ERROR,styleStr));
  return;
}

UNKNOWN ASTNode type : catch (UnsupportedOperationException ex) {
  error(NEGATING_A_NON_NUMBER_ERROR,left);
  return n;
}

UNKNOWN ASTNode type : catch (UnsupportedOperationException ex) {
  error(NEGATING_A_NON_NUMBER_ERROR,left);
  return n;
}

========
case Token.VOID :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NUMBER :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OBJECTLIT :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.HOOK :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.FUNCTION :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.FALSE :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.ARRAYLIT :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
Preconditions.checkState(!n.getString().isEmpty());
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NAME :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NAME :

case Token.NULL :
Preconditions.checkState(!n.getString().isEmpty());
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.ASSIGN_LSH :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
tryConvertToNumber(n.getLastChild());
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CONTINUE :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.FOR :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.WHILE :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
type=getValueType(n.getFirstChild());
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETTER_DEF :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.SWITCH :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.IF :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.STRING :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.REGEXP :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.TYPEOF :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NEW :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.VAR :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.LABEL :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.SCRIPT :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.BITNOT :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.OR :
return n!=n.getFirstChild();

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CATCH :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.CALL :
Node n.getFirstChild()=n.getFirstChild();

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.TRUE :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.AND :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.QMARK :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.ELLIPSIS :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
scope=traverseAnd(n,scope).getJoinedFlowScope().createChildFlowScope();
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OR :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
scope=traverse(n.getFirstChild(),scope);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.RETURN :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
if(n.getChildCount()<3){
return true;
}
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
n=n.getLastChild();
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
if(n.getChildCount()<3){
return true;
}
n=n.getLastChild();

n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.MUL :
visitBinaryOperator(n.getType(),t,n);
break;

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.DELPROP :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.GETPROP :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.removeChild(node,n);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
scope=traverseCatch(n,scope);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
Preconditions.checkArgument(node.isFor(),"Unsupported assignment in replaceWithRhs. parent: %s",Token.name(parent.getType()));
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
typeable=false;
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
scope=traverseAssign(n,scope);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
scope=traverseHook(n,scope);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
scope=traverseCall(n,scope);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CASE :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NEG :
scope=traverse(n.getFirstChild(),scope);
n.setJSType(getNativeType(NUMBER_TYPE));
break;

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerName=n.getQualifiedName();
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerName==null)return ;
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.BITNOT :
scope=traverseChildren(n,scope);
n.setJSType(getNativeType(NUMBER_TYPE));
break;

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
scope=traverseChildren(n,scope);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.IN :
scope=traverseChildren(n,scope);
n.setJSType(getNativeType(BOOLEAN_TYPE));
break;

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.ASSIGN_MOD :
maybeEliminateAssignmentByLvalueName(t,n,node);
break;

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CALL :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
validateMaximumChildCount(n,1);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.hasChildren()){
validateExpression(n.getFirstChild());
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.hasChildren()){
validateLabelName(n.getFirstChild());
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMaximumChildCount(n,1);
if(n.hasChildren()){
validateLabelName(n.getFirstChild());
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GE :
type=getJSType(n.getFirstChild());
type=getJSType(n.getLastChild());

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.COMMA :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.COMMA :

case Token.NULL :
scope=traverse(n.getFirstChild(),scope);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
typeable=!n.isExprResult();
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
child=n.getFirstChild().getNext();
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
child=NodeUtil.getLoopCodeBlock(n);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
n.getParent().setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
reportCodeChange();
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scanVars(n.getNext(),n);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getPureBooleanValue(node)!=TernaryValue.FALSE){
return n;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.removeChild(n.getParent(),n);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
typeable=visitName(t,n,node);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PARAM_LIST :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(node.hasOneChild()){
NodeUtil.redeclareVarsInsideBranch(catchBlock);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
annotateDispatchers(n,node);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
checkForCallingConventionDefiningCalls(n,delegateCallingConventions);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.FUNCTION :

case Token.NULL :
checkForCallingConventionDefiningCalls(n,delegateCallingConventions);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
if(node.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
NodeUtil.maybeAddFinally(node.getParent());
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isEquivalentTo(n)){
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(NodeUtil.getImpureBooleanValue(NodeUtil.getConditionExpression(n))==TernaryValue.FALSE){
tryMinimizeExits(n.getFirstChild(),Token.BREAK,null);
}
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisType==null||objType.getJSDocInfo()!=null){
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
n.setString(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OR :
Node trySimplifyUnusedResult(n.getLastChild())=trySimplifyUnusedResult(n.getLastChild());
if(conditionalResultNode==null){
Preconditions.checkState(n.hasOneChild());
node=trySimplifyUnusedResult(n.getFirstChild());
}

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node==null){
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.AND :
VariableLiveness isVariableReadBeforeKill(n.getFirstChild(),ownerName)=isVariableReadBeforeKill(n.getFirstChild(),ownerName);
VariableLiveness isVariableReadBeforeKill(n.getLastChild(),ownerName)=isVariableReadBeforeKill(n.getLastChild(),variable);

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
ensureTyped(t,n);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node==null||!callbackFunction.isFunction()){
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maybeRecordExport(n);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
externsRoot.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
checkNameVisibility(t,n,node);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(mayHaveSideEffects(node)){
return n;
}
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
knownLength=node.getChildCount();
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(mayHaveSideEffects(node)){
return n;
}
knownLength=node.getChildCount();

n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
knownLength=node.getString().length();
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
n.setType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=traverseChildren(n,scope);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(n);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(n.getFirstChild());
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.getFirstChild().getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",n);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.visit(t,n,node);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMinimumChildCount(n,2);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMaximumChildCount(n,3);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateExpression(n.getFirstChild());
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateBlock(n.getChildAtIndex(1));
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getChildCount()==3){
validateBlock(n.getLastChild());
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetterDef()){
node=IR.call(replacement);
replacement.putBooleanProp(Node.FREE_CALL,true);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
case Token.NULL :
n.getParent().setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
childType=getJSType(n.getFirstChild());
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node!=null&&nameNode.getParent()!=null&&nameNode.getParent().isCatch()){
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
typeable=!(n.isAssign()&&n.getFirstChild()==n);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETELEM :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!n.getFirstChild().getNext().isString()){
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
left=n.getFirstChild();
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
ensureTyped(t,n,NUMBER_TYPE);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
left=n.getFirstChild();
ensureTyped(t,n,NUMBER_TYPE);

n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NOT :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.EQ :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.EQ :

case Token.NULL :
left=n.getFirstChild();
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.EQ :

case Token.NULL :
ensureTyped(t,n,NUMBER_TYPE);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.EQ :

case Token.NULL :
left=n.getFirstChild();
ensureTyped(t,n,NUMBER_TYPE);

n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
parent.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compiler.getCodingConvention().describeFunctionBind(n,true)==null){
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getJSType(bind.target).restrictByNotNullOrUndefined().toMaybeFunctionType()==null){
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
addPossibleSignature(n.getFirstChild().getString(),key.getFirstChild(),t);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
newParam.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
newParameter(n.getJSType()).setOptionalArg(n.isOptionalArg());
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETELEM :
Node n.getFirstChild().getNext()=n.getFirstChild().getNext();
if(dest.isString()){
String n.getFirstChild().getNext().getString()=dest.getString();
if(s.equals("prototype")){
processPrototypeParent(node,t.getInput());
}else {
markPropertyAccessCandidate(dest,t.getInput());
}
}

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node==null){
reportBadBaseClassUse(t,n,"Could not find goog.inherits for base class");
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
name1.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.detachFromParent();
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,node);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
name2.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.detachFromParent();
n.replaceChild(n,node);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.detachFromParent();
reportCodeChange();
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,node);
reportCodeChange();
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.detachFromParent();
n.replaceChild(n,node);
reportCodeChange();
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.isFunctionPrototypeType()){
FunctionType type.toObjectType().getOwnerFunction()=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&type.isFunctionType()){
return true;
}
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
case Token.NULL :
parent.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null){
node.setJSType(type);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
IR.block().copyInformationFrom(node);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
IR.block().addChildToFront(node);
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
reportCodeChange("LABEL normalization");
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
IR.block().copyInformationFrom(node);
IR.block().addChildToFront(node);
reportCodeChange("LABEL normalization");

n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETELEM :
Node n.getFirstChild().getNext()=n.getFirstChild().getNext();
if(dest.isString()){
if(dest.getString().equals("prototype")){
processPrototypeParent(t,node);
}else {
if(parent.isAssign()&&parent.getFirstChild()==n){
addPossibleSignature(dest.getString(),n.getNext(),t);
}
}
}

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(n.getFirstChild().getNext().isString()&&n.getParent().getParent().isAssign()){
Node n.getParent().getParent().getFirstChild().getNext()=n.getParent().getParent().getFirstChild().getNext();
addPossibleSignature(n.getFirstChild().getNext().getString(),n.getParent().getParent().getFirstChild().getNext(),t);
}
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(node);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(!isExtern&&n.isGetProp()){
return getImplicitActionsFromCall(n,n.getJSType());
}
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(!isExtern&&n.getFirstChild().isGetProp()){
return getImplicitActionsFromProp(n.getFirstChild().getFirstChild().getJSType(),lhs.getLastChild().getString(),n.getLastChild());
}
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,n.getFirstChild().getNext());
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node.isEmpty()){
elem=NodeUtil.newUndefinedNode(elem);
}else {
n.removeChild(elem);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
validator.expectObject(t,n,getJSType(n.getLastChild()),"\'in\' requires an object");
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
validator.expectObject(t,n,getJSType(n.getLastChild()),"\'in\' requires an object");
left=n.getFirstChild();

n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!node.isEmpty()){
IR.block().srcref(n).addChildrenToFront(c);
}else {
newBlock.setWasEmptyNode(true);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!node.isString()){
Node IR.add(IR.string("").srcref(n),node)=IR.add(IR.string("").srcref(n),foldedStringNode);
foldedStringNode=replacement;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.validateMinimumChildCount(n,1);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMinimumChildCount(n,1);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
newOperator.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,n.removeFirstChild());
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CALL :
Node n.getFirstChild()=n.getFirstChild();
String n.getFirstChild().getQualifiedName()=calledFn.getQualifiedName();
if(name!=null){
Config findMatching(n.getFirstChild().getQualifiedName())=findMatching(name);
if(config!=null){
doSubstitutions(t,config,n);
return ;
}
}

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isAssignAdd()){
updateScopeForTypeChange(scope,node,type,type);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
case Token.NULL :
parent.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getBestLValueName(NodeUtil.getBestLValue(n))!=null&&lValueName.endsWith(".prototype")){
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
name.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
redeclareSimpleVar(scope,n.getFirstChild(),type);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.isDict()){
report(t,node,TypeValidator.ILLEGAL_PROPERTY_ACCESS,"\'.\'","dict");
}else if(n.getJSType()!=null&&n.isAssign()){
return ;
}else if(validator.expectNotNullOrUndefined(t,n,childType,"No properties on this expression",getNativeType(OBJECT_TYPE))){
checkPropertyAccess(childType,property.getString(),t,n);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.replaceChild(n,node);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!t.inGlobalScope()&&NodeUtil.isHoistedFunctionDeclaration(node)){
node.addChildToFront(value.detachFromParent());
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(isExtern&&node.isNumber()){
double node.getDouble()=node.getDouble();
if(node.getDouble()==0||node.getDouble()==1){
return n;
}
}
n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(isExtern&&node.isNumber()){
double node.getDouble()=node.getDouble();
if(node.getDouble()==0||node.getDouble()==1){
return n;
}
}
reportCodeChange();

n.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
reportCodeChange();
parent.setJSType(getNativeType(NULL_TYPE));
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nonExternFunctions.size()>0){
Node joinOnComma(nonExternFunctions,n)=joinOnComma(commas,n);
node.addChildBefore(comma,n);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.reportCodeChange();
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
n.setLineno(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
callTarget.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.FUNCTION :
 final Scope t.getScope()=t.getScope();
 final String n.getFirstChild().getString()=n.getFirstChild().getString();
if(functionPrivateName!=null&&functionPrivateName.length()>0&&outerScope.isDeclared(functionPrivateName,false)&&!(outerScope.getVar(functionPrivateName).getType() instanceof FunctionType)){
report(t,n,FUNCTION_MASKS_VARIABLE,functionPrivateName);
}
break;

}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node.isFor()){
if(nonExternFunctions.isEmpty()){
replacements.add(IR.empty());
}else {
Node collapseReplacements(nonExternFunctions)=collapseReplacements(replacements);
replacements.clear();
replacements.add(expr);
}
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.isFunction()){
JSType node.getJSType()=node.getJSType();
if(lhsType==null){
break;
}
FunctionType node.getJSType().restrictByNotNullOrUndefined().toMaybeFunctionType()=lhsType.restrictByNotNullOrUndefined().toMaybeFunctionType();
if(funType==null){
break;
}
ConcreteType createType(node.getJSType().restrictByNotNullOrUndefined().toMaybeFunctionType().getReturnType())=createType(funType.getReturnType());
retType=createUnionWithSubTypes(retType);
ConcreteType type.toFunction().getReturnSlot().getType().unionWith(createType(node.getJSType().restrictByNotNullOrUndefined().toMaybeFunctionType().getReturnType()))=type.toFunction().getReturnSlot().getType().unionWith(retType);
((ConcreteScope)type.getScope()).declareSlot(ConcreteFunctionType.RETURN_SLOT_NAME,n,newret);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
fncBlock.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
n.addChildToBack(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("jQuery.prototype".equals(node.getQualifiedName())){
node=objectToExtend.removeFirstChild();
}else {
targetVal=objectToExtend.detachFromParent();
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(node,IR.function(IR.name("").srcref(n),IR.paramList().srcref(n),n));
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.putBooleanProp(Node.FREE_CALL,true);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerName==null||!enclosingQname.endsWith(ownerName)){
reportBadBaseClassUse(t,n,"Enclosing method does not match "+ownerName);
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.removeChild(node);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(isExtern||type!=null);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isName()){
Preconditions.checkArgument(node.isFunction()||parent.isVar());
}else {
Preconditions.checkArgument(n.isGetProp()&&(parent.isAssign()||parent.isExprResult()));
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node.isVar()){
node=IR.block(key,IR.exprResult(IR.assign(key.getFirstChild().cloneNode(),node.cloneTree())),node);
}else {
ifBody=IR.block(IR.exprResult(IR.assign(key,tmp.cloneTree())),body);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(node)){
Node IR.exprResult(node.detachFromParent()).srcref(cond)=IR.exprResult(cond.detachFromParent()).srcref(cond);
n.addChildAfter(condStatement,n.removeFirstChild());
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
c.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
arg.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(n);
validateFunctionExpression(n.getFirstChild());
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(n);
if(!n.getFirstChild().getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",n);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(n.getFirstChild());
if(!n.getFirstChild().getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",n);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(n);
validateFunctionExpression(n.getFirstChild());
if(!n.getFirstChild().getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",n);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypedScopeCreator,561
========
case Token.BITNOT :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.DELPROP :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.COMMA :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.ASSIGN :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.AND :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
type=getValueType(n.getFirstChild());
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
child=n.getFirstChild().getNext();
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
tryConvertToNumber(n.getLastChild());
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FOR :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
default :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
Preconditions.checkState(!n.getString().isEmpty());
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
scope=traverseAnd(n,scope).getJoinedFlowScope().createChildFlowScope();
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
scope=traverse(n.getFirstChild(),scope);
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CALL :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.CATCH :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
scope=traverseAssign(n,scope);
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
scope=traverseHook(n,scope);
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
scope=traverseCall(n,scope);
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
typeable=false;
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
Preconditions.checkArgument(node.isFor(),"Unsupported assignment in replaceWithRhs. parent: %s",Token.name(parent.getType()));
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(getPureBooleanValue(n.getFirstChild())!=TernaryValue.UNKNOWN){
return getPureBooleanValue(n.getFirstChild()).toBoolean(true)?"false":"true";
}
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(getPureBooleanValue(n.getFirstChild())!=TernaryValue.UNKNOWN){
return getPureBooleanValue(n.getFirstChild()).toBoolean(true)?0.0:1.0;
}
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.getParent()!=null);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.ARRAYLIT :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
result=false;
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.PARAM_LIST :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.GETELEM :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
inputId=n.getInputId();
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
Preconditions.checkNotNull(inputId);
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
inputId=n.getInputId();
Preconditions.checkNotNull(inputId);

n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
typeable=visitName(t,n,node);
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if("undefined".equals(n.getString())||"Infinity".equals(n.getString())){
return n.getString();
}
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
type=n==n.getFirstChild()?Ref.Type.CALL_GET:Ref.Type.ALIASING_GET;
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMaximumChildCount(n,1);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.hasChildren()){
validateExpression(n.getFirstChild());
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.hasChildren()){
validateLabelName(n.getFirstChild());
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMaximumChildCount(n,1);
if(n.hasChildren()){
validateLabelName(n.getFirstChild());
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(n.getChildCount()<3){
return true;
}
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
n=n.getLastChild();
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
if(n.getChildCount()<3){
return true;
}
n=n.getLastChild();

n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
scope=traverseChildren(n,scope);
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(NodeUtil.getImpureBooleanValue(NodeUtil.getConditionExpression(n))==TernaryValue.FALSE){
tryMinimizeExits(n.getFirstChild(),Token.BREAK,null);
}
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
result=true;
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
checkForCallingConventionDefiningCalls(n,delegateCallingConventions);
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
if(node.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
NodeUtil.maybeAddFinally(node.getParent());
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
annotateDispatchers(n,node);
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
n.getParent().setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
reportCodeChange();
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(n.getString().equals("arguments")){
return false;
}else {
Var scope.getVar(n.getString())=scope.getVar(n.getString());
if(scope.getVar(n.getString())!=null&&(scope.getVar(n.getString()).isLocal()||v.nameNode.getParent().isCatch())){
return false;
}
}
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.HOOK :

case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
parent.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
checkNameVisibility(t,n,node);
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(!isExtern&&n.getFirstChild().isGetProp()){
return getImplicitActionsFromCall(n,n.getFirstChild().getJSType());
}
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dereferenceToObject(type)==null||objType.getJSDocInfo()!=null){
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(mayHaveSideEffects(node)){
return n;
}
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
knownLength=node.getChildCount();
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(mayHaveSideEffects(node)){
return n;
}
knownLength=node.getChildCount();

n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
knownLength=node.getString().length();
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
externsRoot.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(!isExtern&&n.getFirstChild().isGetProp()){
return getImplicitActionsFromProp(n.getFirstChild().getFirstChild().getJSType(),lhs.getLastChild().getString(),n.getLastChild());
}
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
ensureTyped(t,n);
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
isSet=true;
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
type=n.getFirstChild()==null?Name.Type.OTHER:getValueType(n.getFirstChild());
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
isSet=true;
type=n.getFirstChild()==null?Name.Type.OTHER:getValueType(n.getFirstChild());

n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
addPossibleSignature(n.getFirstChild().getString(),key.getFirstChild(),t);
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
Preconditions.checkState(n.hasOneChild());
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
if(n.getFirstChild().isName()&&n.getFirstChild().hasChildren()){
maybeAddFunction(new FunctionVar(n),t.getModule());
}
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
Preconditions.checkState(n.hasOneChild());
if(n.getFirstChild().isName()&&n.getFirstChild().hasChildren()){
maybeAddFunction(new FunctionVar(n),t.getModule());
}

n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node!=null&&nameNode.getParent()!=null&&nameNode.getParent().isCatch()){
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetterDef()){
node=IR.call(replacement);
replacement.putBooleanProp(Node.FREE_CALL,true);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.visit(t,n,node);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compiler.getCodingConvention().describeFunctionBind(n,true)==null){
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getJSType(bind.target).restrictByNotNullOrUndefined().toMaybeFunctionType()==null){
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
{
String n.getFirstChild().getString()=n.getFirstChild().getString();
}
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=n.getFirstChild();
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

ensureTyped(t,n,BOOLEAN_TYPE);
case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.isFunctionPrototypeType()){
FunctionType type.toObjectType().getOwnerFunction()=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&type.isFunctionType()){
return true;
}
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node==null){
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
case Token.NULL :
parent.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
Preconditions.checkState(n.hasChildren(),"AST should be normalized");
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NULL :
if(n.getFirstChild().getNext().isString()&&n.getParent().getParent().isAssign()){
Node n.getParent().getParent().getFirstChild().getNext()=n.getParent().getParent().getFirstChild().getNext();
addPossibleSignature(n.getFirstChild().getNext().getString(),n.getParent().getParent().getFirstChild().getNext(),t);
}
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.validateMinimumChildCount(n,1);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node==null||node==null||!areNodesEqualForInlining(lastTrue,lastFalse)){
break;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.detachFromParent();
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
case Token.NULL :
parent.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.isReturn()){
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.removeFirstChild()!=null){
newReportFunctionExitNode().addChildToBack(returnRhs);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.reportCodeChange();
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(isExtern&&node.isNumber()){
double node.getDouble()=node.getDouble();
if(node.getDouble()==0||node.getDouble()==1){
return n;
}
}
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
if(isExtern&&node.isNumber()){
double node.getDouble()=node.getDouble();
if(node.getDouble()==0||node.getDouble()==1){
return n;
}
}
reportCodeChange();

n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
reportCodeChange();
parent.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
IR.block().copyInformationFrom(node);
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
IR.block().addChildToFront(node);
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
reportCodeChange("LABEL normalization");
n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
IR.block().copyInformationFrom(node);
IR.block().addChildToFront(node);
reportCodeChange("LABEL normalization");

n.setJSType(getNativeType(NULL_TYPE));
break;


case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.isDict()){
report(t,node,TypeValidator.ILLEGAL_PROPERTY_ACCESS,"\'.\'","dict");
}else if(n.getJSType()!=null&&n.isAssign()){
return ;
}else if(validator.expectNotNullOrUndefined(t,n,childType,"No properties on this expression",getNativeType(OBJECT_TYPE))){
checkPropertyAccess(childType,property.getString(),t,n);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMinimumChildCount(n,1);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateExpression(n.getFirstChild());
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getBestLValueName(NodeUtil.getBestLValue(n))!=null&&lValueName.endsWith(".prototype")){
return ;
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!node.isEmpty()){
IR.block().srcref(n).addChildrenToFront(c);
}else {
newBlock.setWasEmptyNode(true);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
type=getNativeType(UNKNOWN_TYPE);
Var t.getScope().getVar(n.getString())=t.getScope().getVar(n.getString());
if(var!=null){
JSType t.getScope().getVar(n.getString()).getType()=var.getType();
if(varType!=null){
type=varType;
}
}
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null){
node.setJSType(type);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
callTarget.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.isFunction()){
JSType node.getJSType()=node.getJSType();
if(lhsType==null){
break;
}
FunctionType node.getJSType().restrictByNotNullOrUndefined().toMaybeFunctionType()=lhsType.restrictByNotNullOrUndefined().toMaybeFunctionType();
if(funType==null){
break;
}
ConcreteType createType(node.getJSType().restrictByNotNullOrUndefined().toMaybeFunctionType().getReturnType())=createType(funType.getReturnType());
retType=createUnionWithSubTypes(retType);
ConcreteType type.toFunction().getReturnSlot().getType().unionWith(createType(node.getJSType().restrictByNotNullOrUndefined().toMaybeFunctionType().getReturnType()))=type.toFunction().getReturnSlot().getType().unionWith(retType);
((ConcreteScope)type.getScope()).declareSlot(ConcreteFunctionType.RETURN_SLOT_NAME,n,newret);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
fncBlock.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
n.addChildToBack(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("jQuery.prototype".equals(node.getQualifiedName())){
node=objectToExtend.removeFirstChild();
}else {
targetVal=objectToExtend.detachFromParent();
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(node,IR.function(IR.name("").srcref(n),IR.paramList().srcref(n),n));
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.putBooleanProp(Node.FREE_CALL,true);
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node.isFor()){
if(nonExternFunctions.isEmpty()){
replacements.add(IR.empty());
}else {
Node collapseReplacements(nonExternFunctions)=collapseReplacements(replacements);
replacements.clear();
replacements.add(expr);
}
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
arg.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
n.getFirstChild().setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.detachFromParent();
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node.getChildBefore(n)==null){
node.addChildToFront(NodeUtil.newVarNode(ownerName,n));
}else {
parent.addChildAfter(var,prev);
}
case Token.NULL :
n.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NULL :
c.setJSType(getNativeType(NULL_TYPE));
break;

case Token.VOID :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypedScopeCreator,1320
========
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSDocInfo().getType().evaluate(scope,typeRegistry);
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getFirstChild().getNext().getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isObjectLit()){
return secondClause.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isQualifiedName()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(info);
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(info.hasEnumParameterType());
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(info);
if(rValue!=null&&rValue.isQualifiedName()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(info.hasEnumParameterType());
if(rValue!=null&&rValue.isQualifiedName()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(info);
Preconditions.checkState(info.hasEnumParameterType());
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(info);
Preconditions.checkState(info.hasEnumParameterType());
if(rValue!=null&&rValue.isQualifiedName()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getParent()!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.getBestLValueName(NodeUtil.getBestLValue(lValue))==null){
return null;
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.getBestLValueName(NodeUtil.getBestLValue(lValue))==null){
return null;
}
if(lValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.getBestLValueName(NodeUtil.getBestLValue(lValue))==null){
return null;
}
if(rValue.getParent()!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue.getJSType()!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(definitionSite.inExterns){
return false;
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isFunction()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue==null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!SimpleDefinitionFinder.isSimpleFunctionDeclaration(rValue)){
return true;
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(arg!=null&&arg.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&rValue.getJSType().isFunctionType()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.getJSType().isFunctionType()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(arg!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&arg.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isObjectLit()){
return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expr!=null&&expr.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expr!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&expr.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isObjectLit()){
return n.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisType!=null&&rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rhsValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oldParameterType!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isQualifiedName()&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info==null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&parent.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.getJSType()==null&&rValue.isFunction()){
varType=parent.getJSType();
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstArgument!=null&&firstArgument.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstArgument!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&firstArgument.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&secondArgument.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent!=null&&parent.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(greatGramps!=null&&greatGramps.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(greatGramps!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&greatGramps.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name!=null&&name.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&name.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(ownerName!=null&&ownerName!=null);
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isGetProp()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&receiver.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&n.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue!=null&&lValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&lValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue==null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue==null&&lValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue==null&&lValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(createCheckTypeCallNode(lValue.getJSType(),rValue.cloneTree())==null){
rValue=paramName.getNext();
continue;
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.getParent().isExprResult()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.getParent().isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.getLastChild().getString().equals("prototype")){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue.getJSType().toMaybeFunctionType()!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
node=addMarker(lValue.getJSType().toMaybeFunctionType(),nodeToInsertAfter,null);
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isString()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&left.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=getJSType(rValue);
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=getJSType(lValue);
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lValue.isObjectLit());
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!rValue.isAssign()){
return false;
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isVar()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&objectToLoopOver.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(grandparent!=null&&grandparent.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isScript()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(grandparent!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&grandparent.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getBestJSDocInfo(rValue)==null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&node.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null){
lValue.setJSType(type);
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.lValue=rootNode;
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(scope!=scope&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=scope&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(target!=null&&target.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(target!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&target.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&lValue.isExprResult()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerNode!=null&&ownerNode.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isThis()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerNode!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&ownerNode.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue.replaceChild(node,NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),String.format("%s.call",rValue.getQualifiedName()),callee,"goog.base"));
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(node.getJSDocInfo()!=null&&rValue.isFunction()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node.getJSDocInfo()!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&value.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(lValue.isObjectLit());
if(rValue!=null&&rValue.isFunction()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getJSType(lValue).dereference()==null?null:objType.getIndexType()!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.getLastChild().isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&definition.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!getJSType(lValue).isEnumType()){
return ;
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getTypeDeprecationInfo(type)!=null){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getTypeDeprecationInfo(type)!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.getChildAtIndex(1).isString()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.getChildAtIndex(1).isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&lhs.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getPropertyDeprecationInfo(ObjectType.cast(dereference(rValue.getFirstChild().getJSType())),rValue.getLastChild().getString())!=null){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getPropertyDeprecationInfo(ObjectType.cast(dereference(rValue.getFirstChild().getJSType())),rValue.getLastChild().getString())!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.getLastChild().isQualifiedName()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isUnscopedQualifiedName()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.getFirstChild().isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
rValue.getFirstChild().setJSType(thisType);
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&(rValue.getLastChild().isName()||name.isString())){
thisType.defineDeclaredProperty(name.getString(),jsType,rValue);
}
if(rValue!=null&&rValue.isObjectLit()){
return rValue.getJSType();
}else {
return createEnumTypeFromNodes(rValue,lValue.getQualifiedName(),info,lValue);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&(secondClause.getJSType() instanceof EnumType)){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()!=null&&secondClause.getJSType()!=null){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()!=null&&!(secondClause.isVar()&&!parent.hasOneChild())){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.getJSType()==null&&secondClause.isFunction()){
varType=parent.getJSType();
}
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&!JSType.isEquivalent(type,secondClause.getJSType())){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.isFunction()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.isEmptyType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=getJSType(secondClause);
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=getJSType(lValue);
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getJSType(bind.target).restrictByNotNullOrUndefined().toMaybeFunctionType()==null){
return ;
}
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return normalizeClassType(lValue.getJSType());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(createCheckTypeCallNode(lValue.getJSType(),secondClause.cloneTree())==null){
secondClause=paramName.getNext();
continue;
}
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisType!=null&&secondClause!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisType!=null&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
getSubTypes(secondClause.getConstructorType().getJSType(),Sets.newHashSet());
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=type.getGreatestSubtype(type);
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&lValue==secondClause.getFirstChild()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type!=null){
lValue.setJSType(type);
}
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&(secondClause.getFirstChild().isFunction())){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()!=null&&!lValue.isGetProp()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()==null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()!=null&&!lValue.isInc()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&lValue.getFirstChild()==secondClause&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()!=secondClause&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()==null&&!lValue.isInc()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&lValue.getFirstChild()==secondClause&&!lValue.isInc()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()!=null&&type.getInstanceType()!=null){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&!type.isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&secondClause.getScope()!=secondClause.getScope().getVar(lValue.getQualifiedName()).getScope()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&namesMatch){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getTypeOfThis().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause!=null&&!secondClause.isUnknownType()&&!secondClause.isEmptyType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause!=null&&!retType.isUnknownType()&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause!=null&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause!=null&&secondClause.getJSType()!=null&&!secondClause.isEmptyType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.isUnknownType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.isNativeObjectType()){
return secondClause.getJSType();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(arg.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expr.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(p.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rhs.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=calledFn.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getFirstChild().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
info=rValue.getJSDocInfo();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()==null&&secondClause.isFunction()){
varType=parent.getJSType();
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()==null||info==null){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
info=rValue.getJSDocInfo();
if(parent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getNext().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.toMaybeFunctionType().getReturnType()==null){
returnType=getNativeType(VOID_TYPE);
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(rValue.getFirstChild()==null){
actualReturnType=getNativeType(VOID_TYPE);
valueNode=rValue;
}else {
actualReturnType=getJSType(rValue.getFirstChild());
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.toMaybeFunctionType().getReturnType()==null){
returnType=getNativeType(VOID_TYPE);
}
if(rValue.getFirstChild()==null){
actualReturnType=getNativeType(VOID_TYPE);
valueNode=rValue;
}else {
actualReturnType=getJSType(rValue.getFirstChild());
}

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getFirstChild().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isOr()){
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lhs.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(secondClause==firstClause.getFirstChild()&&parent.getChildCount()==2&&expr.getNext().isName()&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(secondClause==firstClause.getFirstChild()&&parent.getChildCount()==2&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iArgument.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
inferPropertyTypesToMatchConstraint(getJSType(secondClause),getJSType(node));
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(property.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(rValue.isName());
if(parent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
return "";
}else if(type.isFunctionType()){
return getFunctionAnnotation(secondClause);
}else if(type.isEnumType()){
return "/** @enum {"+type.toMaybeEnumType().getElementsType().toAnnotationString();
}else if(!type.isUnknownType()&&!type.isEmptyType()){
return "/** @type {"+node.getJSType().toAnnotationString();
}else {
return "";
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getFirstChild().isOr()){
Node firstClause=rValue.getFirstChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(left.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause=getJSType(secondClause);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=getJSType(rValue);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
valueType=firstClause.getJSType();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=assign.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isExprAssign(node.getFirstChild())){
return null;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause==null){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isCall()&&parent.getFirstChild()==rValue){
return true;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isGet(secondClause)&&rValue==parent.getFirstChild()&&name.getNext().isString()&&name.getNext().getString().equals("call")){
Node firstClause=name.getAncestor(2);
if(gramps.isCall()&&gramps.getFirstChild()==parent){
return true;
}
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstArgument.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondArgument.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
parent=secondClause.getFirstChild().getQualifiedName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(key.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(right.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(secondClause.isAssign());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isOr()){
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nameNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null||qName.isEmpty()){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lvalue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objlit.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
rightType=getNativeType(UNKNOWN_TYPE);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Preconditions.checkState(allowObjectCallDecomposing(),"Object method calls can not be decomposed.");
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
state.sideEffects=true;
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
parent=lValue;
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Preconditions.checkState(allowObjectCallDecomposing(),"Object method calls can not be decomposed.");
state.sideEffects=true;
parent=lValue;

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(receiver.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=ast1.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getFirstChild().getFirstChild().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.getFirstChild().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(secondClause.isName()||n.isGetProp());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callTarget.isOr()){
Node firstClause=callTarget.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callTarget.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=callTarget.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&firstClause.getJSType()!=null){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(object.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(scopeFuncParent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=firstClause.getParent().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=firstClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isExprAssign(rValue)){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isOr()){
Node firstClause=secondClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=secondClause.getFirstChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=secondClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
add(getTypeAnnotation(lValue.getFirstChild().getLastChild()));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isFunction());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause==null){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&firstClause.getInstanceType()!=null){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
scope.declareSlot(rValue.getFirstChild().getString(),n,firstClause);
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.getFirstChild().getFirstChild().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(current.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.setJSType(rValue.getJSType());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.setJSDocInfo(new JSDocInfo());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(function.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&parent.isName()){
Node secondClause=parent.getParent();
if(gramps!=null&&gramps.isVar()){
return false;
}
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Preconditions.checkState(secondClause.isName());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.addChildToBack(firstClause.getLastChild().detachFromParent());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.addChildToBack(secondClause.detachFromParent());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
redeclaration=true;
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Preconditions.checkState(secondClause.isName());
secondClause.addChildToBack(firstClause.getLastChild().detachFromParent());
rValue.addChildToBack(secondClause.detachFromParent());
redeclaration=true;

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=key.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.removeChild(secondClause);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
key=secondClause.getNext();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.removeChild(secondClause);
key=secondClause.getNext();
lValue.reportCodeChange();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dest.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(candidateDefinition.isOr()){
Node firstClause=candidateDefinition.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(candidateDefinition.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=candidateDefinition.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.putBooleanProp(Node.IS_NAMESPACE,true);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
if(firstClause.isName()){
Node firstClause.getNext()=firstClause.getNext();
secondClause.removeChild(firstClause);
secondClause.removeChild(firstClause.getNext());
firstClause.addChildToFront(firstClause.getNext());
Node IR.var(firstClause)=IR.var(firstClause);
IR.var(firstClause).copyInformationFrom(rValue);
rValue.getParent().replaceChild(candidateDefinition,IR.var(firstClause));
firstClause.setJSDocInfo(secondClause.getJSDocInfo());
lValue.reportCodeChange();
replacementNode=IR.var(firstClause);
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.putBooleanProp(Node.IS_NAMESPACE,true);
if(firstClause.isName()){
Node firstClause.getNext()=firstClause.getNext();
secondClause.removeChild(firstClause);
secondClause.removeChild(firstClause.getNext());
firstClause.addChildToFront(firstClause.getNext());
Node IR.var(firstClause)=IR.var(firstClause);
IR.var(firstClause).copyInformationFrom(rValue);
rValue.getParent().replaceChild(candidateDefinition,IR.var(firstClause));
firstClause.setJSDocInfo(secondClause.getJSDocInfo());
lValue.reportCodeChange();
replacementNode=IR.var(firstClause);
}

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getFirstChild().isOr()){
rValue.putBooleanProp(Node.IS_NAMESPACE,true);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
Node firstClause=lhs.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.isName()){
var=scope.getVar(firstClause.getString());
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(var.scope!=scope){
secondClause.setTaintsUnknown();
}else {
secondClause.addTaintedLocalObject(null);
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.isName()){
var=scope.getVar(firstClause.getString());
}
if(var.scope!=scope){
secondClause.setTaintsUnknown();
}else {
secondClause.addTaintedLocalObject(null);
}

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(typeArray.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getParent().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=subtree.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
if(!secondClause.isName()){
return lValue;
}
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if((firstClause!=null)&&(firstClause.isString()||firstClause.isNumber())){
if(secondClause.getString().equals("parseInt")||secondClause.getString().equals("parseFloat")){
subtree=tryFoldParseNumber(lValue,secondClause.getString(),firstClause);
}
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(!secondClause.isName()){
return lValue;
}
if((firstClause!=null)&&(firstClause.isString()||firstClause.isNumber())){
if(secondClause.getString().equals("parseInt")||secondClause.getString().equals("parseFloat")){
subtree=tryFoldParseNumber(lValue,secondClause.getString(),firstClause);
}
}

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getFirstChild().isOr()){
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rhsValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isCall()){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerName.equals(firstClause.getFirstChild().getString())){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.mayHaveSideEffects(firstClause.getNext())||NodeUtil.canBeSideEffected(rhs)){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nameArg.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getQualifiedName()==null){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=src.restrictByNotNullOrUndefined();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objectToExtend.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause!=null&&firstClause.getNext()==null&&NodeUtil.isImmutableValue(firstClause)){
Node IR.add(IR.string("").srcref(secondClause),firstClause.detachFromParent())=IR.add(IR.string("").srcref(secondClause),firstClause.detachFromParent());
rValue.getParent().replaceChild(n,IR.add(IR.string("").srcref(secondClause),firstClause.detachFromParent()));
reportCodeChange();
return IR.add(IR.string("").srcref(secondClause),firstClause.detachFromParent());
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isCall());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(rValue.isCall());
if(callTarget.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isCall());
if(rValue.isOr()){
Node firstClause=callTarget.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isCall());
if(callTarget.isOr()){
Node firstClause=callTarget.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
type=lValue.createAnonymousObjectType();
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setDeferredType(node,type);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processObjectLitProperties(node,ObjectType.cast(objectLit.getJSType()),!namesMatch);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(target.isOr()){
Node firstClause=target.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(target.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=target.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isGetProp()){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node.isOr()){
Node firstClause=node.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=node.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&firstClause.getFirstChild()==secondClause){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(node.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&firstClause.getFirstChild()==secondClause){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondArg.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.isName()){
return ;
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
docInfo=rValue.getJSDocInfo();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(info==null){
docInfo=secondClause.getJSDocInfo();
}
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
docInfo=rValue.getJSDocInfo();
if(info==null){
docInfo=secondClause.getJSDocInfo();
}

if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(object.isOr()){
Node firstClause=object.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=object.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if("prototype".equals(NodeUtil.getStringValue(secondClause.getLastChild()))){
JSType firstClause=getJSType(secondClause.getFirstChild());
if(firstClause.isFunctionType()){
FunctionType firstClause.toMaybeFunctionType()=firstClause.toMaybeFunctionType();
}
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(body.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
return null;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(lValue.getLastChild(),firstClause);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null){
firstClause.setJSType(type);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.replaceChild(lValue,firstClause);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
if(parent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objLitParent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isOr()){
Node firstClause=parent.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=parent.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isOr()){
Node firstClause=rValue.getFirstChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isOr()){
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(block.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name2.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeName1.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=firstClause.getLastChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.detachFromParent();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.detachFromParent();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
secondClause.addChildrenToBack(IR.hook(node,getBlockExpression(node).getFirstChild().getLastChild().detachFromParent(),secondClause.removeChildren()).srcref(node));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.replaceChild(node,rValue);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.detachFromParent();
rValue.detachFromParent();
secondClause.addChildrenToBack(IR.hook(node,getBlockExpression(node).getFirstChild().getLastChild().detachFromParent(),secondClause.removeChildren()).srcref(node));
lValue.replaceChild(node,rValue);
reportCodeChange();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.detachFromParent();
Node firstClause=firstClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(member.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.getFirstChild().setJSType(thisType);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null&&(secondClause.isName()||name.isString())){
thisType.defineDeclaredProperty(name.getString(),jsType,rValue);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(catchBlock.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null&&lValue.contains(rValue)){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
value=firstClause.getLastChild();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getChildCount()!=3){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ObjectPropertyStringPreprocess.EXTERN_OBJECT_PROPERTY_STRING.equals(firstClause.getQualifiedName())){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(targetExpression.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isCall()||callsite.isNew());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(secondClause.isName()||n.isString());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(stringNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionName.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isGet(rValue)){
return lValue;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeInheritsExpr.isOr()){
Node firstClause=maybeInheritsExpr.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeInheritsExpr.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=maybeInheritsExpr.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.scope=parent;
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.firstClause=rootNode;
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.namesMatch=false;
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(paramNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getJSType()!=secondClause.getJSType().visit(this)){
namesMatch=true;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeExpr.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(rValue.getParent());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(typeNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!"goog.reflect.object".equals(secondClause.getQualifiedName())||rValue.getChildCount()!=3){
return null;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.removeChild(secondClause.getLastChild());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.replaceChild(secondClause,secondClause.getLastChild());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.removeChild(secondClause.getLastChild());
lValue.replaceChild(secondClause,secondClause.getLastChild());

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(grandparent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
tryDefineLexicalQualifiedNameRef(NodeUtil.getBestLValueName(rValue),n);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.isVar()&&firstClause.hasOneChild()){
hasAnnotation=true;
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.add(node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.isVar()&&firstClause.hasOneChild()){
hasAnnotation=true;
}
secondClause.add(node);

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(init.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isFor());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isForIn(rValue)){
return n;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(src.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(param.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnIdentifingNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(forVar.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(!firstClause.hasChildren()&&rValue.getString().equals(firstClause.getString())){
lValue.removeChild(secondClause);
node.replaceChild(rValue,secondClause);
compiler.reportCodeChange();
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isString()){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isGetProp()){
return ;
}
if(n.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(JSType.toMaybeFunctionType(lValue.getJSType())==null){
return null;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(JSType.toMaybeFunctionType(lValue.getJSType())==null){
return null;
}
if(namesMatch==null){
return null;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isEnumType()){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(curNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
scope.inferQualifiedSlot(rValue,ownerName+".",secondClause==null?null:var.getType()==null?getNativeType(UNKNOWN_TYPE):oldType,NodeUtil.getObjectLitKeyTypeFromValueType(rValue,rValue.getFirstChild().getJSType()));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(symbol.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerName.endsWith(".call")||propQName.endsWith(".apply")){
lValue.defineNameIfNotExists(rValue.getFirstChild().getQualifiedName(),isExtern).markExposedToCallOrApply();
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!"goog.exportSymbol".equals(ownerName)){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=addMarker(lValue.getJSType().toMaybeFunctionType(),nodeToInsertAfter,null);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Iterables.addAll(Sets.newTreeSet(ALPHA),lValue.getJSType().toMaybeFunctionType().getAllImplementedInterfaces());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(ObjectType thisType : Sets.newTreeSet(ALPHA)){
node=addMarker(lValue.getJSType().toMaybeFunctionType(),nodeToInsertAfter,interfaceType);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callee.isOr()){
Node firstClause=callee.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callee.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=callee.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(first.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isGet(secondClause)){
rValue.putBooleanProp(Node.FREE_CALL,true);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isCall(),"Expected: CALL, Got: %s",Token.name(node.getType()));
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.functionCallHasSideEffects(secondClause)){
return true;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getParent().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(root.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnName.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c.isOr()){
Node firstClause=c.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=c.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.hasChildren()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
firstClause=secondClause.getNext();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.hasChildren()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(arrayNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null){
if(right.getNext()!=null||!NodeUtil.isImmutableValue(right)){
return node;
}
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&right.isString()&&",".equals(right.getString())){
node.removeChild(right);
reportCodeChange();
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(llhs.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch){
if(NodeUtil.isStatementParent(secondClause)){
for(Node firstClause=n.getFirstChild();child!=null;child=child.getNext()){
if(NodeUtil.isHoistedFunctionDeclaration(child)){
defineFunctionLiteral(child,n);
}
}
}
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getLastChild().isFunction()&&!NodeUtil.isEmptyBlock(assign.getLastChild().getLastChild())){
secondClause.report(firstClause.makeError(lValue,INTERFACE_FUNCTION_NOT_EMPTY,secondClause.getCodingConvention().getAbstractMethodName()));
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=firstClause.getFirstChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dest.isOr()){
Node firstClause=firstClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isOr()){
Node firstClause=firstClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
firstClause.detachChildren();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.replaceChild(firstClause,firstClause.getLastChild());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
firstClause.detachChildren();
lValue.replaceChild(firstClause,firstClause.getLastChild());

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(target.isOr()){
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(innerIf.isOr()){
Node firstClause=innerIf.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(innerIf.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=innerIf.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!(isLowerPrecedenceInExpression(lValue,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(rValue.getFirstChild(),AND_PRECEDENCE))){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(argumentNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(reference.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextSibling.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=forNode.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(NodeUtil.containsType(secondClause,Token.IN)){
return ;
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.removeChild(secondClause);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(secondClause.isVar()){
newInitializer=secondClause;
}else {
Preconditions.checkState(secondClause.hasOneChild());
newInitializer=secondClause.getFirstChild();
secondClause.removeChild(node);
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
firstClause.replaceChild(firstClause.getFirstChild(),node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
compiler.reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
if(NodeUtil.containsType(secondClause,Token.IN)){
return ;
}
lValue.removeChild(secondClause);
if(secondClause.isVar()){
newInitializer=secondClause;
}else {
Preconditions.checkState(secondClause.hasOneChild());
newInitializer=secondClause.getFirstChild();
secondClause.removeChild(node);
}
firstClause.replaceChild(firstClause.getFirstChild(),node);
compiler.reportCodeChange();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getFirstChild().isOr()){
compiler.reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objectType.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause!=null&&firstClause.isVar()){
String secondClause.getString()=secondClause.getString();
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!(type instanceof ArrowType)){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propNameNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(cur.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=lValue.getFirstChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
Node firstClause=lValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
if(isTestFunction(lValue.getFirstChild().getFirstChild(),NodeUtil.getFunctionName(lValue.getFirstChild().getFirstChild()))){
exportTestFunctionAsSymbol(NodeUtil.getFunctionName(lValue.getFirstChild().getFirstChild()),lValue,node);
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(newParam.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(call.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
state.extractBeforeStatement=extractExpression(rValue.getFirstChild(),state.extractBeforeStatement);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.removeFirstChild();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tweakIdNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(blockChild.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(finallyBlock.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(exitNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
varType=getNativeType(JSTypeNative.UNKNOWN_TYPE);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope.inferSlotType(rValue.getString(),type);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isAliasName(secondClause.getString())){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!(rValue.isScript()||namesMatch!=null&&grandparent.isFunction()&&parent.isBlock())){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(secondClause.hasOneChild());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.isReturn()){
return statement.getFirstChild();
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isOr()){
Node firstClause=parent.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&secondClause.getNext()!=null){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&secondClause.getNext()!=null){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((firstClause==null)||!lValue.isGetProp()){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=nameNode.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause!=null&&(firstClause.isString()||firstClause.isRegExp()))return false;
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callName.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisArg.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
initializedName=firstClause;
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(id.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!NodeUtil.isVarOrSimpleAssignLhs(secondClause,node)){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(secondClause.isVar()){
secondClause.removeChild(rValue);
if(!secondClause.hasChildren()){
secondClause.detachFromParent();
}
lValue.reportCodeChange();
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(firstClause.getFirstChild()==lValue);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue=trySimplifyUnusedResult(left);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause==null){
secondClause.replaceChild(lValue,NodeUtil.newUndefinedNode(call));
}else {
secondClause.replaceChild(lValue,firstClause.detachFromParent());
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isOr()){
Node firstClause=lValue.getFirstChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isOr()){
Node firstClause=lValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isUnknownType()||type.isUnionType()){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause=secondClause.getNext();
if(key.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(curParam.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(keyNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue=firstClause.getNext();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.removeChild(lValue);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
rValue.removeChild(firstClause);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=assignTarget.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(evaluatesToLocalValue(firstClause)){
return false;
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(!ownerName.isEmpty());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(exportCallTarget.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause=current.getNext();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstArg.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(greatGramp.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((secondClause==null)||!functionNode.isFunction()){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(ownerName.equals(secondClause.getString())){
return ;
}
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
info=(JSDocInfo)secondClause.getProp(Node.JSDOC_INFO_PROP);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!namesMatch.isLocal()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(typeList.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause!=null){
createEdge(secondClause,Branch.UNCOND,computeFallThrough(child));
}else {
createEdge(node,Branch.UNCOND,computeFollowNode(node,this));
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
firstClause.copyInformationFrom(secondClause);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.replaceChild(secondClause.getFirstChild(),firstClause);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(secondClause.getFirstChild().isVar()){
newStatement=secondClause.getFirstChild();
}else {
newStatement=NodeUtil.newExpr(secondClause.getFirstChild());
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.addChildBefore(node,node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
reportCodeChange("FOR initializer");
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
firstClause.copyInformationFrom(secondClause);
secondClause.replaceChild(secondClause.getFirstChild(),firstClause);
if(secondClause.getFirstChild().isVar()){
newStatement=secondClause.getFirstChild();
}else {
newStatement=NodeUtil.newExpr(secondClause.getFirstChild());
}
lValue.addChildBefore(node,node);
reportCodeChange("FOR initializer");

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getFirstChild().isOr()){
Node firstClause=c.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isOr()){
Node firstClause=c.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(aNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=valueNode.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name1.isOr()){
Node firstClause=name1.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name1.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeName2.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=name1.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=lValue.getLastChild().getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
secondClause.addChildrenToBack(IR.hook(node,secondClause.removeChildren(),lValue.getLastChild().detachFromParent()).srcref(node));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
firstClause.replaceChild(node,node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.detachFromParent();
node.detachFromParent();
secondClause.addChildrenToBack(IR.hook(node,secondClause.removeChildren(),lValue.getLastChild().detachFromParent()).srcref(node));
firstClause.replaceChild(node,node);
reportCodeChange();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.detachFromParent();
Node firstClause=rValue.getFirstChild();
Node secondClause=lValue.getLastChild().getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=lValue.getLastChild().getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.detachFromParent();
reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.detachFromParent();
reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=lValue.getLastChild().getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lr.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&NodeUtil.getStringValue(lValue)!=null){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(gramps.isOr()){
Node firstClause=gramps.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=gramps.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
replaceWithEmpty(secondClause,secondClause.getParent());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
replaceWithEmpty(secondClause,secondClause.getParent());
compiler.reportCodeChange();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.removeChild(lValue.getNext());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
secondClause.replaceChild(rValue,lValue.getNext());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.removeChild(lValue.getNext());
secondClause.replaceChild(rValue,lValue.getNext());
compiler.reportCodeChange();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps.isOr()){
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps.isOr()){
compiler.reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps.isOr()){
rValue.removeChild(lValue.getNext());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
compiler.reportCodeChange();
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.removeChild(lValue.getNext());
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
compiler.reportCodeChange();
rValue.removeChild(lValue.getNext());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(gramps.isOr()){
compiler.reportCodeChange();
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps.isOr()){
rValue.removeChild(lValue.getNext());
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps.isOr()){
compiler.reportCodeChange();
rValue.removeChild(lValue.getNext());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
compiler.reportCodeChange();
rValue.removeChild(lValue.getNext());
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps.isOr()){
compiler.reportCodeChange();
rValue.removeChild(lValue.getNext());
Node firstClause=n.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expectedGetprop.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isThis()&&!isPropertyTree(leftChild)){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getStringValue(firstClause.getNext())==null){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getNext().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
Preconditions.checkState(secondClause.get(0).getValue()==Branch.UNCOND);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objectNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch!=null&&info!=INVALIDATED&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch!=null&&namesMatch!=INVALIDATED&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch!=null&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&namesMatch!=INVALIDATED&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getBooleanProp(Node.IS_CONSTANT_NAME)){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(secondClause.getString().isEmpty()){
return ;
}
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getBooleanProp(Node.IS_CONSTANT_NAME)){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.GETTER_DEF,node);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(firstClause);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.SETTER_DEF,node);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(firstClause);
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateFunctionExpression(firstClause);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateFunctionExpression(firstClause);
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(functionParams.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(node,1);
validateObjectLiteralKeyName(node);
validateFunctionExpression(firstClause);
if(!firstClause.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",node);
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstChild.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(receiver.isOr()){
Node firstClause=receiver.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=receiver.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if("call".equals(secondClause.getNext().getString())){
if(secondClause.isGetProp()){
addAction(new FunctionCallBuilder(secondClause,rValue.getNext()).setPropName(first.getFirstChild().getNext().getString()).setIsCallFunction().build());
}else {
addAction(new FunctionCallBuilder(secondClause,rValue.getNext()).setIsCallFunction().build());
}
}else {
addAction(new FunctionCallBuilder(secondClause,rValue.getNext()).setPropName(first.getNext().getString()).build());
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(currentNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sibling.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
swtich (secondClause.getType()){
case Token.ASSIGN :
break;

case Token.GETPROP :
break;

}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getElemParent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getLastChild().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rep.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.isReturn()){
return firstClause.hasOneChild();
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(firstClause.isVar()){
return firstClause.hasOneChild();
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftChild.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(current.isOr()){
Node firstClause=current.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=current.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.isNativeObjectType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(!firstClause.hasChildren()){
Node lValue=firstClause;
firstClause.addChildToBack(NodeUtil.newUndefinedNode(lValue));
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getProp.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isCall());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isCall());
if(namesMatch==null){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(callNode.isOr()){
Node firstClause=callNode.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=callNode.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
swtich (secondClause.getType()){
case Token.NAME :
return true;

case Token.GETPROP :
return !isExpressionTreeUnsafe(secondClause.getFirstChild(),isExtern);

case Token.GETELEM :
return !isExpressionTreeUnsafe(secondClause.getFirstChild(),isExtern)&&!isExpressionTreeUnsafe(secondClause.getLastChild(),isExtern);

}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=getNode.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(definitionSite.inExterns){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!SimpleDefinitionFinder.isSimpleFunctionDeclaration(firstClause)){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(arg1.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.reportCodeChange();
Node firstClause=parent.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null&&!define.isGlobal()){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(";");
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(secondClause.getNext());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(secondClause.getNext().getNext());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(")");
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.getParent().replaceChild(first,rValue.getFirstChild().cloneNode());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.addChildBefore(firstClause,node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
reportCodeChange("FOR-IN var declaration");
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.getParent().replaceChild(first,rValue.getFirstChild().cloneNode());
lValue.addChildBefore(firstClause,node);
reportCodeChange("FOR-IN var declaration");

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(first.isOr()){
Node firstClause=firstClause.getFirstChild().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(first.isOr()){
Node firstClause=firstClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(catches.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getImpureBooleanValue(lValue)!=TernaryValue.FALSE){
return secondClause;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(secondClause,n.getFirstChild()));
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objectToLoopOver.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getElem.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lValue.isNumber()){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null){
return result;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousBlock.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue==null||previousCase.getNext()==node);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(useParent.isOr()){
Node firstClause=useParent.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(useParent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=useParent.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!SimpleDefinitionFinder.isSimpleFunctionDeclaration(firstClause)){
return true;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.detachFromParent();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
if(isJqueryExtendCall(firstClause,firstClause.getQualifiedName(),this.compiler)){
maybeExpandJqueryExtendCall(rValue);
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftParent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rightParent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(next.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&ns.onlyAffectsClassDef){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subtree.isOr()){
Node firstClause=subtree.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subtree.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(NodeUtil.isGet(namesMatch)){
subtree=tryFoldKnownStringMethods(rValue);
}else {
subtree=tryFoldKnownNumericMethods(rValue);
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value.isOr()){
Node firstClause=value.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=value.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
firstClause.setString(secondClause.getString());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
NodeUtil.copyNameAnnotations(secondClause,firstClause);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.removeChild(node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
rValue.replaceChild(node,node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(NodeUtil.isHoistedFunctionDeclaration(node)){
rValue.addChildToFront(node.detachFromParent());
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
firstClause.setString(secondClause.getString());
NodeUtil.copyNameAnnotations(secondClause,firstClause);
secondClause.removeChild(node);
rValue.replaceChild(node,node);
if(NodeUtil.isHoistedFunctionDeclaration(node)){
rValue.addChildToFront(node.detachFromParent());
}
compiler.reportCodeChange();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value.isOr()){
compiler.reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.removeChild(secondClause.getFirstChild());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.replaceChild(secondClause,IR.exprResult(IR.assign(IR.getprop(IR.name("module"),IR.string("exports")),secondClause.getFirstChild())).useSourceInfoFromForTree(n));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.removeChild(secondClause.getFirstChild());
lValue.replaceChild(secondClause,IR.exprResult(IR.assign(IR.getprop(IR.name("module"),IR.string("exports")),secondClause.getFirstChild())).useSourceInfoFromForTree(n));

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(breakTarget.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isExprAssign(node)){
return false;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=skipFinallyNodes(follow);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(OBJECT_PROPERTY_STRING.equals(secondClause.getQualifiedName())){
Node IR.name(EXTERN_OBJECT_PROPERTY_STRING)=IR.name(EXTERN_OBJECT_PROPERTY_STRING);
newName.copyInformationFrom(n);
lValue.replaceChild(n,newName);
compiler.reportCodeChange();
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!EXTERN_OBJECT_PROPERTY_STRING.equals(firstClause.getQualifiedName())){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
nameGenerator=lValue.get(rValue.getFirstChild().getQualifiedName());
isExtern=true;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.getChildAtIndex(1).isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
if(NodeUtil.isFunctionObjectApply(secondClause.getParent())||NodeUtil.isFunctionObjectCall(secondClause.getParent())){
function.isExposedToCallOrApply=true;
}
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue==null||n==lValue){
return ;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!NodeUtil.isObjectLitKey(rValue,n.getParent()));
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rvalue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(ref.node.getLastChild(),node);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prop.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=ancestorClone.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!NodeUtil.isValidPropertyName(secondClause.getString())){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
nonExternFunctions.add(IR.getprop(firstClause.detachFromParent(),secondClause.detachFromParent()));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
nonExternFunctions.add(node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.getParent().replaceChild(ancestor,IR.getprop(firstClause.detachFromParent(),secondClause.detachFromParent()));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
nonExternFunctions.add(IR.getprop(firstClause.detachFromParent(),secondClause.detachFromParent()));
nonExternFunctions.add(node);
node.getParent().replaceChild(ancestor,IR.getprop(firstClause.detachFromParent(),secondClause.detachFromParent()));

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
isValidExpansion=false;
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ancestor.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(destBlock.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
defineName(rValue,secondClause,node,(info!=null)?info:name.getJSDocInfo());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(block.isOr()){
Node firstClause=block.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=block.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Preconditions.checkArgument(firstClause.isReturn());
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isOr()){
Preconditions.checkArgument(secondClause==namesMatch);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
newExpression=secondClause.removeFirstChild();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Preconditions.checkArgument(firstClause.isReturn());
Preconditions.checkArgument(secondClause==namesMatch);
newExpression=secondClause.removeFirstChild();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(block.isOr()){
Node firstClause=rValue.getFirstChild();
Preconditions.checkArgument(firstClause.isReturn());
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(":");
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
addExpr(rValue.getFirstChild(),1,Context.OTHER);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rl.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&NodeUtil.getStringValue(firstClause)!=null){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(callbackFunction.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(arg2.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
limit=Math.min((int)firstClause.getDouble(),namesMatch);
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=thenOp.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.removeChild(node);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
lValue.replaceChild(node,NodeUtil.newExpr(new Node(rValue.getType(),rValue.removeFirstChild(),IR.hook(node,rValue.removeFirstChild(),secondClause.getLastChild()).srcref(node)).srcref(thenOp)));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
node.removeChild(node);
secondClause.removeChild(secondClause.getLastChild());
lValue.replaceChild(node,NodeUtil.newExpr(new Node(rValue.getType(),rValue.removeFirstChild(),IR.hook(node,rValue.removeFirstChild(),secondClause.getLastChild()).srcref(node)).srcref(thenOp)));
reportCodeChange();

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
secondClause.removeChild(secondClause.getLastChild());
reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(condition.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&secondClause.getIndexType()!=null){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(expectedBlock.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isReturn()){
return null;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.hasOneChild()){
return null;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rootNameNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause=rootNameNode.getFirstChild();
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(valueNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(toRemove.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!firstClause.isFunction()||type.isFunctionType());
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.replaceChild(node,NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),compiler.getCodingConvention().getGlobalObject()).srcrefTree(node));
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.replaceChild(secondClause,NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),node.getQualifiedName()+".").srcrefTree(secondClause));
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(varName.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.POS :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(map.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FUNCTION :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftSide.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkNoTypeCheckSection(rValue,true);
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause==null||lValue.getParent()==null){
return null;
}
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(returnNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETPROP :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(rValue==secondClause.getFirstChild()&&parent.getChildCount()==2&&expr.getNext().isName()&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(rValue==secondClause.getFirstChild()&&parent.getChildCount()==2&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FOR :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OBJECTLIT :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NAME :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(operand.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.ASSIGN :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETPROP :

if(dest.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETTER_DEF :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return normalizeClassType(lValue.getJSType());
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.getJSType()!=null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch==null&&!secondClause.isFunction()){
return "";
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!NodeUtil.isFunctionDeclaration(rValue)){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
info=firstClause.getJSDocInfo();
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info==null&&!(rValue.isVar()&&!parent.hasOneChild())){
docInfo=parent.getJSDocInfo();
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.getJSType()==null&&rValue.isFunction()){
varType=parent.getJSType();
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.getJSType()==null||info==null){
return ;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause=getJSType(secondClause);
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=getJSType(rValue);
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(maybeFn.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=callTarget.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getNext()!=null&&rValue.getNext().getNext()!=null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getNext()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue.getNext().getNext()!=null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getPropertyDeprecationInfo(namesMatch,rValue.getLastChild().getString())!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.isNew()){
return ;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&(rValue.isAssign()&&parent.getFirstChild()==secondClause)){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
connectToPossibleExceptionHandler(rValue,node.getFirstChild());
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&secondClause.getFirstChild()==rValue){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName());
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue.getLastChild()==lValue&&parent.getFirstChild().isQualifiedName()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(parent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!NodeUtil.isExprAssign(rValue)){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!NodeUtil.isExprAssign(node)){
return null;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(firstClause.isOr()){
Node firstClause=firstClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(firstClause.getParent().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(firstClause.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=firstClause.getParent().getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=firstClause.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(n.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&(!rValue.isString()&&!property.isNumber())){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isNumber()){
ownerName=NodeUtil.getStringValue(property);
}else {
propertyName=property.getString();
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(null!=null&&firstClause.containsKey(grandparent)){
isExtern=false;
}else if(null!=null&&exports.containsKey(parent)){
useExportSymbol=false;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!rValue.isFunction()||type.isFunctionType());
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isAssignmentOp(lValue));
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isName()){
return new Assign(lValue,current,false);
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isString()){
return ;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(nameNode.isOr()){
Node firstClause=nameNode.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getFirstChild().isQualifiedName()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(nameNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=nameNode.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
secondClause.removeChild(firstClause);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
secondClause.removeChild(firstClause.getNext());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
firstClause.addChildToFront(firstClause.getNext());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
IR.var(firstClause).copyInformationFrom(rValue);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
rValue.getParent().replaceChild(candidateDefinition,IR.var(firstClause));
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
firstClause.setJSDocInfo(secondClause.getJSDocInfo());
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
lValue.reportCodeChange();
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
replacementNode=IR.var(firstClause);
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
secondClause.removeChild(firstClause);
secondClause.removeChild(firstClause.getNext());
firstClause.addChildToFront(firstClause.getNext());
IR.var(firstClause).copyInformationFrom(rValue);
rValue.getParent().replaceChild(candidateDefinition,IR.var(firstClause));
firstClause.setJSDocInfo(secondClause.getJSDocInfo());
lValue.reportCodeChange();
replacementNode=IR.var(firstClause);

Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(gramps.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause==null||!function.isGetProp()){
return false;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.getQualifiedName()==null){
return ;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isString()){
return ;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getFirstChild().isThis()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
rValue.getFirstChild().setJSType(thisType);
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null&&(secondClause.isName()||name.isString())){
thisType.defineDeclaredProperty(name.getString(),jsType,rValue);
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&rValue==secondClause.getFirstChild()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(secondClause.getLastChild().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(secondClause.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&namesMatch||(firstClause.isGetProp()&&parent.getLastChild()==rValue)){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName()||n.isString());
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.hasChildren()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(callee.isOr()){
Node firstClause=callee.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&rValue.getChildCount()==2){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(callee.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(param.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=callee.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(name.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null&&info.shouldPreserveTry()){
return ;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.hasOneChild()){
NodeUtil.redeclareVarsInsideBranch(catchBlock);
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.detachChildren();
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!firstClause.isArrayLit()||!secondClause.getString().equals("join")){
return node;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&right.isString()&&",".equals(right.getString())){
node.removeChild(right);
reportCodeChange();
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null&&!(isLowerPrecedenceInExpression(node,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(rValue,AND_PRECEDENCE))){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!(isLowerPrecedenceInExpression(node,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(rValue,AND_PRECEDENCE))){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&rValue.getNext()!=null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(current.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()==null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type==null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(varNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&namesMatch!=null&&grandparent.isFunction()&&rValue.isBlock()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&(rValue.isGetProp()||nextNode.isGetElem())){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(nextNode.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause=rValue.getNext();
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null&&!p.canCollapse()){
continue;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.isNew()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch==null){
return ;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.setSideEffectFlags(Node.NO_SIDE_EFFECTS);
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
rValue.setSideEffectFlags(Node.NO_SIDE_EFFECTS);
if(rValue.getJSType()!=null&&!rValue.isNew()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&!scope.isGlobal()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(!ownerName.isEmpty());
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.isNumber()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return createDefaultObjectUnion(type);
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
if(secondClause!=null&&("Array".equals(rValue.getString())||"Object".equals(rValue.getString()))){
JSType createFromTypeNodesInternal(secondClause.getLastChild(),sourceName,scope)=createFromTypeNodesInternal(secondClause.getLastChild(),sourceName,scope);
namedType=new ParameterizedType(this,(ObjectType)type,createFromTypeNodesInternal(secondClause.getLastChild(),sourceName,scope));
if(secondClause.hasMoreThanOneChild()){
JSType createFromTypeNodesInternal(secondClause.getFirstChild(),sourceName,scope)=createFromTypeNodesInternal(secondClause.getFirstChild(),sourceName,scope);
namedType=new IndexedType(this,(ObjectType)type,createFromTypeNodesInternal(secondClause.getFirstChild(),sourceName,scope));
}
}
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!secondClause.isBlock()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(c.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!NodeUtil.isImmutableValue(rValue)){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue.getFirstChild()==lValue){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue.getFirstChild()==lValue){
return rValue.getJSType();
}else if(parent.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!NodeUtil.isImmutableValue(rValue.getFirstChild())){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(thisType.isUnknownType());
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getType()==Token.THIS||rValue.getType()==Token.NEW){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getType()==Token.THIS&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue.getType()==Token.NEW){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=Token.THIS&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()==null&&rValue.getType()==Token.NEW){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getType()==Token.THIS&&rValue.getType()==Token.NEW){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&!NodeUtil.isLValue(rValue)){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue.getFirstChild()==node){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&(rValue.isExprResult()||parent.isFor())){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!(NodeUtil.isObjectLitKey(rValue,lValue.getParent())||NodeUtil.isExprAssign(lValue.getParent().getParent()))){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(prop.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!firstClause.isNot()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isNot()){
lValue=leftParent.removeFirstChild();
}else {
leftParent.detachFromParent();
left=IR.not(leftParent).srcref(leftParent);
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(destBlock.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.IF,rValue);
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMinimumChildCount(rValue,2);
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMaximumChildCount(rValue,3);
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateExpression(rValue.getFirstChild());
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateBlock(rValue.getChildAtIndex(1));
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(toRemove.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(propName.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue==null||rValue.getParent()==null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue==null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue.getParent()==null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isObjectLitKey(rValue,lValue.getParent())){
Node getBestLValue(rValue.getParent())=getBestLValue(lValue.getParent());
if(owner!=null){
String namesMatch=getBestLValueName(owner);
if(ownerName!=null){
return ownerName+".";
}
}
return null;
}
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()==null&&rValue.getParent()==null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue==null&&rValue.getParent()==null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()!=null&&rValue==firstClause.getFirstChild()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(secondClause.getNext().isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FOR :

if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.DELPROP&&!(rValue.isGetProp()||rValue.isGetElem())){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==Token.DELPROP&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()!=null&&!(rValue.isGetProp()||operand.isGetElem())){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.hasParameterType(ownerName)){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue!=null&&rValue.getJSType()!=null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo!=null&&rValueInfo.hasParameterType(ownerName)){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue!=null&&rValue.getJSType()!=null){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.hasParameterType(ownerName)){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getJSType();
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.isFunctionType()&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisType!=null&&rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
declareArguments(secondClause);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(secondClause.isFunction());
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause!=null){
Node firstClause=NodeUtil.getFunctionParameters(fnNode).getFirstChild();
for(Node lValue : rValueInfo.toMaybeFunctionType().getParameters()){
if(paramNode==null){
break;
}
new StringBuilder("/**\n").append(" * ");
appendAnnotation(sb,"param",getParameterNodeJSDocType(n));
sb.append(" ").append(paramNode.getString()).append("\n");
paramNode=paramNode.getNext();
}
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(createCheckTypeCallNode(lValue.getJSType(),rValueInfo.cloneTree())==null){
rValueInfo=paramName.getNext();
continue;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=IR.exprResult(checkNode);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node==null){
firstClause.addChildToFront(createCheckTypeCallNode(lValue.getJSType(),rValueInfo.cloneTree()));
}else {
block.addChildAfter(checkNode,insertionPoint);
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getSubTypes(rValueInfo.getConstructorType().getJSType(),Sets.newHashSet());
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isEnumType()){
return ;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!rValue.isFunction()||type.isFunctionType());
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getJSType()==null){
n.setJSType(type);
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.hasEnumParameterType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
rValueInfo=NodeUtil.getBestJSDocInfo(node);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
type=lValue.createAnonymousObjectType();
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setDeferredType(node,type);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processObjectLitProperties(node,ObjectType.cast(objectLit.getJSType()),!false);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch&&rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&!thisType.isEquivalentTo(this)&&thisType.isSubtype(type)&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(null!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isGetProp()){
ownerName=node.getFirstChild().getQualifiedName();
if(node.getFirstChild().isGetProp()&&getPropertyName(node.getFirstChild()).equals(PROTOTYPE_PROPERTY)){
ownerName=node.getFirstChild().getFirstChild().getQualifiedName();
}
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.getType()!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(firstClause==null||!function.isGetProp()){
return false;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isCall()){
return ;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isGetProp()){
return ;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!compiler.areNodesEqualForInlining(firstClause.getFirstChild(),node)){
return ;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&isClassDefiningCall(secondClause)){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isCall(),"Expected: CALL, Got: %s",Token.name(node.getType()));
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.functionCallHasSideEffects(secondClause)){
return true;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValueInfo.keepSubTree(secondClause);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null||qName.isEmpty()){
return ;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isName()){
return ;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
nonExternFunctions.add(node);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&!rValueInfo.isUnknownType()&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(node.hasOneChild());
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.hasThisType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo!=null&&rValueInfo.hasTypedefType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause.getQualifiedName()==null){
return ;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeRegistry.declareType(secondClause.getQualifiedName(),getNativeType(UNKNOWN_TYPE));
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeRegistry.overwriteDeclaredType(secondClause.getQualifiedName(),namesMatch);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isGetProp()){
defineSlot(candidate,candidate.getParent(),getNativeType(NO_TYPE),false);
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.isConstructor()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(secondClause.isName());
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&info.getSuppressions().contains("duplicate")){
return true;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValueInfo=origVar.nameNode.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null){
info=firstClause.getJSDocInfo();
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.hasReturnType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause==null){
return scope;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.replaceChild(node,NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),String.format("%s.superClass_.%s.call",firstClause.getQualifiedName(),rValueInfo.getString()),callee,"goog.base"));
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.removeChild(rValueInfo);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
if(rValueInfo==null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo.getVar(ownerName+".prototype")!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(scope!=rValueInfo&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((type=(String)rValueInfo.getAttribute(TagAttr.TYPE))!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch){
thisType=objectType.getImplicitPrototype();
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisType==null){
return ;
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(secondClause.isObjectLit());
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=rValue.getFirstChild();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.removeChild(node);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.removeChild(rValue);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue.addChildToFront(node);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
firstClause.getParent().getParent().addChildAfter(node,firstClause.getParent());
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bind.thisValue!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.getLendsName().endsWith(".prototype")){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo!=null&&rValueInfo.getLendsName()!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo!=null&&rValueInfo.getLendsName()!=null&&rValueInfo.getLendsName().endsWith(".prototype")){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
recordClassConstructorOrInterface(null,null,null,null,null,null);
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FOR :

if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo!=null&&rValueInfo.shouldPreserveTry()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(name!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(rValue);
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isName());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((rValue.getFirstChild()!=null)&&(name.getFirstChild().isFunction())){
return createConcreteFunction(name.getFirstChild(),scope);
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(rValue);
if(rValue==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isName());
if(rValue==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(rValue);
Preconditions.checkArgument(rValue.isName());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(rValue);
Preconditions.checkArgument(rValue.isName());
if(rValue==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isObjectLit()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.getJSType()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(oldParameterType!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(paramName!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null&&!secondClause.isFunction()){
return "";
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isQualifiedName()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(thisType!=null&&rValue!=null&&rValue.isObjectLit()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rhsValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
docInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(info==null){
docInfo=secondClause.getJSDocInfo();
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
docInfo=rValue.getJSDocInfo();
if(info==null){
docInfo=secondClause.getJSDocInfo();
}

if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isQualifiedName()&&scope.isGlobal()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.getType()!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null&&rValue.isQualifiedName()&&scope.isGlobal()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.getType()!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(!rValue.isFunction()||type.isFunctionType());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.isNew()){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getNext()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(rValue.isName());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause.isVar()||parent.isFunction()){
return true;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isGet(secondClause)&&rValue==parent.getFirstChild()&&name.getNext().isString()&&name.getNext().getString().equals("call")){
Node firstClause=name.getAncestor(2);
if(gramps.isCall()&&gramps.getFirstChild()==parent){
return true;
}
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName());
if(parent!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getFirstChild().getNext()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getFirstChild()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
connectToPossibleExceptionHandler(rValue,node.getFirstChild());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(current!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(candidateDefinition!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(child!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(scopeFuncParent!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getParent()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getParent().getParent()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValueInfo==null){
return null;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo.lastIndexOf('.')==-1){
return null;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.endsWith(".prototype")){
return null;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(member!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.getFirstChild().setJSType(thisType);
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch!=null&&(secondClause.isName()||name.isString())){
thisType.defineDeclaredProperty(name.getString(),jsType,rValue);
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=Token.SCRIPT){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(root!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.getType()==Token.BLOCK||root.getType()==Token.SCRIPT);
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isAssignmentOp(lValue));
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isName()){
return new Assign(lValue,current,false);
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isAssignmentOp(lValue));
if(current!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValue.isHook()){
firstVal=rValue.getFirstChild().getNext();
}else {
firstVal=rValue.getFirstChild();
}
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(right!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause==null||!callTarget.isGetProp()){
return node;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isArrayLit()||!lValue.getString().equals("join")){
return node;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&right.isString()&&",".equals(right.getString())){
node.removeChild(right);
reportCodeChange();
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isName()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(firstClause==null||!function.isGetProp()){
return false;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.getQualifiedName()==null){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isString()){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lhs!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isNumber()){
ownerName=NodeUtil.getStringValue(property);
}else {
propertyName=property.getString();
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isGetElem()){
IR.stringKey(ownerName).copyInformationFrom(rValue).setQuotedString();
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isName()&&rValue.getString().equals(var.name)&&secondClause.isAssign()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rhs!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isName()){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!scope.isDeclared(firstClause.getString(),false)){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(irNode!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.getJSDocInfo()!=null){
rValue.setJSDocInfo(rootNodeJsDoc);
rootNodeJsDoc.setAssociatedNode(irNode);
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thenOp!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName()||n.isString());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(condition!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isString()){
return ;
}
if(parent!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isExprResult()&&rValue.getFirstChild().isCall()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(maybeInheritsExpr!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isAssign()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(node!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextNode!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isCall()){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isGetProp()){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!compiler.areNodesEqualForInlining(secondClause.getFirstChild(),node)){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.mayEffectMutableState(node)){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue.add(new CallSite(node,node,node,secondClause,secondClause.getFirstChild()));
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isCall());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(namesMatch!=null){
return proxyCast;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isQualifiedName()){
return null;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lValue.isObjectLit()){
return new ObjectLiteralCast(null,null,OBJECTLIT_EXPECTED);
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=Token.ELLIPSIS){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(arg!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isGetProp()){
ownerName=lValue.getLastChild().getString();
}else if(lValue.isName()){
partialName=lValue.getString();
}else {
return true;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.isExported(ownerName)){
return true;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getNext()==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(node.hasOneChild());
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValue.getFirstChild()!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValue.getFirstChild()==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nameNode!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rValue.isNumber()){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(arg1!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=lValue){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getFirstChild()!=lValue){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((rValue!=null)&&(rValue.isVar())){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sibling!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=info.initialValue){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(finalValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(curParam!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue==lValue){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getFirstChild()==null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getFirstChild()==lValue){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(grandparent!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subtree!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(argNode!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objectToLoopOver!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null||!callbackFunction.isFunction()){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue=firstClause.getChildAtIndex(1);
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(OBJECT_PROPERTY_STRING.equals(rValue.getQualifiedName())){
Node secondClause=IR.name(EXTERN_OBJECT_PROPERTY_STRING);
newName.copyInformationFrom(n);
lValue.replaceChild(n,newName);
compiler.reportCodeChange();
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rValue.isNew()){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!EXTERN_OBJECT_PROPERTY_STRING.equals(firstClause.getQualifiedName())){
return ;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeIf!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prop!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NEG!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(toRemove!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETPROP :

if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OBJECTLIT :

if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isObjectLitKey(rValue,lValue.getParent())){
Node getBestLValue(rValue.getParent())=getBestLValue(lValue.getParent());
if(owner!=null){
String namesMatch=getBestLValueName(owner);
if(ownerName!=null){
return ownerName+".";
}
}
return null;
}
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(gramps!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FOR :

if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(lValue.isFunction());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause==null){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(rValue);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isName());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getJSType()==null){
return ConcreteType.ALL;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(rValue);
Preconditions.checkArgument(rValue.isName());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.getObjectLitKeyTypeFromValueType(node,getJSType(node.getFirstChild()))==null){
rightType=getNativeType(UNKNOWN_TYPE);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.isEnumElementType()){
allowedValueType=allowedValueType.toMaybeEnumElementType().getPrimitiveType();
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rValue.isVarArgs()||rValue.isOptionalArg()&&namesMatch){
boolean secondClause.isVarArgs()&&(rValueInfo==null||thatParamType.isUnknownType()||thatParamType.isNoType())=secondClause.isVarArgs()&&(rValueInfo==null||thatParamType.isUnknownType()||thatParamType.isNoType());
if(!isTopFunction){
return false;
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rValue.isVarArgs()){
rValue=thisParam.getNext();
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=traverseChildren(node,scope);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
return "";
}else if(type.isFunctionType()){
return getFunctionAnnotation(secondClause);
}else if(type.isEnumType()){
return "/** @enum {"+type.toMaybeEnumType().getElementsType().toAnnotationString();
}else if(!type.isUnknownType()&&!type.isEmptyType()){
return "/** @type {"+node.getJSType().toAnnotationString();
}else {
return "";
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null||firstClause.getNext()==null){
return scope;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo.getAssertedParam(firstClause.getNext())==null){
return scope;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause=rValue.getFirstChild();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue=rValue.getLastChild();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
knownType=getJSType(secondClause);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=getJSType(lValue);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(n!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(rValueInfo==null?null:objType.getIndexType()!=null&&!rValueInfo==null?null:objType.getIndexType().isUnknownType()){
JSType knownType=getNativeType(STRING_TYPE).getGreatestSubtype(rValueInfo==null?null:objType.getIndexType());
if(!knownType.isEmptyType()){
iterKeyType=knownType;
}
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(secondClause.isFunction());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause!=null){
Node firstClause=NodeUtil.getFunctionParameters(fnNode).getFirstChild();
for(Node lValue : knownType.getParameters()){
if(paramNode==null){
break;
}
new StringBuilder("/**\n").append(" * ");
appendAnnotation(sb,"param",getParameterNodeJSDocType(n));
sb.append(" ").append(paramNode.getString()).append("\n");
paramNode=paramNode.getNext();
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(namesMatch&&rValueInfo!=null){
fnType=rValueInfo.restrictByNotNullOrUndefined().toMaybeFunctionType();
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(firstClause.isFunction()){
Node secondClause.getNext()=secondClause.getNext();
Node safeNext(secondClause.getNext())=safeNext(secondClause.getNext());
return new Bind(firstClause,secondClause.getNext(),safeNext(secondClause.getNext()));
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(namesMatch&&rValueInfo!=null){
fnType=rValueInfo.restrictByNotNullOrUndefined().toMaybeFunctionType();
}
if(firstClause.isFunction()){
Node secondClause.getNext()=secondClause.getNext();
Node safeNext(secondClause.getNext())=safeNext(secondClause.getNext());
return new Bind(firstClause,secondClause.getNext(),safeNext(secondClause.getNext()));
}

JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=src.restrictByNotNullOrUndefined();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null){
return null;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isExprAssign(firstClause.getFirstChild())){
return null;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isGetProp()&&lhs.getFirstChild().isThis()){
Node firstClause.getFirstChild().getFirstChild().getLastChild()=firstClause.getFirstChild().getFirstChild().getLastChild();
if(rhs.isName()&&rhs.getString().equals(rValueInfo.getString())){
Node secondClause.getLastChild()=lhs.getLastChild();
return propertyName;
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.setJSType(firstClause.getJSType());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondClause.setJSDocInfo(new JSDocInfo());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(declInfo.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isEnumType()){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(rValueInfo!=null&&rValueInfo.isTypeInferred()){
rValueInfo.setType(rValueInfo==null?null:var.getType()==null?NodeUtil.getObjectLitKeyTypeFromValueType(firstClause,knownType):oldType.getLeastSupertype(oldType));
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
scope.inferQualifiedSlot(firstClause,ownerName+".",rValueInfo==null?null:var.getType()==null?getNativeType(UNKNOWN_TYPE):oldType,NodeUtil.getObjectLitKeyTypeFromValueType(firstClause,knownType));
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(rValueInfo!=null&&rValueInfo.isTypeInferred()){
rValueInfo.setType(rValueInfo==null?null:var.getType()==null?NodeUtil.getObjectLitKeyTypeFromValueType(firstClause,knownType):oldType.getLeastSupertype(oldType));
}
scope.inferQualifiedSlot(firstClause,ownerName+".",rValueInfo==null?null:var.getType()==null?getNativeType(UNKNOWN_TYPE):oldType,NodeUtil.getObjectLitKeyTypeFromValueType(firstClause,knownType));

JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(isUselessCase(secondClause,(rValue.getFirstChild()==rValue.getFirstChild())?null:lastNonRemovable)){
removeCase(rValue,secondClause);
return null;
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isSwitch());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(secondClause.isGetProp()&&firstClause.isAssign());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=addMarker(rValueInfo,nodeToInsertAfter,null);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Iterables.addAll(Sets.newTreeSet(ALPHA),rValueInfo.getAllImplementedInterfaces());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(ObjectType thisType : Sets.newTreeSet(ALPHA)){
node=addMarker(rValueInfo,nodeToInsertAfter,interfaceType);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=traverseChildren(rValue,scope);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=tightenTypesAfterAssertions(scope,rValue);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(secondClause.isCall()&&parent.getFirstChild()==rValue){
return true;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isGet(secondClause)&&rValue==parent.getFirstChild()&&name.getNext().isString()&&name.getNext().getString().equals("call")){
Node firstClause=name.getAncestor(2);
if(gramps.isCall()&&gramps.getFirstChild()==parent){
return true;
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isName()||n.isGetProp());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(node.isName());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isCandidateUsage(node)){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isAssign()&&parent.getFirstChild()==node){
rValueInfo.setInline(false);
}else {
fs.setRemove(false);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.getFirstChild().setJSType(thisType);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(knownType!=null&&(secondClause.isName()||name.isString())){
thisType.defineDeclaredProperty(name.getString(),jsType,rValue);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(firstClause.isFunction());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
JSType knownType=null;
if(owner!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
Preconditions.checkNotNull(scope);
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(rValue.isAssign());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(null!=null&&firstClause.containsKey(grandparent)){
isExtern=false;
}else if(null!=null&&exports.containsKey(parent)){
useExportSymbol=false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isNumber()){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!(firstClause.getDouble()>=0)||Double.isInfinite(dindex)){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(isExtern){
String rValue.getString()=rValue.getString();
if(namesMatch!=null&&!namesMatch.isLocal()){
info.put(rValue.getString(),newSymbolForGlobalVar(rValue));
}
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((firstClause==null)||!lValue.isGetProp()){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(codingConvention.isExported(firstClause.getLastChild().getString())){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isAssignmentOp(lValue));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.isName()){
return new Assign(lValue,current,false);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&parent.isName()){
Node rValueInfo=parent.getParent();
if(gramps!=null&&gramps.isVar()){
return false;
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isExprAssign(node)){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isCall());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue!=null){
if(right.getNext()!=null||!NodeUtil.isImmutableValue(right)){
return node;
}
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isArrayLit()||!lValue.getString().equals("join")){
return node;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&right.isString()&&",".equals(right.getString())){
node.removeChild(right);
reportCodeChange();
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isUnknownType()||type.isUnionType()){
return false;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.getChildCount()!=4){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstClause.getQualifiedName()==null){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assertDefinitionNode(rValue,Token.VAR);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info.isConstant()){
if(rValue.getString().isEmpty()){
return ;
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(namesMatch&&!rValue.getBooleanProp(Node.IS_CONSTANT_NAME)){
if(isExtern){
String rValue.getString()=rValue.getString();
throw new IllegalStateException("Unexpected const change.\n"+"  name: "+rValue.getString());
}
rValue.putBooleanProp(Node.IS_CONSTANT_NAME,true);
}
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.isConstant()){
if(rValue.getString().isEmpty()){
return ;
}
if(namesMatch&&!rValue.getBooleanProp(Node.IS_CONSTANT_NAME)){
if(isExtern){
String rValue.getString()=rValue.getString();
throw new IllegalStateException("Unexpected const change.\n"+"  name: "+rValue.getString());
}
rValue.putBooleanProp(Node.IS_CONSTANT_NAME,true);
}

JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!scope.isDeclared(firstClause.getString(),false)){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue!=null&&rhs.isName()&&rhs.getString().equals(var.name)&&secondClause.isAssign()){
n.removeChild(rhs);
n.getParent().replaceChild(n,rhs);
compiler.reportCodeChange();
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValueInfo.isParamList());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(secondClause.isCall(),"Expected: CALL, Got: %s",Token.name(node.getType()));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.functionCallHasSideEffects(secondClause)){
return true;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValue.isNumber()){
ownerName=NodeUtil.getStringValue(property);
}else {
propertyName=property.getString();
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(secondClause.isGetElem()){
IR.stringKey(ownerName).copyInformationFrom(rValue).setQuotedString();
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!SimpleDefinitionFinder.isSimpleFunctionDeclaration(rValueInfo)){
return true;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null||qName.isEmpty()){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rValueInfo==null||var.isLocal()||var.isExtern()){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
nonExternFunctions.add(node);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.isCall()){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!secondClause.isGetProp()){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!info.areNodesEqualForInlining(secondClause.getFirstChild(),node)){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.mayEffectMutableState(node)){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lValue.add(new CallSite(node,node,node,secondClause,secondClause.getFirstChild()));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(rValue.isName()||n.isString());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!"goog.exportSymbol".equals(rValueInfo)){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namesMatch==null||secondClause.getNext()!=null){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(lValue.isFor());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isForIn(lValue)){
return n;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!firstClause.getNext().isEmpty()){
increment=trySimplifyUnusedResult(increment,false);
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lValue.getFirstChild().isEmpty()){
return n;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.getImpureBooleanValue(firstClause)!=TernaryValue.FALSE){
return lValue;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(lValue);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(lValue.isFor());
NodeUtil.redeclareVarsInsideBranch(lValue);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rValue.getChildCount()!=3){
return ;
}
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isCall());
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(NodeUtil.isGet(rValue.getFirstChild()));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
state.extractBeforeStatement=firstClause;
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(NodeUtil.isGet(firstClause.getFirstChild().getFirstChild()));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
state.extractBeforeStatement=extractExpression(firstClause.getFirstChild().getFirstChild().getFirstChild(),state.extractBeforeStatement);
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rValue.removeFirstChild();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lValue.replaceChild(rValue,IR.call(IR.getprop(secondClause.cloneNode(),IR.string("call")),extractExpression(firstClause.getFirstChild().getFirstChild().getFirstChild(),state.extractBeforeStatement).getFirstChild().cloneNode()).srcref(rValue));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(rValue.isCall());
Preconditions.checkArgument(NodeUtil.isGet(rValue.getFirstChild()));
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(rValue.isCall());
rValue.removeFirstChild();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(NodeUtil.isGet(rValue.getFirstChild()));
rValue.removeFirstChild();
if(info.isConstant()){
JSType knownType=null;
if(rValue!=null){
JSDocInfo rValueInfo=rValue.getJSDocInfo();
if(rValueInfo!=null&&rValueInfo.hasType()){
return rValueInfo.getType().evaluate(scope,typeRegistry);
}else if(rValue.getJSType()!=null&&!rValue.getJSType().isUnknownType()){
return rValue.getJSType();
}else if(rValue.isOr()){
Node firstClause=rValue.getFirstChild();
Node secondClause=firstClause.getNext();
boolean namesMatch=firstClause.isName()&&lValue.isName();
if(namesMatch&&secondClause.getJSType()!=null&&!secondClause.getJSType().isUnknownType()){
return secondClause.getJSType();
}
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
