java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 2e904fcd to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Run post-checkout hook..................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 2e904fcd:372eb11e..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Closure-25b..................................... OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 1
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5
PURIFY IS TRUE
=================================================
Project : closure_25	start : 19/10/17 11:53

Field type inconsistancy 'THIS' with types : Token and int
Variable type inconsistancy of 'name' in method 'visit,NodeTraversal,Node,Node' with types : Name and String
Variable type inconsistancy of 'start' in method 'parseRegExp,String,String' with types : int and char
Variable type inconsistancy of 'end' in method 'parseRegExp,String,String' with types : int and char
Field type inconsistancy 'errors' with types : JSError[] and List<JSError>
Field type inconsistancy 'type' with types : JSType and Type
Field type inconsistancy 'SUPER' with types : SimpleReference<SimpleSlot> and FunctionInjector.Reference
readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/closure/25.txtTESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (compile.tests)................................................ 
IN COMMENT TEST CASE: com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew

# FAILING TESTS: 1
TIMEOUT : 18000000
===========
locations= [<com.google.javascript.jscomp.Compiler,259>, <com.google.javascript.jscomp.Compiler,261>, <com.google.javascript.jscomp.Compiler,265>, <com.google.javascript.jscomp.Compiler,300>, <com.google.javascript.jscomp.Compiler,1536>, <com.google.javascript.jscomp.Compiler,1537>, <com.google.javascript.jscomp.Compiler,1539>, <com.google.javascript.jscomp.Compiler,1540>, <com.google.javascript.jscomp.Compiler,1542>, <com.google.javascript.jscomp.Compiler,1543>, <com.google.javascript.jscomp.ClosureCodingConvention,322>, <com.google.javascript.jscomp.ClosureCodingConvention,327>, <com.google.javascript.jscomp.CompilerOptions,1060>, <com.google.javascript.jscomp.WarningsGuard,95>, <com.google.javascript.jscomp.WarningsGuard,106>, <com.google.javascript.jscomp.ComposeWarningsGuard,127>, <com.google.javascript.jscomp.ComposeWarningsGuard,128>, <com.google.javascript.jscomp.ComposeWarningsGuard,130>, <com.google.javascript.jscomp.ComposeWarningsGuard,138>, <com.google.javascript.jscomp.ComposeWarningsGuard,158>, <com.google.javascript.jscomp.DiagnosticGroup,60>, <com.google.javascript.jscomp.DiagnosticGroup,61>, <com.google.javascript.jscomp.DiagnosticGroup,62>, <com.google.javascript.jscomp.DiagnosticGroup,63>, <com.google.javascript.jscomp.DiagnosticGroup,71>, <com.google.javascript.jscomp.DiagnosticGroup,72>, <com.google.javascript.jscomp.DiagnosticGroup,74>, <com.google.javascript.jscomp.TypedScopeCreator,223>, <com.google.javascript.jscomp.TypedScopeCreator,224>, <com.google.javascript.jscomp.TypedScopeCreator,225>, <com.google.javascript.jscomp.TypedScopeCreator,226>, <com.google.javascript.jscomp.TypedScopeCreator,227>, <com.google.javascript.jscomp.TypedScopeCreator,228>, <com.google.javascript.jscomp.TypedScopeCreator,232>, <com.google.javascript.jscomp.FunctionTypeBuilder,607>, <com.google.javascript.jscomp.FunctionTypeBuilder,608>, <com.google.javascript.jscomp.FunctionTypeBuilder,746>, <com.google.javascript.jscomp.SyntacticScopeCreator,137>, <com.google.javascript.jscomp.SyntacticScopeCreator,141>, <com.google.javascript.jscomp.SyntacticScopeCreator,142>, <com.google.javascript.jscomp.SyntacticScopeCreator,146>, <com.google.javascript.jscomp.SyntacticScopeCreator,147>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1314>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1456>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1491>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1492>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1494>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1493>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1497>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1617>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1620>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1621>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1625>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1626>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1628>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1629>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1630>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1633>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1638>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1643>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1645>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1647>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1655>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1622>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1664>, <com.google.javascript.rhino.jstype.PrototypeObjectType,179>, <com.google.javascript.rhino.jstype.PrototypeObjectType,354>, <com.google.javascript.rhino.jstype.PrototypeObjectType,356>, <com.google.javascript.rhino.jstype.PrototypeObjectType,358>, <com.google.javascript.rhino.jstype.PrototypeObjectType,361>, <com.google.javascript.rhino.jstype.PrototypeObjectType,362>, <com.google.javascript.rhino.jstype.PrototypeObjectType,363>, <com.google.javascript.rhino.jstype.PrototypeObjectType,366>, <com.google.javascript.rhino.jstype.PrototypeObjectType,365>, <com.google.javascript.rhino.jstype.PrototypeObjectType,369>, <com.google.javascript.rhino.jstype.PrototypeObjectType,370>, <com.google.javascript.rhino.jstype.PrototypeObjectType,372>, <com.google.javascript.rhino.jstype.PrototypeObjectType,373>, <com.google.javascript.rhino.jstype.PrototypeObjectType,389>, <com.google.javascript.rhino.jstype.PrototypeObjectType,391>, <com.google.javascript.rhino.jstype.PrototypeObjectType,392>, <com.google.javascript.rhino.Node,2221>, <com.google.javascript.rhino.Node,2249>, <com.google.javascript.rhino.Node,2281>, <com.google.javascript.jscomp.parsing.IRFactory,1195>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,244>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,248>, <com.google.javascript.jscomp.parsing.IRFactory,395>, <com.google.javascript.jscomp.parsing.IRFactory,396>, <com.google.javascript.jscomp.parsing.IRFactory,670>, <com.google.javascript.jscomp.parsing.IRFactory,796>, <com.google.javascript.jscomp.parsing.IRFactory,862>, <com.google.javascript.jscomp.parsing.IRFactory,863>, <com.google.javascript.jscomp.parsing.IRFactory,864>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1737>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1738>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1740>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1741>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1748>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1991>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,1999>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2000>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2004>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2006>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2007>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2008>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2009>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2012>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2013>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2017>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2018>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2020>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2021>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2025>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2027>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2029>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2030>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2031>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2034>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2036>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2084>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2085>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2087>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2091>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2092>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2096>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2098>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2099>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2106>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2109>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2111>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2115>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2117>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2118>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2119>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2130>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2137>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2139>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2143>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2144>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2149>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2153>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2154>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2156>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2160>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2161>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2162>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2163>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2171>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2173>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2174>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2188>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2193>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2275>, <com.google.javascript.jscomp.parsing.JsDocInfoParser,2276>, <com.google.javascript.jscomp.parsing.JsDocTokenStream,105>, <com.google.javascript.jscomp.parsing.JsDocTokenStream,108>, <com.google.javascript.jscomp.parsing.JsDocTokenStream,129>, <com.google.javascript.jscomp.parsing.JsDocTokenStream,135>, <com.google.javascript.jscomp.parsing.JsDocTokenStream,136>, <com.google.javascript.jscomp.parsing.JsDocTokenStream,164>, <com.google.javascript.jscomp.parsing.JsDocTokenStream,165>, <com.google.javascript.jscomp.parsing.JsDocTokenStream,166>, <com.google.javascript.jscomp.parsing.JsDocTokenStream,167>, <com.google.javascript.jscomp.NodeUtil,1565>, <com.google.javascript.jscomp.NodeUtil,2025>, <com.google.javascript.jscomp.NodeUtil,2027>, <com.google.javascript.jscomp.NodeUtil,2028>, <com.google.javascript.jscomp.NodeUtil,2823>, <com.google.javascript.jscomp.NodeUtil,3020>, <com.google.javascript.jscomp.NodeUtil,3038>, <com.google.javascript.jscomp.NodeUtil,3043>, <com.google.javascript.jscomp.NodeUtil,3045>, <com.google.javascript.jscomp.NodeUtil,3052>, <com.google.javascript.jscomp.NodeUtil,3058>, <com.google.javascript.jscomp.NodeUtil,3066>, <com.google.javascript.jscomp.NodeUtil,3072>, <com.google.javascript.jscomp.TypedScopeCreator,1977>, <com.google.javascript.jscomp.TypedScopeCreator,1978>, <com.google.javascript.jscomp.TypedScopeCreator,1979>, <com.google.javascript.jscomp.TypedScopeCreator,1980>, <com.google.javascript.jscomp.TypedScopeCreator,1981>, <com.google.javascript.jscomp.TypedScopeCreator,1982>, <com.google.javascript.jscomp.TypedScopeCreator,1983>, <com.google.javascript.jscomp.TypedScopeCreator,1987>, <com.google.javascript.jscomp.TypedScopeCreator,2000>, <com.google.javascript.jscomp.Scope,544>, <com.google.javascript.jscomp.Scope,242>, <com.google.javascript.jscomp.Scope,346>, <com.google.javascript.jscomp.TypedScopeCreator,489>, <com.google.javascript.jscomp.TypedScopeCreator,511>, <com.google.javascript.jscomp.TypedScopeCreator,774>, <com.google.javascript.jscomp.TypeInference,288>, <com.google.javascript.jscomp.TypeInference,289>, <com.google.javascript.jscomp.TypeInference,1037>, <com.google.javascript.jscomp.TypeInference,1038>, <com.google.javascript.jscomp.TypeInference,1039>, <com.google.javascript.jscomp.TypeInference,1040>, <com.google.javascript.jscomp.TypeInference,1041>, <com.google.javascript.jscomp.TypeInference,1042>]
======================com.google.javascript.jscomp.Compiler,259
UNKNOWN ASTNode type : catch (NumberFormatException nfe) {
  options.setDefineToStringLiteral(key,(String)value);
}

========
if(!options){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!options.checkTypes){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),options.checkGlobalThisLevel);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.skipAllPasses){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.checkTypes){
if(hasErrors()){
return ;
}
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.checkTypes){
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.checkTypes){
if(!options.ideMode){
optimize();
}
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.checkTypes){
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}

options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.skipAllPasses){
if(hasErrors()){
return ;
}
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.skipAllPasses){
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.skipAllPasses){
if(!options.ideMode){
optimize();
}
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.skipAllPasses){
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}

options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.checkTypes){
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.checkTypes){
if(hasErrors()){
return ;
}
if(!options.ideMode){
optimize();
}
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.checkTypes){
if(hasErrors()){
return ;
}
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}

options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.checkTypes){
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.checkTypes){
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}

options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.checkTypes){
if(!options.ideMode){
optimize();
}
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}

options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.skipAllPasses){
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.skipAllPasses){
if(hasErrors()){
return ;
}
if(!options.ideMode){
optimize();
}
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.skipAllPasses){
if(hasErrors()){
return ;
}
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}

options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.skipAllPasses){
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.skipAllPasses){
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}

options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.skipAllPasses){
if(!options.ideMode){
optimize();
}
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}

options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.checkTypes){
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.checkTypes){
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}

options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.checkTypes){
if(hasErrors()){
return ;
}
if(!options.ideMode){
optimize();
}
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}

options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.checkTypes){
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}

options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.skipAllPasses){
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.skipAllPasses){
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}

options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.skipAllPasses){
if(hasErrors()){
return ;
}
if(!options.ideMode){
optimize();
}
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}

options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.skipAllPasses){
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}

options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.checkTypes){
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}
if(hasErrors()){
return ;
}
if(options.isExternExportsEnabled()||options.externExportsPath!=null){
externExports();
}
if(!options.ideMode){
optimize();
}

options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!options.stripTypes){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!options.checkSymbols){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!config.variableMapInputFile){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!config.propertyMapInputFile){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!options.nameReferenceGraphPath){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!options.nameReferenceReportPath){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!options.replaceStringsFunctionDescriptions){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!config.outputBundles){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
options.acceptConstKeyword=config.acceptConstKeyword;
if(!options.checkTypes){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
options.transformAMDToCJSModules=config.transformAMDToCJSModules;
if(!options.checkTypes){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!options.aliasableStrings){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(options.disables(DiagnosticGroups.GLOBAL_THIS)){
options.checkTypes=false;
}else if(!options.checkTypes){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(options.disables(DiagnosticGroup.forType(EMPTY_MODULE_LIST_ERROR))){
options.checkTypes=false;
}else if(!options.checkTypes){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(options.enables(DiagnosticGroups.CHECK_TYPES)){
options.checkTypes=false;
}else if(!options.checkTypes){
options.setWarningLevel(DiagnosticGroup.forType(RhinoErrorReporter.TYPE_PARSE_ERROR),CheckLevel.OFF);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
com.google.javascript.jscomp.Compiler,261
com.google.javascript.jscomp.Compiler,265
com.google.javascript.jscomp.Compiler,300
========
if(!options.checkSymbols&&(options.enables(DiagnosticGroups.ACCESS_CONTROLS)||options.enables(DiagnosticGroups.CONSTANT_PROPERTY))){
composedGuards.addGuard(new DiagnosticGroupWarningsGuard(DiagnosticGroups.CHECK_VARIABLES,CheckLevel.OFF));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
com.google.javascript.jscomp.Compiler,1536
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(SourceFile.fromCode("[testcode]",js));
if(inputsById==null){
inputsById=Maps.newHashMap();
}
if(inputsById.containsKey(new SyntheticAst(js).getInputId())){
throw new IllegalArgumentException("Conflicting externs name: "+js);
}
putCompilerInput(input.getInputId(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
externs.add(0,input);
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(SourceFile.fromCode("[testcode]",js));
if(inputsById==null){
inputsById=Maps.newHashMap();
}
putCompilerInput(input.getInputId(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(input.getInputId().equals(synthesizedExternsInput.getInputId()));
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(SourceFile.fromCode("[testcode]",js));
if(inputsById==null){
inputsById=Maps.newHashMap();
}
putCompilerInput(input.getInputId(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(input.getInputId().equals(input.getAstRoot(this).getInputId()));
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(SourceFile.fromCode("[testcode]",js));
if(inputsById==null){
inputsById=Maps.newHashMap();
}
putCompilerInput(input.getInputId(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
inputs.remove(synthesizedExternsInput);
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(SourceFile.fromCode("[testcode]",js));
if(inputsById==null){
inputsById=Maps.newHashMap();
}
putCompilerInput(input.getInputId(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(SourceFile.fromCode("[testcode]",js));
if(inputsById!=null){
inputsById=Maps.newHashMap();
}
putCompilerInput(input.getInputId(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(jsRoot==null){
return false;
}
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(SourceFile.fromCode("[testcode]",js));
if(inputsById==null){
inputsById=Maps.newHashMap();
}
putCompilerInput(input.getInputId(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(SourceFile.fromCode("[testcode]",js));
if(inputsById==null){
inputsById=Maps.newHashMap();
}
putCompilerInput(input.getInputId(),input);
return parse(SourceFile.fromCode(currentPassName,js));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(SourceFile.fromCode("[testcode]",js));
if(inputsById==null){
inputsById=Maps.newHashMap();
}
putCompilerInput(input.getInputId(),input);
return input.parse(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(SourceFile.fromCode("[testcode]",js));
if(inputsById==null){
inputsById=Maps.newHashMap();
}
if(moduleGraph==null&&!modules.isEmpty()){
modules.get(0).add(input);
}
putCompilerInput(input.getInputId(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(jsRoot==null){
return false;
}
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(SourceFile.fromCode("[testcode]",js));
if(inputsById==null){
inputsById=Maps.newHashMap();
}
if(moduleGraph==null&&!modules.isEmpty()){
modules.get(0).add(input);
}
putCompilerInput(input.getInputId(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new Node(Token.SCRIPT).setStaticSourceFile(SourceFile.fromCode(input.getIdName(),""));
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(SourceFile.fromCode("[testcode]",js));
if(inputsById==null){
inputsById=Maps.newHashMap();
}
putCompilerInput(input.getInputId(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(jsRoot.getInputId());
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(SourceFile.fromCode("[testcode]",js));
if(inputsById==null){
inputsById=Maps.newHashMap();
}
putCompilerInput(input.getInputId(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
removeScriptReferences(jsRoot.getInputId());
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(SourceFile.fromCode("[testcode]",js));
if(inputsById==null){
inputsById=Maps.newHashMap();
}
putCompilerInput(input.getInputId(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jsRoot.isFunction()||n.isScript()){
Preconditions.checkNotNull(input);
currentPassName=NodeUtil.getSourceName(n);
}
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(SourceFile.fromCode("[testcode]",js));
if(inputsById==null){
inputsById=Maps.newHashMap();
}
putCompilerInput(input.getInputId(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.Compiler,1537
com.google.javascript.jscomp.Compiler,1539
com.google.javascript.jscomp.Compiler,1540
com.google.javascript.jscomp.Compiler,1542
com.google.javascript.jscomp.Compiler,1543
com.google.javascript.jscomp.ClosureCodingConvention,322
com.google.javascript.jscomp.ClosureCodingConvention,327
com.google.javascript.jscomp.CompilerOptions,1060
========
return warningsGuard.enables(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
com.google.javascript.jscomp.WarningsGuard,95
com.google.javascript.jscomp.WarningsGuard,106
com.google.javascript.jscomp.ComposeWarningsGuard,127
========
if(guard.enables(singleton)){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.enables(DiagnosticGroups.ACCESS_CONTROLS)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.enables(DiagnosticGroups.CONSTANT_PROPERTY)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.enables(DiagnosticGroups.GLOBAL_THIS)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.enables(DiagnosticGroups.ES5_STRICT)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.enables(DiagnosticGroups.CHECK_VARIABLES)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.enables(DiagnosticGroups.CHECK_TYPES)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.enables(singleton)){
continue nextSingleton;
}else if(guard.enables(singleton)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.disables(DiagnosticGroups.GLOBAL_THIS)){
continue nextSingleton;
}else if(guard.enables(singleton)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.disables(DiagnosticGroups.CHECK_TYPES)){
continue nextSingleton;
}else if(guard.enables(singleton)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
com.google.javascript.jscomp.ComposeWarningsGuard,128
com.google.javascript.jscomp.ComposeWarningsGuard,130
com.google.javascript.jscomp.ComposeWarningsGuard,138
com.google.javascript.jscomp.ComposeWarningsGuard,158
========
if(guard.disables(group)){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.disables(DiagnosticGroups.CHECK_TYPES)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.disables(DiagnosticGroups.GLOBAL_THIS)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.enables(group)){
return false;
}else if(guard.disables(group)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.enables(DiagnosticGroups.ACCESS_CONTROLS)){
return true;
}else if(guard.disables(group)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.enables(DiagnosticGroups.CONSTANT_PROPERTY)){
return true;
}else if(guard.disables(group)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.enables(DiagnosticGroups.GLOBAL_THIS)){
return true;
}else if(guard.disables(group)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.enables(DiagnosticGroups.ES5_STRICT)){
return true;
}else if(guard.disables(group)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.disables(group)){
return true;
}else if(guard.disables(group)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(guard.enables(DiagnosticGroups.CHECK_VARIABLES)){
return true;
}else if(guard.disables(group)){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(WarningsGuard guard : guards){
if(guard.enables(group)){
return false;
}else if(guard.disables(group)){
return false;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(WarningsGuard guard : guards){
if(guard.enables(group)){
return false;
}else if(guard.disables(group)){
return false;
}
}
return false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
com.google.javascript.jscomp.DiagnosticGroup,60
Find no block!
com.google.javascript.jscomp.DiagnosticGroup,61
UNKNOWN ASTNode type : catch (IOException e) {
  compiler.getErrorManager().report(CheckLevel.ERROR,JSError.make(AbstractCompiler.READ_ERROR,getName()));
  return ImmutableList.<String>of();
}

UNKNOWN ASTNode type : catch (IOException e) {
  compiler.getErrorManager().report(CheckLevel.ERROR,JSError.make(AbstractCompiler.READ_ERROR,getName()));
  return ImmutableList.<String>of();
}

========
this.name=null;
this.types=ImmutableSet.copyOf(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lazyInitInfo();
this.name=null;
this.types=ImmutableSet.of(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.GETPROP :

this.name=null;
this.types=ImmutableSet.of(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.name=name;
this.name=null;
this.types=ImmutableSet.of(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assert (record != null);

this.name=null;
this.types=ImmutableSet.of(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assert (record.name.isEmpty());

this.name=null;
this.types=ImmutableSet.of(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
occurrence.parent.replaceChild(occurrence.node,IR.name(name));
this.name=null;
this.types=ImmutableSet.of(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.type=type;
this.name=null;
this.types=ImmutableSet.of(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OR :

this.name=null;
this.types=ImmutableSet.of(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name==null)return ;
this.name=null;
this.types=ImmutableSet.of(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
nameInfo.name=name;
this.name=null;
this.types=ImmutableSet.of(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name.isEmpty()){
return name;
}
this.name=null;
this.types=ImmutableSet.of(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.DiagnosticGroup,62
com.google.javascript.jscomp.DiagnosticGroup,63
Find no block!
com.google.javascript.jscomp.DiagnosticGroup,71
========
if(!singletons.containsKey(name)){
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(name,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!recognizedAnnotations.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(name)){
singletons.put(name,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!throwsDescriptions.containsKey(type)){
throwsDescriptions.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!throwsDescriptions.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
throwsDescriptions.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
return true;
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(type)){
parameters.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
parameters.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(name)){
return true;
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
return true;
singletons.put(name,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(name)){
return true;
singletons.put(name,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(name)){
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(type)){
singletons.put(name,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(type)){
return true;
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(name)){
parameters.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
parameters.put(name,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
return true;
parameters.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(name)){
parameters.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(type)){
parameters.put(name,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(type)){
return true;
parameters.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(name)){
singletons.put(name,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(name)){
return true;
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(type)){
return true;
singletons.put(name,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(name)){
parameters.put(name,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(name)){
return true;
parameters.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
return true;
parameters.put(name,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(name)){
parameters.put(name,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(name)){
return true;
parameters.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(type)){
return true;
parameters.put(name,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(name)){
return true;
singletons.put(name,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(name)){
return true;
parameters.put(name,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!reachingDef.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(name);
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!props.containsKey(type)){
props.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!props.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
props.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
if(incrementNameCount(name)!=0){
newName=getUniqueName(name,incrementNameCount(name));
}
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
return ;
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
mayUseMap.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!extraTracingStatistics.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
globals.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!instanceType.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!typesToSkip.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.contains(type)){
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.isEquivalentTo(type)){
singletons.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
refInfo.put(type,new DiagnosticGroup(type));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.DiagnosticGroup,72
com.google.javascript.jscomp.DiagnosticGroup,74
========
if(!singletons.containsKey(name)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(name);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(name)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(name,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(name);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(name)){
singletons.put(name,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!recognizedAnnotations.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!throwsDescriptions.containsKey(type)){
throwsDescriptions.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!throwsDescriptions.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
throwsDescriptions.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
return true;
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return scope.ownSymbols.get(name);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return ownSymbols.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(type)){
parameters.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
parameters.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(name)){
return true;
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
return true;
singletons.put(name,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(name)){
return true;
singletons.put(name,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(name)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(type)){
singletons.put(name,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(type)){
return true;
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(name)){
parameters.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
parameters.put(name,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
return true;
parameters.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(name)){
parameters.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(type)){
parameters.put(name,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(type)){
return true;
parameters.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(name)){
singletons.put(name,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(name)){
return true;
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(type)){
return true;
singletons.put(name,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(name)){
parameters.put(name,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(name)){
return true;
parameters.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
return true;
parameters.put(name,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(name)){
parameters.put(name,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(name)){
return true;
parameters.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(type)){
return true;
parameters.put(name,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!parameters.containsKey(name)){
return true;
singletons.put(name,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(name)){
return true;
parameters.put(name,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!reachingDef.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.isEquivalentTo(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(name);
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!props.containsKey(type)){
props.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!props.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
props.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!extraTracingStatistics.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return ImmutableList.of();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!newName.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
if(incrementNameCount(name)!=0){
newName=getUniqueName(name,incrementNameCount(name));
}
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
return ;
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.contains(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
refInfo.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(v.index);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
mayUseMap.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return Collections.emptyList();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!scopeUpRefMap.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
globals.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return Joiner.on(" -> ").join(Lists.newArrayList());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
Lists.newArrayList().add(symbols.get(0));
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!instanceType.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return info.parameters.get(name);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return parameters.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return info.parameters.containsKey(name);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return documentation.parameters.containsKey(name);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return documentation.parameters.get(name);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return parameters.get(name);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.get(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getImplicitPrototype()!=null){
return implicitPrototype.isPropertyInExterns(name);
}
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getImplicitPrototype()!=null){
return implicitPrototype.getPropertyNode(name);
}
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!typesToSkip.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type.getSource());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
if(type==null){
return null;
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
if(type.getSource()==null){
return null;
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return s.simplified.get(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return simplified.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

if(!singletons.containsKey(type)){
singletons.put(type,new DiagnosticGroup(type));
}
return singletons.get(type);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypedScopeCreator,223
UNKNOWN ASTNode type : catch (MalformedException e) {
  compiler.report(JSError.make(message.getSourceName(),e.getNode(),MESSAGE_TREE_MALFORMED,e.getMessage()));
  newValue=msgNode;
}

UNKNOWN ASTNode type : catch (IOException e) {
  compiler.getErrorManager().report(CheckLevel.ERROR,JSError.make(AbstractCompiler.READ_ERROR,getName()));
  return ImmutableList.<String>of();
}

UNKNOWN ASTNode type : catch (IOException e) {
  compiler.getErrorManager().report(CheckLevel.ERROR,JSError.make(AbstractCompiler.READ_ERROR,getName()));
  return ImmutableList.<String>of();
}

UNKNOWN ASTNode type : catch (IOException e) {
  compiler.report(JSError.make(AbstractCompiler.READ_ERROR,sourceFile.getName()));
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  compiler.report(t.makeError(n,INVALID_STYLE_ERROR,styleStr));
  return;
}

UNKNOWN ASTNode type : catch (MalformedException ex) {
  compiler.report(traversal.makeError(ex.getNode(),MESSAGE_TREE_MALFORMED,ex.getMessage()));
  return;
}

========
if(codingConvention.isExported(functionNode.getLastChild().getString())){
return false;
}
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerName=functionNode.getString();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode=node;
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=functionNode.getLastChild();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnThisType.isUnknownType()){
aliasName=ownerName;
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnThisType.isUnknownType()){
break;
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnThisType.isUnknownType()){
aliasName=ownerName;
break;

NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnThisType.getPrototype().isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnThisType.isUnknownType()){
functionNode.addChildToBack(IR.exprResult(newReportFunctionExitNode()));
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,functionNode,this);
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(functionNode.isFunction());
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!fnThisType.isUnknownType()){
functionNode.getLastChild().setIsSyntheticBlock(true);
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!fnThisType.isUnknownType()){
functionNode.addChildToBack(functionNode.getLastChild());
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!fnThisType.isUnknownType()){
functionNode.getLastChild().setIsSyntheticBlock(true);
functionNode.addChildToBack(functionNode.getLastChild());

NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
functionNode.getLastChild().addChildToBack(node);
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnThisType.isUnknownType()){
functionNode.getLastChild().setIsSyntheticBlock(true);
functionNode.addChildToBack(functionNode.getLastChild());
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!fnThisType.isUnknownType()){
functionNode.getLastChild().setIsSyntheticBlock(true);
functionNode.getLastChild().setIsSyntheticBlock(true);
functionNode.addChildToBack(functionNode.getLastChild());

NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!fnThisType.isUnknownType()){
functionNode.addChildToBack(functionNode.getLastChild());
functionNode.getLastChild().setIsSyntheticBlock(true);
functionNode.addChildToBack(functionNode.getLastChild());

NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!fnThisType.isUnknownType()){
functionNode.getLastChild().setIsSyntheticBlock(true);
functionNode.addChildToBack(functionNode.getLastChild());
functionNode.getLastChild().setIsSyntheticBlock(true);
functionNode.addChildToBack(functionNode.getLastChild());

NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!fnThisType.isUnknownType()){
ret=createConcreteInstance(functionNode.getJSType().restrictByNotNullOrUndefined().toObjectType());
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnThisType.isUnknownType()){
parent.removeChild(node);
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnThisType.isUnknownType()){
functionNode.replaceChild(fnThisType,node);
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnThisType.isUnknownType()){
parent.removeChild(node);
functionNode.replaceChild(fnThisType,node);

NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnThisType.isUnknownType()){
return ;
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnThisType.isUnknownType()){
fnThisType.getConstructor().traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnThisType.isUnknownType()){
return false;
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnThisType.isUnknownType()){
appendAnnotation(fnThisType,"return",type.toAnnotationString());
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnThisType.isUnknownType()){
fnThisType.append("\n");
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnThisType.isUnknownType()){
appendAnnotation(fnThisType,"return",type.toAnnotationString());
fnThisType.append("\n");

NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isFunctionType()){
if(fnType!=null){
inferPropertyTypesToMatchConstraint(node.getJSType(),fnType.getReturnType());
}
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null||type.isUnknownType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type==null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(type!=null&&type.isUnknownType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(functionNode.isFunction());
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(functionNode.isFunction());
if(type==null||type.isUnknownType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type==null&&type.isUnknownType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(functionNode.isFunction());
if(type==null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(functionNode.isFunction());
if(type!=null&&type.isUnknownType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(functionNode.isFunction());
if(type==null&&type.isUnknownType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(propType!=null&&propType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propType!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&propType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&t.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nodeType!=null&&nodeType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nodeType!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&nodeType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isFunctionType()){
if(fnType!=null&&fnThisType.equals(NodeUtil.getSourceName(fnType.getSource()))){
fnType.setSource(null);
}
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isEmptyType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(type!=null&&type.isFunctionType()){
FunctionType fnType=constructorType.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isFunctionType()){
constructorType=type.restrictByNotNullOrUndefined();
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.setJSType(type);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(functionNode.getLastChild()!=node&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isConstructor()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
NodeTraversal.traverse(compiler,root,new GatherReferenceInfo());
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new DoShadowVariables());
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isFunctionType()){
FunctionType fnType=alternate.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isFunctionType()){
result=null;
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&that.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rightType!=null&&rightType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rightType!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&rightType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&bType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isUnionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!functionNode.isGetProp()){
return false;
}
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(node.getLastChild(),fnThisType);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isCall()&&node==parent.getFirstChild()){
parent.putBooleanProp(Node.FREE_CALL,true);
}
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.replaceChild(node,fnThisType);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(literals.booleanValues==BooleanLiteralSet.EMPTY&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setReferencedType(type);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkEnumElementCycle(typeParsingErrorReporter);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setResolvedTypeInternal(getReferencedType());
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objectJsType!=null&&objectJsType.isFunctionType()){
FunctionType fnType=objectJsType.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&objectJsType.isFunctionType()){
FunctionType fnType=objectJsType.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objectJsType!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&objectJsType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isFunctionType()){
FunctionType fnType=objectJsType.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isFunctionType()){
if(fnType.isConstructor()){
JSType fnThisType=functionNode.getJSType();
return ;
}
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isAllType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
Lists.newArrayList().add(type.getTypeOfThis());
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
for(Node node : type.getParameters()){
Lists.newArrayList().add(node.getJSType());
}
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isFunctionType()){
functionNode.setJSType(fnType.createFunctionType(fnThisType,type.getReturnType(),Lists.newArrayList()));
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isFunctionType()){
Lists.newArrayList().add(type.getTypeOfThis());
for(Node node : type.getParameters()){
Lists.newArrayList().add(node.getJSType());
}
functionNode.setJSType(fnType.createFunctionType(fnThisType,type.getReturnType(),Lists.newArrayList()));

FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(altPropType!=null&&altPropType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&!fnThisType.isEquivalentTo(this)&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(altPropType!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&altPropType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisType==null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&castType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&required.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isFunctionType()){
FunctionType fnType=found.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&current.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&propType.isFunctionType()){
FunctionType fnType=propType.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isFunctionType()){
FunctionType fnType=propType.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isFunctionType()){
if(thisType.isFunctionPrototypeType()){
thisType=fnThisType.getOwnerFunction().getInstanceType();
}
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&propB.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
handleUnresolvedType(typeParsingErrorReporter,true);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defineSlot(node,node,type);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ObjectType.cast(type)!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fnType.isExported(fnThisType.getLValue().getLastChild().getString())){
return false;
}
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if("prototype".equals(ownerName)){
return null;
}
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.replaceChild(node,NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),String.format("%s.call",fnType.getQualifiedName()),callee,"goog.base"));
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(trueType!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
traverse(functionNode,fnThisType.createChildFlowScope());
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
traverse(node,fnType.createChildFlowScope());
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ensureTyped(fnThisType,functionNode,type);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setDeferredType(node,type);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processObjectLitProperties(node,ObjectType.cast(objectLit.getJSType()),!isExtern);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode=parent.getLastChild();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.removeChild(functionNode);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.addChildToFront(functionNode);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fnThisType.replaceChild(fnType,node);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnThisType!=null){
ObjectType fnThisType.getImplicitPrototype()=objType.getImplicitPrototype();
if(implicitProto!=null){
return getTypeDeprecationInfo(implicitProto);
}
}
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parameterType!=null&&parameterType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parameterType!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&parameterType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&ownerType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&((ObjectType)type).hasReferenceName()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerName!=null){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerName!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objIndexType!=null&&objIndexType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objIndexType!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&objIndexType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionNode.getLastChild()!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
scope.declareSlot(functionNode.getLastChild().getString(),node,type);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isNullable()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type!=null&&callClassType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(thisType!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&returnType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propertyType!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isSubtype(getNativeType(JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN))){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type!=null&&type.isSubtype(getNativeType(JSTypeNative.NUMBER_STRING_BOOLEAN))){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(thisType.getConstructor()!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.isInstanceType()?null:type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(jsType!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(functionNode.isFunction(),"Node must be a function.");
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(fnType.isBlock(),"Node must be a block.");
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(node.getParent()==null);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&implementedInterface.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node==null){
return false;
}
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getRoot().getLastChild().addChildToBack(node);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(constructor!=null&&constructor.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(constructor!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&constructor.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(currentClass!=null&&currentClass.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(currentClass!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&currentClass.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(newScope.getVar(functionNode.getQualifiedName())!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(type!=null&&jsType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.addChildToFront(IR.name(ownerName).srcref(node));
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(parent.isCall());
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.putBooleanProp(Node.FREE_CALL,true);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionNode.getNext()!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(retType!=null&&retType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&!type.isUnknownType()&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(retType!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&retType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnThisType.process(node,node);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnType.analyze(fnThisType);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnThisType.removeChild(functionNode);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.removeChild(fnThisType);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.addChildAfter(node,node);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnType.getFirstChild()==null){
return false;
}
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lValueType!=null&&lValueType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&type.isNominalConstructor()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lValueType!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&lValueType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compiler.getSourceLine(sourceName,fnThisType)==null){
src=MISSING_SOURCE;
}
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(OTHER!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CALL :

if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
inferPropertyTypesToMatchConstraint(getJSType(functionNode),type);
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
if(type.isFunctionType()){
FunctionType fnThisType=type.toMaybeFunctionType();
if(functionNode.isFunction()&&getJSType(functionNode).isFunctionType()){
functionNode.setJSType(fnThisType);
}
}
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
inferPropertyTypesToMatchConstraint(getJSType(functionNode),type);
if(type.isFunctionType()){
FunctionType fnThisType=type.toMaybeFunctionType();
if(functionNode.isFunction()&&getJSType(functionNode).isFunctionType()){
functionNode.setJSType(fnThisType);
}
}

JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnType.hasInstanceType()){
return type.getGreatestSubtype(funcTarget.getInstanceType());
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=traverse(node,scope);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
traverse(node,fnThisType.createChildFlowScope());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
traverse(functionNode.getLastChild(),fnType.createChildFlowScope());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(propType!=null&&propType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(propType!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&propType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
propType=thisType.getPropertyType(ownerName);
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new RewriteGlobalFunctionStatementsToVarAssignmentsCallback());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new RewriteScopeCallback());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new RemoveGlobalVarCallback());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new MakeExternsReferenceWindowExplicitly());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
return "";
}else if(type.isFunctionType()){
return getFunctionAnnotation(functionNode);
}else if(type.isEnumType()){
return "/** @enum {"+type.toMaybeEnumType().getElementsType().toAnnotationString();
}else if(!type.isUnknownType()&&!type.isEmptyType()){
return "/** @type {"+node.getJSType().toAnnotationString();
}else {
return "";
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
if(fnType!=null&&fnThisType.equals(NodeUtil.getSourceName(fnType.getSource()))){
fnType.setSource(null);
}
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(node.getLastChild(),fnThisType);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null){
fnThisType.setJSType(type);
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.replaceChild(node,fnThisType);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeTraversal.traverse(compiler,node,new ProcessExternals());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new FindDependencyScopes());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new HoistVariableAndFunctionDeclarations());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new FindDeclarationsAndSetters());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new FindReferences());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
referenceParentNames();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
referenceAliases();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
calculateReferences();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.setJSType(type);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=expr.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
ret=createConcreteInstance(fnType.toObjectType());
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=rvalue.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&rightType.isFunctionType()){
fnThisType=rightType.toMaybeFunctionType();
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.setJSType(type);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(type);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnThisType==null){
return scope;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnThisType.hasReferenceName()&&!functionNode.getJSDocInfo()!=null&&n.getJSDocInfo().getLendsName()!=null){
return scope;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!functionNode.isFunction()||type.isFunctionType());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new GatherReferenceInfo());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new DoShadowVariables());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope=traverseChildren(functionNode,scope);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.isUnknownType()||type.isUnionType()){
return false;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
type=scopeBuilder.createAnonymousObjectType();
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setDeferredType(node,type);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processObjectLitProperties(node,ObjectType.cast(objectLit.getJSType()),!false);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new GatherGenerators());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnType.getFirstChild()==null){
return null;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionNode.isReturn()){
return statement.getFirstChild();
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(functionNode.isFunction());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnType.isConstructor()&&(type==null||returnType.isUnknownType())){
reportUnknownReturnType(functionNode);
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setReferencedType(type);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkEnumElementCycle(typeParsingErrorReporter);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setResolvedTypeInternal(getReferencedType());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new ProcessProperties());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isExprAssign(node)){
return false;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((functionNode==null)||!functionNode.isFunction()){
return false;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,node,new GetGlobals());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new GlobalGatherer());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isAnySymbolDeclared(ownerName,functionNode,sym.docScope)==null){
declareSymbol(ownerName,type,type==null,sym.docScope,functionNode,null);
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
isExtern=false;
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,this);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=getJSType(functionNode.getFirstChild());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new PropertyGatherer());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(functionNode.isAssign());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode=functionNode.getLastChild();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.removeChild(functionNode);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.addChildToFront(functionNode);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnThisType.replaceChild(fnType,node);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defineSlot(functionNode,node,type);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
removeDuplicateDeclarations(node,root);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new PropagateConstantAnnotationsOverVars(compiler,isExtern).process(node,root);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new FindExposeAnnotations());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!compiler.getLifeCycleStage().isNormalized()){
compiler.setLifeCycleStage(LifeCycleStage.NORMALIZED);
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnType==null){
return ;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.setJSType(fnType.getBindReturnType(compiler.getCodingConvention().describeFunctionBind(node,true).getBoundParameterCount()+1));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
addReferenceTypeIndexedByProperty(ownerName,type);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=node;
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
root=node;
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,node,new FunctionAnalyzer(true));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new FunctionAnalyzer(false));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
propagateSideEffects();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
markPureFunctionCalls();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=type.restrictByNotNullOrUndefined();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,node,new ProcessVars(true));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new ProcessVars(false));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(isExtern||type!=null);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defineSlot(functionNode,parent,n.getQualifiedName(),type,isExtern);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&that.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
registry.registerPropertyOnType(ownerName,this);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
handleUnresolvedType(typeParsingErrorReporter,true);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(functionNode);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(functionNode.isBlock());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,functionNode,new CreateScope(this,false));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new InstrumentCallback());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(compiler.getLifeCycleStage().isNormalized());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeTraversal.traverse(compiler,root,new FindCandidateFunctions());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
trimCanidatesNotMeetingMinimumRequirements();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ensureTyped(fnThisType,node,type);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnType.analyze();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnThisType.analyze();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,fnThisType);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverseRoots(compiler,Lists.newArrayList(node,root),this);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=addMarker(fnType,nodeToInsertAfter,null);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Iterables.addAll(Sets.newTreeSet(ALPHA),fnType.getAllImplementedInterfaces());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(ObjectType thisType : Sets.newTreeSet(ALPHA)){
node=addMarker(fnType,nodeToInsertAfter,interfaceType);
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnType.hasInstanceType()){
return type.getRestrictedUnion(funcTarget.getInstanceType());
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope.declareSlot(functionNode.getLastChild().getString(),node,type);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnType=firstPreciserScopeKnowingConditionOutcome(node,rightScope,!isExtern);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(createCheckTypeCallNode(fnType.getReturnType(),fnThisType.cloneTree())==null){
return ;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.replaceChild(fnThisType,createCheckTypeCallNode(fnType.getReturnType(),fnThisType.cloneTree()));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(functionNode.getQualifiedName()!=null&&ownerName!=null);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new CollectTweaks());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnThisType!=null){
ObjectType fnThisType.getImplicitPrototype()=objType.getImplicitPrototype();
if(implicitProto!=null){
return getTypeDeprecationInfo(implicitProto);
}
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnThisType.set(getIntForType(type));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type.isFunctionPrototypeType()){
addRelatedInstance(((ObjectType)type).getOwnerFunction(),fnThisType);
return ;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new FindAliasableNodes());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null&&parent.isFunction()){
varType=parent.getJSType();
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isExtern){
fnThisType.add(new FindAssertionCalls());
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
CombinedCompilerPass.traverse(compiler,root,fnThisType);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnType.hasInstanceType()){
if(type.isSubtype(funcTarget.getInstanceType())){
return null;
}
return type;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,node,new GatherSideEffectSubexpressionsCallback(compiler,new CopySideEffectSubexpressions(compiler,Lists.newArrayList())));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
symbol=type==null?null:type.autoboxesTo()==null?null:getSymbolForTypeHelper(type==null?null:type.autoboxesTo(),true);
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
replaceStringsWithAliases();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
addAliasDeclarationNodes();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,node,new ProcessExternedProperties());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(compiler.getLifeCycleStage().isNormalized());
NodeTraversal.traverse(compiler,root,new ProcessProperties());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(scopeBuilder.defineNameIfNotExists(ownerName+".prototype.",isExtern),"%s should be in the name graph as a node.",ownerName+".prototype.");
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scopeBuilder.defineNameIfNotExists(ownerName+".prototype.",isExtern).setType(type);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isStatement(functionNode)){
return true;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionNode.isName()&&fnType.isVar()){
return true;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.removeChild(functionNode);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.removeChild(node);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.addChildToFront(functionNode);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnThisType.addChildAfter(node,fnType);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(null==null){
throw new IllegalArgumentException("expected at least one side effect subexpression in short "+"circuit branch.");
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeTraversal.traverse(compiler,node,new GatherSideEffectSubexpressionsCallback(compiler,new CopySideEffectSubexpressions(compiler,Lists.newArrayList())));
if(null==null){
throw new IllegalArgumentException("expected at least one side effect subexpression in short "+"circuit branch.");
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
makeLocalNamesUnique(functionNode.cloneTree(),isExtern);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rewriteFunctionDeclarations(functionNode.cloneTree().getLastChild());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.replaceChild(node,NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),String.format("%s.call",node.getQualifiedName()),callee,"goog.base"));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
trimCanidatesUsingOnCost();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resolveInlineConflicts();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
removeInlinedFunctions();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,root,new GatherCollapses());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new NodeTraversal(compiler,this).traverse(root);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnType.isExported(ownerName)){
return true;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(ref.node.getLastChild(),node);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,NodeUtil.getFunctionBody(node),new FindCallbackArgumentReferences(callbackFunction,fnThisType,Lists.newArrayList(),functionNode.isArrayLit()));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getSignatureStore().reset();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverseRoots(compiler,Lists.newArrayList(node,root),new GatherSignatures());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverseRoots(compiler,fnThisType,getActingCallback());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(functionNode.isFunction(),"Node must be a function.");
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(functionNode.getLastChild().isBlock(),"Node must be a block.");
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(node.getParent()==null);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.getLastChild().addChildToFront(node);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maybeGetSingleReturnRValue(functionNode)!=null&&value.isName()&&value.getString().equals(fnType.getFirstChild().getString())){
return true;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnType.isExported(functionNode.getLastChild().getString())){
return false;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnThisType.isEmpty()){
return false;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnThisType!=null){
functionNode.replaceChild(fn,IR.string("prototype"));
compiler.reportCodeChange();
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isEmptyFunction(fnThisType)){
return null;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
return null;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isVoidOrUnknown(type)){
return returnType;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,node,this);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(registry.getType(fnThisType)!=null&&type.isSubtype(registry.getType(fnThisType))){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(registry.getType(fnThisType)!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isSubtype(registry.getType(fnThisType))){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&callClassType.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
rightType=getNativeType(UNKNOWN_TYPE);
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ref.node.getParent().removeChild(node);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ref.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)||(ref.node.getParent().getJSDocInfo()!=null&&info.isConstant())){
fnThisType.putBooleanProp(Node.IS_CONSTANT_NAME,true);
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.addChildToBack(fnThisType);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.getLastChild().addChildToBack(node);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(node.isName()||n.isString());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionNode==null){
return null;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(functionNode.getLastChild().isReturn());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(!fnThisType.isFunctionType()||instanceType==getTypeRegistry().getNativeType(U2U_CONSTRUCTOR_TYPE));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
(new MappingTraversal()).traverse(new UsedMappingCheck());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,functionNode.getChildAtIndex(2),new DefineCallbackReturnCallback());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
moveCallbackContentToTopLevel(parent,node,functionNode.getChildAtIndex(2));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
type=(nameType==null)?getNativeType(UNKNOWN_TYPE):nameType;
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,scope.getRootNode(),this);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(node);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(node.isName());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((node.getFirstChild()!=null)&&(name.getFirstChild().isFunction())){
return createConcreteFunction(name.getFirstChild(),scope);
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(createCheckTypeCallNode(node.getJSType(),node.cloneTree())==null){
node=paramName.getNext();
continue;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=IR.exprResult(checkNode);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node==null){
functionNode.addChildToFront(createCheckTypeCallNode(node.getJSType(),node.cloneTree()));
}else {
block.addChildAfter(checkNode,insertionPoint);
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.isEnumType()){
return ;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnThisType=src.restrictByNotNullOrUndefined();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.getFirstChild().setJSType(fnThisType);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=null&&(functionNode.isName()||name.isString())){
fnThisType.defineDeclaredProperty(name.getString(),jsType,node);
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionNode.getFirstChild().isNot()){
node=leftParent.removeFirstChild();
}else {
leftParent.detachFromParent();
left=IR.not(leftParent).srcref(leftParent);
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(node.isAssign());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
IR.objectlit().setJSType(functionNode.getJSType());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
IR.objectlit().setJSDocInfo(new JSDocInfo());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(this,getRoot(),new ReferenceCollectingCallback(this,ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope.declareSlot(ConcreteFunctionType.CALL_SLOT_NAME,functionNode);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope.declareSlot(ConcreteFunctionType.THIS_SLOT_NAME,functionNode);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope.declareSlot(ConcreteFunctionType.RETURN_SLOT_NAME,functionNode);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
scope.initForScopeRoot(functionNode.getLastChild());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new StringBuilder(32).append("function (");
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(!fnThisType.isUnknownType()){
new StringBuilder(32).append("this:");
b.append(getDebugHashCodeStringOf(fnThisType));
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!functionNode.hasChildren()||block.hasOneChild()){
return false;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnType.defineInferredProperty(ownerName,NodeUtil.getObjectLitKeyTypeFromValueType(functionNode,fnThisType),functionNode);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerName!=null&&functionNode.isStringKey()){
String ownerName+"."=qObjName+".";
Var newScope.getVar(ownerName+".")=newScope.getVar(qKeyName);
JSType type=var==null?null:var.getType();
if(var!=null&&var.isTypeInferred()){
var.setType(oldType==null?NodeUtil.getObjectLitKeyTypeFromValueType(functionNode,fnThisType):oldType.getLeastSupertype(oldType));
}
scope.inferQualifiedSlot(name,qKeyName,oldType==null?getNativeType(UNKNOWN_TYPE):oldType,valueType);
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getSubTypes(type.getConstructorType().getJSType(),Sets.newHashSet());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.addChildToFront(IR.exprResult(IR.call(IR.getprop(IR.name("goog"),IR.string("provide")),IR.string(ownerName))).copyInformationFromForTree(script));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
emitOptionalModuleExportsOverride(node,ownerName);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,node,new SuffixVarsCallback(ownerName));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
returnType=typeRegistry.getNativeType(UNKNOWN_TYPE);
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node==null){
throw new IllegalStateException("All Function types must have params and a return type");
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
process(node,root,fnThisType);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(compiler,"Expected setCompiler to be called first");
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
fnType.visitTree(getAstRoot(compiler));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnThisType.addAll(finder.provides);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnType.process(node,copyModuleInputs(fnThisType));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnType=new LiveVariablesAnalysis(fnThisType.getControlFlowGraph(),scope,compiler);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tryRemoveDeadAssignments(fnThisType,fnThisType.getControlFlowGraph());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!functionNode.getFirstChild().isName()){
if(NodeUtil.isFunctionObjectCall(callNode)){
if(functionNode.getFirstChild().getNext()==null||!cArg.isThis()){
return CanInlineResult.NO;
}
cArg=cArg.getNext();
}else {
Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));
}
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionNode.getLastChild().getString().equals("call")||propString.equals("apply")){
return functionNode.getNext();
}else {
return callTarget.getFirstChild();
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.replaceChild(node,node);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
traverseNode(root,null,scope);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
interpretAssigns();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
removeUnreferencedVars();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
compiler.reportCodeChange();
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
isExtern=isExtern;
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnType.traverseWithScope(node,newScope);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.removeChild(node);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.addChildToFront(IR.name(ownerName).srcref(node));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(functionNode.isCall());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.putBooleanProp(Node.FREE_CALL,true);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.replaceChild(node,node);
compiler.reportCodeChange();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(functionNode.isName());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(root==null||compiler.hasHaltingErrors()){
root=IR.script();
}else {
compiler.prepareAst(root);
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerName=node.getLastChild().getString();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node!=null){
functionNode.addChildAfter(IR.var(fnThisType).copyInformationFromForTree(node),nameToAddAfter);
}else {
varParent.addChildBefore(newVar,node);
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=IR.var(fnThisType).copyInformationFromForTree(node);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.addChildToBack(IR.string(ownerName));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.addChildToBack(NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),ownerName,node,testFunctionName));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.addChildAfter(fnThisType,node);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.removeChild(node,node);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Collections.reverse(nonExternFunctions);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.addToDebugLog("JS property assignments:");
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
functionNode.replaceChild(alias.node,IR.nullNode());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.addToDebugLog("JS property assignments:\n"+fnType);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getSynthesizedExternsRoot().addChildToBack(IR.var(fnThisType));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeParsingErrorReporter=this.new ErrorReporter(compiler);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(fnThisType.getType()==TagType.Program);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
transformElement(fnThisType,fnType);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(NodeUtil.getSourceName(root));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
(new FirstOrderFunctionAnalyzer(compiler,functionAnalysisResults)).process(null,root);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(NodeUtil.getSourceName(root));
(new FirstOrderFunctionAnalyzer(compiler,functionAnalysisResults)).process(null,root);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
node.getParent().addChildAfter(IR.exprResult(IR.assign(IR.getelem(IR.getprop(NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),ownerName),IR.string("prototype")),fnThisType),IR.trueNode())),nodeToInsertAfter);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node=IR.exprResult(IR.assign(IR.getelem(IR.getprop(NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),ownerName),IR.string("prototype")),fnThisType),IR.trueNode()));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isExtern){
compiler.reportCodeChange();
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.setLifeCycleStage(LifeCycleStage.NORMALIZED_OBFUSCATED);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.getParent().replaceChild(callNode,node);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionNode.getNext()!=null){
ownerName=arg.getNext().getString();
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.replaceChild(node,NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),String.format("%s.superClass_.%s.call",fnType.getQualifiedName(),ownerName),callee,"goog.base"));
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.removeChild(node);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.compiler=compiler;
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!Strings.isNullOrEmpty(ownerName)){
this.unaliasableGlobals.addAll(Arrays.asList(unaliasableGlobals.split(",")));
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!Strings.isNullOrEmpty(ownerName)){
this.aliasableGlobals.addAll(Arrays.asList(aliasableGlobals.split(",")));
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
annotate(node);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnThisType=Maps.newLinkedHashMap();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnType=Maps.newLinkedHashMap();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnType.process(node,root);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(functionNode.getNext()!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
NodeUtil.setDebugInformation(fnThisType.getFirstChild(),functionNode.getFirstChild(),"?"+".prototype");
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
functionNode.replaceChild(functionNode.getFirstChild(),fnThisType);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerName=Joiner.on("_").join(fnThisType);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.setString(ownerName);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((fnType!=null&&info.isConstant())||NodeUtil.isConstantByConvention(compiler.getCodingConvention(),functionNode,parent)&&!functionNode.getBooleanProp(Node.IS_CONSTANT_NAME)){
if(isExtern){
String functionNode.getString()=functionNode.getString();
throw new IllegalStateException("Unexpected const change.\n"+"  name: "+name);
}
n.putBooleanProp(Node.IS_CONSTANT_NAME,true);
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(node==null){
return false;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getRoot().getLastChild().addChildToBack(node);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!functionNode.getFirstChild().isReturn()){
return null;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!functionNode.getFirstChild().hasOneChild()){
return null;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compiler.getSourceLine(sourceName,fnThisType)==null){
src=MISSING_SOURCE;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionNode.getQualifiedName()==null||!"goog.now".equals(googNowQName)||functionNode.getNext()!=null){
return ;
}
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
node.removeChild(node);
compiler.reportCodeChange();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
type=scopeBuilder.createAnonymousObjectType();
}
setDeferredType(node,type);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
type=scopeBuilder.createAnonymousObjectType();
}
processObjectLitProperties(node,ObjectType.cast(objectLit.getJSType()),!false);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setDeferredType(node,type);
processObjectLitProperties(node,ObjectType.cast(objectLit.getJSType()),!false);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type==null){
type=scopeBuilder.createAnonymousObjectType();
}
setDeferredType(node,type);
processObjectLitProperties(node,ObjectType.cast(objectLit.getJSType()),!false);
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.POS :

for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.ASSIGN_BITOR :

for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.isExtern=outputStringUsage;
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.fnType=propertiesToErrorFor;
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OBJECTLIT :

for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.OR :

for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateBlock(node.getLastChild());
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.ownerName=prefix==null?"":prefix;
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.isExtern=localRenamingOnly;
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.isExtern=preserveFunctionExpressionNames;
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.isExtern=generatePseudoNames;
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.isExtern=canModifyExterns;
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.isExtern=anchorUnusedVars;
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.ARRAYLIT :

for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CALL :

for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.inputId=null;
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.sourceName="";
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.AND :

for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FUNCTION :

for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkErrorManager();
for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.WITH :

for(Node functionNode : scopeBuilder.nonExternFunctions){
JSType type=functionNode.getJSType();
if(type!=null&&type.isFunctionType()){
FunctionType fnType=type.toMaybeFunctionType();
ObjectType fnThisType=fnType.getTypeOfThis();
if(!fnThisType.isUnknownType()){
NodeTraversal.traverse(compiler,functionNode.getLastChild(),scopeBuilder.new CollectProperties(fnThisType));
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypedScopeCreator,224
com.google.javascript.jscomp.TypedScopeCreator,225
com.google.javascript.jscomp.TypedScopeCreator,226
com.google.javascript.jscomp.TypedScopeCreator,227
com.google.javascript.jscomp.TypedScopeCreator,228
com.google.javascript.jscomp.TypedScopeCreator,232
Find no block!
com.google.javascript.jscomp.FunctionTypeBuilder,607
========
if(!contents.mayHaveNonEmptyReturns()&&!contents.mayHaveSingleThrow()){
returnType=typeRegistry.getNativeType(VOID_TYPE);
returnTypeInferred=false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(fnName!=null&&!contents.mayHaveSingleThrow()){
returnType=typeRegistry.getNativeType(VOID_TYPE);
returnTypeInferred=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if((returnType==null||returnType.isUnknownType())){
returnType=typeRegistry.getNativeType(VOID_TYPE);
returnTypeInferred=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(!contents.mayHaveNonEmptyReturns()&&(returnType==null||returnType.isUnknownType())){
returnType=typeRegistry.getNativeType(VOID_TYPE);
returnTypeInferred=true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
com.google.javascript.jscomp.FunctionTypeBuilder,608
com.google.javascript.jscomp.FunctionTypeBuilder,746
========
if(rootVar==null){
return rootVar.getScope();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(context.scope!=null){
return rootVar.getScope();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rootVar!=null&&!rootVar.isUnknownType()){
return rootVar.getScope();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rootVar!=null&&rootVar.isLocal()){
return rootVar.getScope();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
returnType=getNativeType(UNKNOWN_TYPE);
if(rootVar!=null){
return rootVar.getScope();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rootVar!=null&&rootVar.isGlobal()){
return rootVar.getScope();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(rootVar!=null&&!rootVar.isGlobal()){
return rootVar.getScope();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(fnName.isEmpty()||compiler.getCodingConvention().isExported(name)){
return ;
}
if(rootVar!=null){
return rootVar.getScope();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rootVar!=null&&!rootVar.isLocal()){
return rootVar.getScope();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(idx!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(end!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotIndex==-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(lastDot!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!fnName.endsWith(".prototype")){
return null;
}
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(!fnName.endsWith(".prototype")){
return null;
}
if(dotIndex==-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(dotIndex==Token.NAME){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotIndex!=Token.NAME){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(type!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lineLength!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pos!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(suffixStart!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dollarIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotIndex!=-1){
String rootVarName=name.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dot!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null&&rootVar.getPropertyScope()!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getPropertyScope().getSlot(fnName.substring(dotIndex+1));
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lastNonSlash!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(phBegin!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(endOfComment!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotIndex!=null){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!errorRoot.isName()){
return ;
}
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lastIndexOfDot!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextPos!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rootIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rootVar==null){
continue;
}
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(condition!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rootVarName=fnName.substring(0,dotIndex);
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dotIndex=fnName.indexOf('.',i+11);
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(startIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotIndex!=-1){
var=scope.getVar(maybeAssign.nameNode.getString());
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(INHERITS!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(indexStart!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(start!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rootVar.replaceChild(n,IR.string(rootVarName));
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sourceString!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(phEnd!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dot==-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(endIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rootVar.replaceChild(n,IR.string(rootVarName));
if(end!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(errorRoot!=null&&arg1.isNumber()&&arg1.getNext()==null){
dotIndex=(int)arg1.getDouble();
}else {
return n;
}
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rootVar.replaceChild(n,rootVarName);
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(indexOfDot!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotIndex!=-1){
String rootVarName=providedNames.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotIndex!=-1){
Preconditions.checkNotNull(rootVarName);
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotIndex!=-1){
Preconditions.checkNotNull(parentName.replacementNode);
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotIndex!=-1){
parentName.replacementNode.getParent().addChildAfter(replacementNode,parentName.replacementNode);
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotIndex!=-1){
Preconditions.checkNotNull(rootVarName);
Preconditions.checkNotNull(parentName.replacementNode);
parentName.replacementNode.getParent().addChildAfter(replacementNode,parentName.replacementNode);

String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotIndex==null){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(scope.vars.containsKey(rootVarName))return true;
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sourceName==null){
return ;
}
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeRegistry.declareType(sourceName,getNativeType(UNKNOWN_TYPE));
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeRegistry.overwriteDeclaredType(sourceName,returnType);
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
typeRegistry.overwriteDeclaredType(sourceName,returnType);
if(dotIndex==-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
typeRegistry.overwriteDeclaredType(sourceName,returnType);
if(dotIndex!=null){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
typeRegistry.overwriteDeclaredType(sourceName,returnType);
if(dotIndex==null){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotIndex!=-1){
String rootVarName=isInterface?fnName.substring(0,dotIndex):null;
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(dotIndex!=-1){
if(isInterface?returnType.toObjectType().getConstructor():typeRegistry.getNativeFunctionType(FUNCTION_FUNCTION_TYPE).getSource()==null){
isInterface?returnType.toObjectType().getConstructor():typeRegistry.getNativeFunctionType(FUNCTION_FUNCTION_TYPE).setSource(contents.getSourceNode());
}
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(limit!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotIndex!=-1){
String rootVarName=js.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(end==-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=revisedLine.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=name.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex==-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
int dotIndex=fnName.indexOf(".");
if(i!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rootVarName=fnName.substring(0,dotIndex);
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dotIndex=fnName.indexOf('.',i+11);
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=pattern.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=dotIndex==-1?fnName.indexOf("."):null;
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=IR.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=warning.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(lineLength!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(end!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return varsToRemove;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(idx!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=value.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(phEnd!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotIndex+PH_JS_SUFFIX.length()<sourceName.length()){
value=value.substring(nextPos);
}else {
return ;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=ctor.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=dotIndex==-1?null:fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
boolean dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!(rootVar!=null&&v.isGlobal())||(rootVar==null&&escapedVarNames.contains(rootVarName))){
return null;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=contents.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(index!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=spec.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=lValueName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(lastDot!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnName==null){
return null;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(!rootVar.endsWith(".prototype")){
return null;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnName==null){
return null;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex==-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
int dotIndex=fnName.indexOf(".");
if(dotIndex==Token.NAME){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=Token.NAME){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(type!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeTraversal.traverse(compiler,scope.getRootNode(),this);
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rootVar!=null){
for(String rootVarName : contents.getEscapedVarNames()){
Var scope.getVar(rootVarName)=scope.getVar(varName);
Preconditions.checkState(v.getScope()==scope);
v.markEscaped();
}
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=moduleName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(suffixStart!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(radix!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=line.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rootVarName.length()==0){
return ;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=input.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.cast(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(parentType!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(NEW!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=js.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dot!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null&&rootVar.getPropertyScope()!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getPropertyScope().getSlot(fnName.substring(dotIndex+1));
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return UNKNOWN;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return TRUE;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return FALSE;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=ns.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=curName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=wrapper.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=codePlaceholder.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return parent;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=null){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!errorRoot.isName()){
return ;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dollarIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=lhsString.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rootVar==null){
return false;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return s;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
if(!NodeUtil.isExprAssign(n)){
return false;
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
if(!n.getFirstChild().getFirstChild().isName()){
return false;
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(INHERITS!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getString().isEmpty()){
return ;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(lastIndexOfDot!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=(dotIndex&1)){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
int dotIndex=fnName.indexOf(".");
if(dotIndex==(dotIndex&1)){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int dotIndex=flags.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=qNameStr.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=stringValue.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(startIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnName.indexOf(sourceName,dotIndex)<0){
return -1;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=oldPseudoNameMap.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.get(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=reachingDef.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=s.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
char dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(scope.vars.containsKey(rootVarName))return true;
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnName==null||input.length()==0){
return input;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=input.indexOf(".");
if(startIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=slot.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=stringAsString.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(start!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(length!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rootVar.replaceChild(n,IR.string(rootVarName));
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex==null){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
Preconditions.checkArgument(n.isName()||n.isGetProp());
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
if(n.isName()){
return true;
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
if(rootVarName==null){
return false;
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
if(errorRoot!=null&&NodeUtil.isObjectLitKey(lValue,lValue.getParent())){
return false;
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=qName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.sourceName=qName;
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.isInterface=isExtern;
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.isInterface=fnName.getCodingConvention().isExported(rootVarName);
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.returnType=fnName.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=rootVar==null?null:fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dot==-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.string(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(errorRoot!=null&&arg1.isNumber()&&arg1.getNext()==null){
dotIndex=(int)arg1.getDouble();
}else {
return n;
}
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rootVar.replaceChild(n,rootVarName);
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=IR.indexOf(".");
if(index!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(errorRoot.isFunction()||parent.isVar()){
return ;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=node.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!hasNonEmptyReturns){
return ;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
addStubsForUndeclaredProperties(n,rootVarName,ref.node.getAncestor(2),ref.node.getParent());
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=globals.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnName.length()==0){
return null;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
int dotIndex=stringAsString.indexOf(".");
if(end!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rootVar.replaceChild(n,IR.string(rootVarName));
int dotIndex=stringAsString.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
int dotIndex=stringAsString.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rootVar.replaceChild(n,IR.string(rootVarName));
int dotIndex=fnName.indexOf(".");
if(end!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
int dotIndex=fnName.indexOf(".");
if(end!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rootVar.replaceChild(n,IR.string(rootVarName));
reportCodeChange();
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rootVar.replaceChild(n,IR.string(rootVarName));
int dotIndex=stringAsString.indexOf(".");
if(end!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
int dotIndex=stringAsString.indexOf(".");
if(end!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rootVar.replaceChild(n,IR.string(rootVarName));
reportCodeChange();
int dotIndex=stringAsString.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rootVar.replaceChild(n,IR.string(rootVarName));
reportCodeChange();
int dotIndex=fnName.indexOf(".");
if(end!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rootVar.replaceChild(n,IR.string(rootVarName));
reportCodeChange();
int dotIndex=stringAsString.indexOf(".");
if(end!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(getCfg().hasNode(parametersNode));
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(def.unknownDependencies){
return true;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compiler.getCodingConvention().isExported(rootVarName)){
return false;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(rootVarName)){
return false;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=lstring.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=isInterface?null:fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
n.getParent().replaceChild(n,rootVarName);
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=providedNames.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=affinityGraph.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return node;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=scope.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=pathPrefix.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.charAt(pathPrefix.length()-1)==File.separatorChar?fnName.indexOf("."):new File(fnName).getParent();
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(rootVarName==null){
return ;
}
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
fnName.declareType(rootVarName,getNativeType(UNKNOWN_TYPE));
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fnName.overwriteDeclaredType(rootVarName,returnType);
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(errorRoot.isGetProp()){
defineSlot(candidate,candidate.getParent(),getNativeType(NO_TYPE),false);
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=typeSystem.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setJSType(returnType);
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(errorRoot.isVar()){
if(n.getFirstChild()!=null){
n.getFirstChild().setJSType(returnType);
}
}else {
Preconditions.checkState(parent.isFunction());
parent.setJSType(varType);
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(n);
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=references.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
errorRoot.replaceChild(alias.node,IR.nullNode());
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
int dotIndex=node.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Sets.newLinkedHashSet().size()<=1){
return ;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=rootVar.isInstanceType()?fnName.indexOf("."):null;
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
if(!(scope.isGlobal()||s.getDepth()==1&&s.getRootNode()==n)){
return false;
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
boolean dotIndex=scope.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=literal.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!(rootVarName.equals(sourceName)&&sourceName.equals(sourceName))){
errorRoot.getFirstChild().setString(newPattern);
if(!"".equals(newFlags)){
subtree.getLastChild().setString(newFlags);
}else if(subtree.getChildCount()==2){
subtree.getLastChild().detachFromParent();
}
reportCodeChange();
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(pos!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(limit!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(n!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
if(lineCount!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int dotIndex=fnName.indexOf(".");
Preconditions.checkArgument(fnName.startsWith(LINEMAP_HEADER),"Expected %s",LINEMAP_HEADER);
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rootVar==null){
return ;
}
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(rootVarName);
int dotIndex=fnName.indexOf(".");
if(dotIndex!=-1){
String rootVarName=fnName.substring(0,dotIndex);
Var rootVar=scope.getVar(rootVarName);
if(rootVar!=null){
return rootVar.getScope();
}
}
return scope;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.SyntacticScopeCreator,137
UNKNOWN ASTNode type : catch (UnsupportedOperationException e) {
  violation("getString failed for" + Token.name(n.getType()),n);
}

UNKNOWN ASTNode type : catch (UnsupportedOperationException e) {
  violation("getString failed for" + Token.name(n.getType()),n);
}

UNKNOWN ASTNode type : catch (IllegalArgumentException ex) {
  t.report(n,MALFORMED_REGEXP,ex.getMessage());
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  compiler.report(t.makeError(n,INVALID_STYLE_ERROR,styleStr));
  return;
}

UNKNOWN ASTNode type : catch (NumberFormatException e) {
  return n;
}

UNKNOWN ASTNode type : catch (NumberFormatException e) {
  return n;
}

========
Preconditions.checkState(n.isFunction());
if(NodeUtil.isFunctionExpression(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
declareVar(n.getFirstChild());
if(NodeUtil.isFunctionExpression(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
Preconditions.checkState(n.isFunction());
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
Preconditions.checkState(NodeUtil.isFunctionExpression(n));
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
Preconditions.checkState(n.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(n));

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(!n.isName()){
return ;
}
if(NodeUtil.isFunctionExpression(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
Preconditions.checkState(n.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(n));
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
Preconditions.checkState(n.isFunction());
Preconditions.checkState(n.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(n));

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(!n.isName()){
return ;
}
if(NodeUtil.isFunctionExpression(n)){
Preconditions.checkState(n.isFunction());
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
Preconditions.checkState(NodeUtil.isFunctionExpression(n));
Preconditions.checkState(n.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(n));

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!n.isName()){
return ;
}
if(NodeUtil.isFunctionExpression(n)){
Preconditions.checkState(NodeUtil.isFunctionExpression(n));
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!n.isName()){
return ;
}
if(NodeUtil.isFunctionExpression(n)){
Preconditions.checkState(n.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(n));

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
Preconditions.checkState(n.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(n));
Preconditions.checkState(n.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(n));

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!n.isName()){
return ;
}
if(NodeUtil.isFunctionExpression(n)){
Preconditions.checkState(n.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(n));
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!n.isName()){
return ;
}
if(NodeUtil.isFunctionExpression(n)){
Preconditions.checkState(n.isFunction());
Preconditions.checkState(n.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(n));

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!n.isName()){
return ;
}
if(NodeUtil.isFunctionExpression(n)){
Preconditions.checkState(NodeUtil.isFunctionExpression(n));
Preconditions.checkState(n.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(n));

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!n.isName()){
return ;
}
if(NodeUtil.isFunctionExpression(n)){
Preconditions.checkState(n.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(n));
Preconditions.checkState(n.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(n));

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
if(NodeUtil.isFunctionExpression(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!n.isNew()){
return ;
}
if(NodeUtil.isFunctionExpression(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.referencesThis(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setString(coalescedVar.name);
if(NodeUtil.isFunctionExpression(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(NodeUtil.isFunctionExpression(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(compiler.getCodingConvention().isFunctionExpression(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isFunctionExpression(n)){
removeDeadExprStatementSafely(n);
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tryRemoveUnconditionalBranching(n);
if(NodeUtil.isFunctionExpression(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==null){
continue;
}
if(NodeUtil.isFunctionExpression(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isFunctionExpression(n)){
IR.name(EXTERN_OBJECT_PROPERTY_STRING).copyInformationFrom(n);
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isFunctionExpression(n)){
parent.replaceChild(n,IR.name(EXTERN_OBJECT_PROPERTY_STRING));
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isFunctionExpression(n)){
compiler.reportCodeChange();
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
IR.name(EXTERN_OBJECT_PROPERTY_STRING).copyInformationFrom(n);
parent.replaceChild(n,IR.name(EXTERN_OBJECT_PROPERTY_STRING));
compiler.reportCodeChange();

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.removeChild(parent);
if(NodeUtil.isFunctionExpression(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
parent.replaceChild(n,parent);
if(NodeUtil.isFunctionExpression(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
parent.removeChild(parent);
parent.replaceChild(n,parent);
if(NodeUtil.isFunctionExpression(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
parent=n;
if(NodeUtil.isFunctionExpression(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isEquivalentTo(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isFunctionExpression(n)){
n.removeChild(parent);
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
n.getParent().replaceChild(n,parent);
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
n.removeChild(parent);
n.getParent().replaceChild(n,parent);
compiler.reportCodeChange();

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
n.removeChild(parent);
n.getParent().replaceChild(n,parent);
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
n.removeChild(parent);
compiler.reportCodeChange();
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
n.removeChild(parent);
n.removeChild(parent);
n.getParent().replaceChild(n,parent);
compiler.reportCodeChange();

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
n.getParent().replaceChild(n,parent);
compiler.reportCodeChange();
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
n.getParent().replaceChild(n,parent);
n.removeChild(parent);
n.getParent().replaceChild(n,parent);
compiler.reportCodeChange();

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
compiler.reportCodeChange();
n.removeChild(parent);
n.getParent().replaceChild(n,parent);
compiler.reportCodeChange();

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
n.removeChild(parent);
n.getParent().replaceChild(n,parent);
compiler.reportCodeChange();
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
n.removeChild(parent);
n.getParent().replaceChild(n,parent);
n.removeChild(parent);
n.getParent().replaceChild(n,parent);
compiler.reportCodeChange();

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
n.removeChild(parent);
compiler.reportCodeChange();
n.removeChild(parent);
n.getParent().replaceChild(n,parent);
compiler.reportCodeChange();

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
n.getParent().replaceChild(n,parent);
compiler.reportCodeChange();
n.removeChild(parent);
n.getParent().replaceChild(n,parent);
compiler.reportCodeChange();

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isFunctionExpression(n)){
n.removeChild(parent);
n.getParent().replaceChild(n,parent);
compiler.reportCodeChange();
n.removeChild(parent);
n.getParent().replaceChild(n,parent);
compiler.reportCodeChange();

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.getFunctionParameters(n.getChildAtIndex(1)).isFunctionExpression(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getJSType(n.getFirstChild()).dereference().getConstructor().isFunctionExpression(n)){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.SyntacticScopeCreator,141
========
if(currentLine.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(output.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(name.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(elements.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nodes.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(qName.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(extraTracingStatistics.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(str.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(RENAME_PROPERTY_FUNCTION_NAME.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(file.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(revisedLine.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(closureEntryPoints.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(manifestName.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(functionName.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fileName.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(line.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(outputManifests.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(outputBundles.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(replaceStringsFunctionDescriptions.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(namedGroups.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(string.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(aliasableStrings.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sourceName.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nameReferenceGraphPath.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nameReferenceReportPath.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(charset.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(markerStack.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(exposedProperties.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(translationsFile.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(varName.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fnName.isEmpty()){
Preconditions.checkState(parent.isFunction());
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(fnName.isEmpty()){
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fnName.isEmpty()){
Preconditions.checkState(parent.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fnName.isEmpty()){
Preconditions.checkState(parent.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fnName.isEmpty()){
Preconditions.checkState(parent.isFunction());
Preconditions.checkState(parent.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fnName.isEmpty()){
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));
Preconditions.checkState(parent.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fnName.isEmpty()){
Preconditions.checkState(parent.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));
Preconditions.checkState(parent.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));

return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(initCodeSource.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(desc.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(param.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(stripTypes.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(reportFunctionExitName.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(typesToSkip.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(flags.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(deprecationInfo.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(references.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(appNameSetter.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(innerValues.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(reportFunctionName.isEmpty()){
return ;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FUNCTION :
declareVar(n.getFirstChild());
if(NodeUtil.isFunctionExpression(n)){
return ;
}
String fnName=n.getFirstChild().getString();
if(fnName.isEmpty()){
return ;
}



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.CATCH :

case Token.FUNCTION :
if(NodeUtil.isFunctionExpression(n)){
return ;
}
String fnName=n.getFirstChild().getString();
if(fnName.isEmpty()){
return ;
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.VOID :

case Token.FUNCTION :
if(NodeUtil.isFunctionExpression(n)){
return ;
}
String fnName=n.getFirstChild().getString();
if(fnName.isEmpty()){
return ;
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COUNT THESE===> Subject [_name=closure, _id=25, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeInferenceTest testBackwardsInferenceNew
TESTING : com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_5/closure/closure_25_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
  - com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
