java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 7d903ca5 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 7d903ca5:6e3ea685..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Math-81b........................................ OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 1
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5
PURIFY IS TRUE
=================================================
Project : math_81	start : 19/10/22 08:29

readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/math/81.txtTESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
IN COMMENT TEST CASE: org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308

# FAILING TESTS: 1
TIMEOUT : 18000000
===========
locations= [<org.apache.commons.math.linear.ArrayRealVector,77>, <org.apache.commons.math.linear.ArrayRealVector,78>, <org.apache.commons.math.linear.ArrayRealVector,79>, <org.apache.commons.math.linear.EigenDecompositionImpl,643>, <org.apache.commons.math.linear.EigenDecompositionImpl,644>, <org.apache.commons.math.linear.EigenDecompositionImpl,645>, <org.apache.commons.math.linear.EigenDecompositionImpl,646>, <org.apache.commons.math.linear.EigenDecompositionImpl,647>, <org.apache.commons.math.linear.EigenDecompositionImpl,648>, <org.apache.commons.math.linear.EigenDecompositionImpl,649>, <org.apache.commons.math.linear.EigenDecompositionImpl,651>, <org.apache.commons.math.linear.EigenDecompositionImpl,654>, <org.apache.commons.math.linear.EigenDecompositionImpl,657>, <org.apache.commons.math.linear.EigenDecompositionImpl,826>, <org.apache.commons.math.linear.EigenDecompositionImpl,827>, <org.apache.commons.math.linear.EigenDecompositionImpl,828>, <org.apache.commons.math.linear.EigenDecompositionImpl,829>, <org.apache.commons.math.linear.EigenDecompositionImpl,830>, <org.apache.commons.math.linear.EigenDecompositionImpl,833>, <org.apache.commons.math.linear.EigenDecompositionImpl,839>, <org.apache.commons.math.linear.EigenDecompositionImpl,842>, <org.apache.commons.math.linear.EigenDecompositionImpl,845>, <org.apache.commons.math.linear.EigenDecompositionImpl,846>, <org.apache.commons.math.linear.EigenDecompositionImpl,847>, <org.apache.commons.math.linear.EigenDecompositionImpl,848>, <org.apache.commons.math.linear.EigenDecompositionImpl,849>, <org.apache.commons.math.linear.EigenDecompositionImpl,850>, <org.apache.commons.math.linear.EigenDecompositionImpl,851>, <org.apache.commons.math.linear.EigenDecompositionImpl,854>, <org.apache.commons.math.linear.EigenDecompositionImpl,855>, <org.apache.commons.math.linear.EigenDecompositionImpl,856>, <org.apache.commons.math.linear.EigenDecompositionImpl,859>, <org.apache.commons.math.linear.EigenDecompositionImpl,860>, <org.apache.commons.math.linear.EigenDecompositionImpl,863>, <org.apache.commons.math.linear.EigenDecompositionImpl,864>, <org.apache.commons.math.linear.EigenDecompositionImpl,865>, <org.apache.commons.math.linear.EigenDecompositionImpl,866>, <org.apache.commons.math.linear.EigenDecompositionImpl,867>, <org.apache.commons.math.linear.EigenDecompositionImpl,868>, <org.apache.commons.math.linear.EigenDecompositionImpl,869>, <org.apache.commons.math.linear.EigenDecompositionImpl,873>, <org.apache.commons.math.linear.EigenDecompositionImpl,874>, <org.apache.commons.math.linear.EigenDecompositionImpl,875>, <org.apache.commons.math.linear.EigenDecompositionImpl,877>, <org.apache.commons.math.linear.EigenDecompositionImpl,878>, <org.apache.commons.math.linear.EigenDecompositionImpl,880>, <org.apache.commons.math.linear.EigenDecompositionImpl,883>, <org.apache.commons.math.linear.EigenDecompositionImpl,885>, <org.apache.commons.math.linear.EigenDecompositionImpl,886>, <org.apache.commons.math.linear.EigenDecompositionImpl,887>, <org.apache.commons.math.linear.EigenDecompositionImpl,888>, <org.apache.commons.math.linear.EigenDecompositionImpl,893>, <org.apache.commons.math.linear.EigenDecompositionImpl,894>, <org.apache.commons.math.linear.EigenDecompositionImpl,898>, <org.apache.commons.math.linear.EigenDecompositionImpl,936>, <org.apache.commons.math.linear.EigenDecompositionImpl,937>, <org.apache.commons.math.linear.EigenDecompositionImpl,940>, <org.apache.commons.math.linear.EigenDecompositionImpl,941>, <org.apache.commons.math.linear.EigenDecompositionImpl,942>, <org.apache.commons.math.linear.EigenDecompositionImpl,946>, <org.apache.commons.math.linear.EigenDecompositionImpl,951>, <org.apache.commons.math.linear.EigenDecompositionImpl,952>, <org.apache.commons.math.linear.EigenDecompositionImpl,953>, <org.apache.commons.math.linear.EigenDecompositionImpl,954>, <org.apache.commons.math.linear.EigenDecompositionImpl,955>, <org.apache.commons.math.linear.EigenDecompositionImpl,960>, <org.apache.commons.math.linear.EigenDecompositionImpl,962>, <org.apache.commons.math.linear.EigenDecompositionImpl,963>, <org.apache.commons.math.linear.EigenDecompositionImpl,964>, <org.apache.commons.math.linear.EigenDecompositionImpl,965>, <org.apache.commons.math.linear.EigenDecompositionImpl,970>, <org.apache.commons.math.linear.EigenDecompositionImpl,973>, <org.apache.commons.math.linear.EigenDecompositionImpl,977>, <org.apache.commons.math.linear.EigenDecompositionImpl,992>, <org.apache.commons.math.linear.EigenDecompositionImpl,995>, <org.apache.commons.math.linear.EigenDecompositionImpl,996>, <org.apache.commons.math.linear.EigenDecompositionImpl,998>, <org.apache.commons.math.linear.EigenDecompositionImpl,1003>, <org.apache.commons.math.linear.EigenDecompositionImpl,1005>, <org.apache.commons.math.linear.EigenDecompositionImpl,1011>, <org.apache.commons.math.linear.EigenDecompositionImpl,1012>, <org.apache.commons.math.linear.EigenDecompositionImpl,1014>, <org.apache.commons.math.linear.EigenDecompositionImpl,1043>, <org.apache.commons.math.linear.EigenDecompositionImpl,1047>, <org.apache.commons.math.linear.EigenDecompositionImpl,1049>, <org.apache.commons.math.linear.EigenDecompositionImpl,1052>, <org.apache.commons.math.linear.EigenDecompositionImpl,1053>, <org.apache.commons.math.linear.EigenDecompositionImpl,1066>, <org.apache.commons.math.linear.EigenDecompositionImpl,1071>, <org.apache.commons.math.linear.EigenDecompositionImpl,1074>, <org.apache.commons.math.linear.EigenDecompositionImpl,1077>, <org.apache.commons.math.linear.EigenDecompositionImpl,1080>, <org.apache.commons.math.linear.EigenDecompositionImpl,1082>, <org.apache.commons.math.linear.EigenDecompositionImpl,1083>, <org.apache.commons.math.linear.EigenDecompositionImpl,1084>, <org.apache.commons.math.linear.EigenDecompositionImpl,1093>, <org.apache.commons.math.linear.EigenDecompositionImpl,1095>, <org.apache.commons.math.linear.EigenDecompositionImpl,1098>, <org.apache.commons.math.linear.EigenDecompositionImpl,1100>, <org.apache.commons.math.linear.EigenDecompositionImpl,1101>, <org.apache.commons.math.linear.EigenDecompositionImpl,1118>, <org.apache.commons.math.linear.EigenDecompositionImpl,1120>, <org.apache.commons.math.linear.EigenDecompositionImpl,1132>, <org.apache.commons.math.linear.EigenDecompositionImpl,1145>, <org.apache.commons.math.linear.EigenDecompositionImpl,1157>, <org.apache.commons.math.linear.EigenDecompositionImpl,1158>, <org.apache.commons.math.linear.EigenDecompositionImpl,1159>, <org.apache.commons.math.linear.EigenDecompositionImpl,1160>, <org.apache.commons.math.linear.EigenDecompositionImpl,1161>, <org.apache.commons.math.linear.EigenDecompositionImpl,1162>, <org.apache.commons.math.linear.EigenDecompositionImpl,1163>, <org.apache.commons.math.linear.EigenDecompositionImpl,1167>, <org.apache.commons.math.linear.EigenDecompositionImpl,1168>, <org.apache.commons.math.linear.EigenDecompositionImpl,1169>, <org.apache.commons.math.linear.EigenDecompositionImpl,1170>, <org.apache.commons.math.linear.EigenDecompositionImpl,1172>, <org.apache.commons.math.linear.EigenDecompositionImpl,1175>, <org.apache.commons.math.linear.EigenDecompositionImpl,1176>, <org.apache.commons.math.linear.EigenDecompositionImpl,1177>, <org.apache.commons.math.linear.EigenDecompositionImpl,1179>, <org.apache.commons.math.linear.EigenDecompositionImpl,1180>, <org.apache.commons.math.linear.EigenDecompositionImpl,1183>, <org.apache.commons.math.linear.EigenDecompositionImpl,1186>, <org.apache.commons.math.linear.EigenDecompositionImpl,1187>, <org.apache.commons.math.linear.EigenDecompositionImpl,1188>, <org.apache.commons.math.linear.EigenDecompositionImpl,1190>, <org.apache.commons.math.linear.EigenDecompositionImpl,1194>, <org.apache.commons.math.linear.EigenDecompositionImpl,1197>, <org.apache.commons.math.linear.EigenDecompositionImpl,1198>, <org.apache.commons.math.linear.EigenDecompositionImpl,1199>, <org.apache.commons.math.linear.EigenDecompositionImpl,1201>, <org.apache.commons.math.linear.EigenDecompositionImpl,1202>, <org.apache.commons.math.linear.EigenDecompositionImpl,1205>, <org.apache.commons.math.linear.EigenDecompositionImpl,1208>, <org.apache.commons.math.linear.EigenDecompositionImpl,1209>, <org.apache.commons.math.linear.EigenDecompositionImpl,1210>, <org.apache.commons.math.linear.EigenDecompositionImpl,1212>, <org.apache.commons.math.linear.EigenDecompositionImpl,1216>, <org.apache.commons.math.linear.EigenDecompositionImpl,1218>, <org.apache.commons.math.linear.EigenDecompositionImpl,1230>, <org.apache.commons.math.linear.EigenDecompositionImpl,1231>, <org.apache.commons.math.linear.EigenDecompositionImpl,1232>, <org.apache.commons.math.linear.EigenDecompositionImpl,1233>, <org.apache.commons.math.linear.EigenDecompositionImpl,1234>, <org.apache.commons.math.linear.EigenDecompositionImpl,1235>, <org.apache.commons.math.linear.EigenDecompositionImpl,1238>, <org.apache.commons.math.linear.EigenDecompositionImpl,1253>, <org.apache.commons.math.linear.EigenDecompositionImpl,1254>, <org.apache.commons.math.linear.EigenDecompositionImpl,1255>, <org.apache.commons.math.linear.EigenDecompositionImpl,1256>, <org.apache.commons.math.linear.EigenDecompositionImpl,1257>, <org.apache.commons.math.linear.EigenDecompositionImpl,1258>, <org.apache.commons.math.linear.EigenDecompositionImpl,1259>, <org.apache.commons.math.linear.EigenDecompositionImpl,1260>, <org.apache.commons.math.linear.EigenDecompositionImpl,1261>, <org.apache.commons.math.linear.EigenDecompositionImpl,1263>, <org.apache.commons.math.linear.EigenDecompositionImpl,1273>, <org.apache.commons.math.linear.EigenDecompositionImpl,1274>, <org.apache.commons.math.linear.EigenDecompositionImpl,1275>, <org.apache.commons.math.linear.EigenDecompositionImpl,1276>, <org.apache.commons.math.linear.EigenDecompositionImpl,1278>, <org.apache.commons.math.linear.EigenDecompositionImpl,1279>, <org.apache.commons.math.linear.EigenDecompositionImpl,1280>, <org.apache.commons.math.linear.EigenDecompositionImpl,1281>, <org.apache.commons.math.linear.EigenDecompositionImpl,1282>, <org.apache.commons.math.linear.EigenDecompositionImpl,1283>, <org.apache.commons.math.linear.EigenDecompositionImpl,1284>, <org.apache.commons.math.linear.EigenDecompositionImpl,1285>, <org.apache.commons.math.linear.EigenDecompositionImpl,1288>, <org.apache.commons.math.linear.EigenDecompositionImpl,1289>, <org.apache.commons.math.linear.EigenDecompositionImpl,1290>, <org.apache.commons.math.linear.EigenDecompositionImpl,1291>, <org.apache.commons.math.linear.EigenDecompositionImpl,1292>, <org.apache.commons.math.linear.EigenDecompositionImpl,1293>, <org.apache.commons.math.linear.EigenDecompositionImpl,1294>, <org.apache.commons.math.linear.EigenDecompositionImpl,1299>, <org.apache.commons.math.linear.EigenDecompositionImpl,1300>, <org.apache.commons.math.linear.EigenDecompositionImpl,1301>, <org.apache.commons.math.linear.EigenDecompositionImpl,1302>, <org.apache.commons.math.linear.EigenDecompositionImpl,1303>, <org.apache.commons.math.linear.EigenDecompositionImpl,1304>, <org.apache.commons.math.linear.EigenDecompositionImpl,1305>, <org.apache.commons.math.linear.EigenDecompositionImpl,1306>, <org.apache.commons.math.linear.EigenDecompositionImpl,1308>, <org.apache.commons.math.linear.EigenDecompositionImpl,1309>, <org.apache.commons.math.linear.EigenDecompositionImpl,1310>, <org.apache.commons.math.linear.EigenDecompositionImpl,1311>, <org.apache.commons.math.linear.EigenDecompositionImpl,1312>, <org.apache.commons.math.linear.EigenDecompositionImpl,1313>, <org.apache.commons.math.linear.EigenDecompositionImpl,1314>, <org.apache.commons.math.linear.EigenDecompositionImpl,1316>, <org.apache.commons.math.linear.EigenDecompositionImpl,1317>, <org.apache.commons.math.linear.EigenDecompositionImpl,1319>, <org.apache.commons.math.linear.EigenDecompositionImpl,1330>, <org.apache.commons.math.linear.EigenDecompositionImpl,1331>, <org.apache.commons.math.linear.EigenDecompositionImpl,1332>, <org.apache.commons.math.linear.EigenDecompositionImpl,1334>, <org.apache.commons.math.linear.EigenDecompositionImpl,1335>, <org.apache.commons.math.linear.EigenDecompositionImpl,1336>, <org.apache.commons.math.linear.EigenDecompositionImpl,1337>]
======================org.apache.commons.math.linear.ArrayRealVector,77
Find no block!
org.apache.commons.math.linear.ArrayRealVector,78
========
data=data.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
data=value.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.d=point.clone();
data=d.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=target.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=weights.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=startPoint.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=mean.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mean.length!=standardDeviation.length){
throw MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}",mean.length,standardDeviation.length);
}
data=d.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.d=standardDeviation.clone();
data=d.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.d=observations.clone();
data=d.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d==null){
throw new NullPointerException();
}
data=d.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d.length==0){
throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}
data=d.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(d==null){
throw new NullPointerException();
}
if(d.length==0){
throw MathRuntimeException.createIllegalArgumentException("vector must have at least one element");
}
data=d.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
data=initialGuess.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=v.data.clone();
data=d.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
data=steepestDescent.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(d,0,data,0,v1.length);
data=d.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(d,0,data,v1.length,v2.length);
data=d.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(v2.data,0,data,v1.length,v2.data.length);
data=d.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(v1.data,0,data,0,v1.data.length);
data=d.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(d,0,data,v1.data.length,v2.length);
data=d.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(v2.data,0,data,v1.data.length,v2.data.length);
data=d.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.length);
data=d.clone();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.ArrayRealVector,79
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,643
========
case 2 :

default :
 final double[] range=eigenvaluesRange(begin,n);
 final double oneFourth=0.25*(3*range[0]+range[1]);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,644
========
if(pingPong<getDomain(n,begin,getSampleSize())[0]){
TOLERANCE=0.0;
}else if(x>=domain[1]){
ret=1.0;
}else {
ret=innerCumulativeProbability(domain[0],x,1,n,begin,getSampleSize());
}
default :
 final double[] range=eigenvaluesRange(begin,n);
 final double oneFourth=0.25*(3*range[0]+range[1]);
 final int oneFourthCount=countEigenValues(oneFourth,begin,n);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 2 :

default :
 final double[] range=eigenvaluesRange(begin,n);
 final double oneFourth=0.25*(3*range[0]+range[1]);
 final int oneFourthCount=countEigenValues(oneFourth,begin,n);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,645
========
 final double oneFourth=0.5*(3*range[0]+range[1]);
 final int oneFourthCount=countEigenValues(oneFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double oneFourth=0.25*(3*range[0]+range[1]);
 final long oneFourthCount=countEigenValues(oneFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math.linear.EigenDecompositionImpl,646
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
 final int oneFourthCount=countEigenValues(oneFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(threeFourth,begin,n);
 final int oneFourthCount=countEigenValues(oneFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int oneFourthCount=countEigenValues(threeFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
range=new double[n];
 final int oneFourthCount=countEigenValues(oneFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oneFourthCount<getDomain(n,begin,getSampleSize())[0]){
TOLERANCE=1.0;
}else if(x>domain[1]){
ret=0.0;
}else {
ret=innerCumulativeProbability(domain[1],x,-1,n,begin,getSampleSize());
}
 final int oneFourthCount=countEigenValues(oneFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oneFourthCount<getDomain(n,begin,getSampleSize())[0]){
TOLERANCE=0.0;
}else if(x>=domain[1]){
ret=1.0;
}else {
ret=innerCumulativeProbability(domain[0],x,1,n,begin,getSampleSize());
}
 final int oneFourthCount=countEigenValues(oneFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final long oneFourthCount=countEigenValues(oneFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math.linear.EigenDecompositionImpl,647
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(oneFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
incrementIterationsCounter();
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",n);
}
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",n);
}
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final long chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
chooseLeft=new double[n][n];
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(n==2){
return new double[]{range[0],yval[1]};
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(threeFourthCount<2){
throw new MathException("the bandwidth must be large enough to "+"accomodate at least 2 points. There are {0} ",n,2.0/n,threeFourth);
}
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(n)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2 plus one",f.length);
}
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
checkIndex(oneFourthCount);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
checkIndex(oneFourthCount+n-1);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
checkIndex(oneFourthCount+n-1);
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
work[0]=0.0;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
work[0]=0.0;
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(x.length<3){
throw MathRuntimeException.createIllegalArgumentException("{0} points are required, got only {1}",3,x.length);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
range[0]=0.5*(work[0]+f[n]);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
range[n>>1]=work[n>>1];
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
range[n>>1]=work[n>>1];
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(columns-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(blockSize-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,begin);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(work,0,work,0,begin);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
range[0]=0.0;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
range[n>>1]=2.0*work[n>>1];
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
range[0]=0.0;
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
range[n>>1]=2.0*work[n>>1];
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
range[0]=0.0;
range[n>>1]=2.0*work[n>>1];
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
range[0]=0.0;
range[n>>1]=2.0*work[n>>1];
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
verifyInterval(minPivot,TOLERANCE);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
++n;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final long threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(work,begin,new double[n],0,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Arrays.sort(new double[n]);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(TOLERANCE<1){
return new double[n][0];
}
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,begin,new double[n],0,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(new double[n]);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,begin,new double[n],0,n);
Arrays.sort(new double[n]);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(work,begin,new double[n],0,n);
Arrays.sort(new double[n]);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,648
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(threeFourthCount)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2",n);
}
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(threeFourthCount<1){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",n);
}
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(n)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2 plus one",f.length);
}
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(threeFourthCount<0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=new double[threeFourthCount][n];
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=m?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=n?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final int lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
work[0]=0.0;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oneFourthCount<getDomain(n,begin,getSampleSize())[0]){
lambda=1.0;
}else if(x>domain[1]){
ret=0.0;
}else {
ret=innerCumulativeProbability(domain[1],x,-1,n,begin,getSampleSize());
}
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedV=MatrixUtils.createRealMatrix(n,n);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(oneFourthCount<getDomain(n,begin,getSampleSize())[0]){
lambda=0.0;
}else if(x>=domain[1]){
ret=1.0;
}else {
ret=innerCumulativeProbability(domain[0],x,1,n,begin,getSampleSize());
}
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
verifyInterval(threeFourth,TOLERANCE);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=i0?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=n0?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
sigma=(pingPong==n)?0:-range[4*n0-2];
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
sigmaLow=0;
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(work,begin,new double[n],0,n);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Arrays.sort(new double[n]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(TOLERANCE<1){
return new double[n][0];
}
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,begin,new double[n],0,n);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(new double[n]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,begin,new double[n],0,n);
Arrays.sort(new double[n]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(work,begin,new double[n],0,n);
Arrays.sort(new double[n]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=lambdaFractional?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=MIN_VALUE?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final long lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final long threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(n==1){
range[0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
new double[n][0]=0.5*(work[0]+f[n]);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
new double[n][n>>1]=work[n>>1];
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(threeFourthCount)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2",n);
}
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,649
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=i0?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=n0?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
sigmaLow=0;
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==2){
return new double[]{range[0],yval[1]};
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((int)(minPivot*n)<2){
throw new MathException("the bandwidth must be large enough to "+"accomodate at least 2 points. There are {0} ",n,2.0/n,minPivot);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",n);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",n);
}
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
work[0]=0.5*(range[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n][0]=0.5*(range[0]+f[n]);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n][n>>1]=range[n>>1];
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=lambdaFractional?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=MIN_VALUE?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final long lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=TOLERANCE*(y+1)/(2*lambda);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minPivot<-lambda&&n==0){
TOLERANCE=lambda+y;
break;
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin1==minPivot){
tau=0.5*dMin1;
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-9;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin1==minPivot){
tau=0.5*dMin1;
}
tType=-9;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tau>TOLERANCE||x<-lambda){
continue;
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-6;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-6;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
TOLERANCE=TOLERANCE*a2;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
if(TOLERANCE<minPivot){
lambda=TOLERANCE*(1-Math.sqrt(a2))/(1+a2);
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=tau-(TOLERANCE*t)/(3*(lambda+oneFourthCount*(TOLERANCE+1)));
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minPivot<lambda){
TOLERANCE=lambda+y;
break;
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
if(TOLERANCE>(TOLERANCE+TOLERANCE)){
TOLERANCE=Math.min(s,a2-(b1+b2));
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-3;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!FastFourierTransformer.isPowerOf2(n)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2",n);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=m?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=n?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final int lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=0.0;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[0]=0.0;
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(TWO_PI-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
verifyInterval(TOLERANCE,minPivot);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
if(minPivot==0){
return ;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
flipIfWarranted(n,2);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
initialSplits(n);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lambda=0;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
if(minPivot==0){
return ;
}
flipIfWarranted(n,2);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
if(minPivot==0){
return ;
}
initialSplits(n);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
flipIfWarranted(n,2);
initialSplits(n);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
if(minPivot==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
cachedV=MatrixUtils.createRealMatrix(n,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!FastFourierTransformer.isPowerOf2(n)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2",n);
}
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,651
========
processGeneralBlock(n);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=lambdaFractional?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=MIN_VALUE?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final long lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
oneFourthCount=TOLERANCE<0?1:0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minPivot<-tau&&oneFourthCount==0){
TOLERANCE=lambda+y;
break;
}
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
work[4*oneFourthCount-3-pingPong]=0.0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=i0?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=n0?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=(n==n)?0:-range[4*n0-2];
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigmaLow=0;
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=chooseLeft?range[0]:range[1];
if(n<0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=chooseLeft?range[0]:range[1];
lambda=TOLERANCE*((2*TOLERANCE+1)/(6*lambda)-1);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minPivot<tau){
TOLERANCE=lambda+y;
break;
}
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin1==minPivot){
lambda=0.5*dMin1;
}
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-9;
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=chooseLeft?range[0]:range[1];
if(!isStrictlyIncreasing(work)){
throw MathRuntimeException.createIllegalArgumentException("knot values must be strictly increasing");
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
this.n=knots.length-1;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
this.work=new double[n+1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=chooseLeft?range[0]:range[1];
System.arraycopy(work,0,this.knots,0,n+1);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=chooseLeft?range[0]:range[1];
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("invalid number of elements {0} (must be positive)",n);
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=m?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=n?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
lambda=TOLERANCE*a2;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
if(lambda<minPivot){
TOLERANCE=TOLERANCE*(1-Math.sqrt(a2))/(1+a2);
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-6;
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-6;
 final double lambda=chooseLeft?range[0]:range[1];
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=chooseLeft?range[0]:range[1];
if(TOLERANCE>(TOLERANCE+TOLERANCE)){
lambda=Math.min(s,a2-(b1+b2));
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-3;
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=chooseLeft?range[0]:range[1];
n=Math.max((int)(Math.min(4,Math.pow(TOLERANCE/TOLERANCE,0.5/abscissas.length))*n),n+1);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(minPivot==0){
return ;
}
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
flipIfWarranted(n,2);
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=chooseLeft?range[0]:range[1];
tType=0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(minPivot==0){
return ;
}
flipIfWarranted(n,2);
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=chooseLeft?range[0]:range[1];
tType=0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(minPivot==0){
return ;
}
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=chooseLeft?range[0]:range[1];
tType=0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
flipIfWarranted(n,2);
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=chooseLeft?range[0]:range[1];
tType=0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(minPivot==0){
return ;
}
flipIfWarranted(n,2);
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(oneFourthCount==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
 final double lambda=chooseLeft?range[0]:range[1];
if((n!=sample2.length)||(n<1)){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same positive length ({0} and {1})",n,sample2.length);
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==oneFourthCount)||(k==0)){
return 1;
}
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((oneFourthCount==1)||(k==n-1)){
return n;
}
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==oneFourthCount)||(k==0)){
return 1.0;
}
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedV=MatrixUtils.createRealMatrix(n,n);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math.linear.EigenDecompositionImpl,654
========
dN2=0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("invalid number of elements {0} (must be positive)",n);
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
checkIndex(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=null;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n++;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(minPivot==0){
return ;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
flipIfWarranted(n,2);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(minPivot==0){
return ;
}
flipIfWarranted(n,2);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(minPivot==0){
return ;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
flipIfWarranted(n,2);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(minPivot==0){
return ;
}
flipIfWarranted(n,2);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*p;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=0.0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dest.n=source.n;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
range[4*oneFourthCount-3-pingPong]=0.0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
System.arraycopy(work,0,work,0,n);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
oneFourthCount=cachedVt.getRowDimension();
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=Math.max((int)(Math.min(4,Math.pow(TOLERANCE/TOLERANCE,0.5/abscissas.length))*n),n+1);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work=new double[Math.min(oneFourthCount,begin)];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work=new double[Math.min(oneFourthCount,begin)];
cachedVt=null;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
cachedVt=computeCovarianceMatrix(cachedVt,chooseLeft);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resetEvaluations();
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin1==minPivot){
tau=0.5*dMin1;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-9;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin1==minPivot){
tau=0.5*dMin1;
}
tType=-9;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n==oneFourthCount)||(k==0)){
return 1;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((oneFourthCount==1)||(k==n-1)){
return n;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==oneFourthCount)||(k==0)){
return 1.0;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=range[4*oneFourthCount+pingPong]-minPivot;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin1=-range[4*oneFourthCount+pingPong];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=range[4*oneFourthCount+pingPong]-minPivot;
dMin1=-range[4*oneFourthCount+pingPong];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
range[oneFourthCount+1]=TOLERANCE;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
range[oneFourthCount+2]=TOLERANCE;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
oneFourthCount+=6;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
range[oneFourthCount+1]=TOLERANCE;
range[oneFourthCount+2]=TOLERANCE;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
range[oneFourthCount+10]=TOLERANCE;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
range[oneFourthCount+5]=minPivot*TOLERANCE;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
oneFourthCount-=6;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
range[oneFourthCount+10]=TOLERANCE;
range[oneFourthCount+5]=minPivot*TOLERANCE;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lowerSpectra=Math.min(lowerSpectra,lambda);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
range[oneFourthCount+oneFourthCount-1]=dN2+eMin;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lowerSpectra=Math.min(lowerSpectra,lambda);
range[oneFourthCount+oneFourthCount-1]=dN2+eMin;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
oneFourthCount=TOLERANCE<0?1:0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minPivot<-tau&&oneFourthCount==0){
TOLERANCE=lambda+y;
break;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE*a2;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<minPivot){
TOLERANCE=TOLERANCE*(1-Math.sqrt(a2))/(1+a2);
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-6;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tType=-6;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[oneFourthCount-2]=dN1+work[oneFourthCount];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[oneFourthCount]=work[oneFourthCount+2]*(work[j4p2]/work[j4-2]);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=Math.min(dMin,tau);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[oneFourthCount+2]=tau;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[oneFourthCount-2]=dN1+work[oneFourthCount];
work[oneFourthCount+2]=tau;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(TOLERANCE>(TOLERANCE+TOLERANCE)){
TOLERANCE=Math.min(s,a2-(b1+b2));
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-3;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[oneFourthCount-2]=dN2+work[oneFourthCount];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lambda=work[oneFourthCount+2]*(dN2/work[oneFourthCount-2])-minPivot;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,lambda);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[oneFourthCount-2]=dN2+work[oneFourthCount];
work[oneFourthCount]=work[oneFourthCount+2]*(work[j4p2]/work[j4-2]);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[oneFourthCount-2]=dN2+work[oneFourthCount];
dMin=Math.min(dMin,lambda);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[oneFourthCount]=work[oneFourthCount+2]*(work[j4p2]/work[j4-2]);
dMin=Math.min(dMin,lambda);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[oneFourthCount-2]=dN2+work[oneFourthCount];
work[oneFourthCount]=work[oneFourthCount+2]*(work[j4p2]/work[j4-2]);
dMin=Math.min(dMin,lambda);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE*((2*TOLERANCE+1)/(6*lambda)-1);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minPivot<tau){
TOLERANCE=lambda+y;
break;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,657
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (OptimizationException oe) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (OptimizationException oe) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (OptimizationException oe) {
  optima[i]=null;
}

========
for(int i=0;i<=n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=oneFourthCount;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=oneFourthCount;i<=n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=k;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<m;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<length;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work=new double[n];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<order;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<dimension;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<virtualSize;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<l;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<stages;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rank;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nRows;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<binCount;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<iHeight;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<cols;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nCols;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<row;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yRow+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
z*=-work[6*i+2];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nSteps;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<N;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nvars;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount++;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<highLength;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=gamma+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<m;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=xJ+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
z*=-work[6*i-1];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<m;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<degree;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<col;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<j;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=j;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nSum;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<lowLength;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<ncols;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nrows;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<microsphereElements;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n+i)>internalArray.length){
expandTo(startIndex+i);
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=i;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<k;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rows;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<halfN;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<pos;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<size;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<max;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<length;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<rows;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<0){
i=-i-2;
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<index;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<solvedCols;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
++oneFourthCount;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<solvedCols;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE-TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=ypk+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++oneFourthCount;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<endRow;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<=n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<outCols;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<n;++i){
realEigenvalues[begin+i]=gamma+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<n;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rows;++i){
realEigenvalues[begin+i]=gamma+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rows;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=gamma+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<rows;++i){
realEigenvalues[begin+i]=gamma+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<rows;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<n;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=gamma+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rows;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=gamma+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<rows;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=gamma+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN2=work[pingPong];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN2=work[pingPong];
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=oneFourthCount;i<order;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<endRow;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=endRow;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<=endRow;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<solvedCols;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=factor+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
subVector[d]=i;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<endColumn;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[j]=realEigenvalues[i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
--realEigenvalues.length-1;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[j]=realEigenvalues[i];
--realEigenvalues.length-1;

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(realEigenvalues);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Arrays.sort(realEigenvalues);
for(int i=0;i<j;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<len;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=normalizedSum+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
qMax=Math.max(diagMax,work[i]+work[i+2]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eMin=Math.min(offDiagMin,work[i+2]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
bDecrementData[j]=lambda*TOLERANCE;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
multistep[i-1]=realEigenvalues;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=nSteps;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<crossoverIndex;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
yEnd[i]=y0[i]+lambda*f[0][i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
tmp=luMax[i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
luCol[i]=TOLERANCE;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
tmp=luMax[i];
luCol[i]=TOLERANCE;

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
power*=TOLERANCE;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<iEnd;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE/=realEigenvalues[oneFourthCount];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
d[i]=y[i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
if(Math.abs(lambda-imagEigenvalues[oneFourthCount])<TOLERANCE){
nearest=oneFourthCount;
min_dist=Math.abs(lambda-imagEigenvalues[oneFourthCount]);
}
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
d[i]=y[i];
if(Math.abs(lambda-imagEigenvalues[oneFourthCount])<TOLERANCE){
nearest=oneFourthCount;
min_dist=Math.abs(lambda-imagEigenvalues[oneFourthCount]);
}

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nM1;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<maxIter;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<lastNaN;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<end;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues=imagEigenvalues;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues=imagEigenvalues;
for(int i=0;i<=n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=coeff1+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot1+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<absN;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=cosT+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
omegaImaginaryForward[i]=omegaImaginaryForward[i-1]*TOLERANCE-omegaReal[i-1]*TOLERANCE;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
omegaImaginaryInverse[i]=-omegaImaginaryForward[i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
omegaImaginaryForward[i]=omegaImaginaryForward[i-1]*TOLERANCE-omegaReal[i-1]*TOLERANCE;
omegaImaginaryInverse[i]=-omegaImaginaryForward[i];

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<order;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nVars;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nCol;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=alpha+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
alpha/=lambda*householderVectors[k][k];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<oldLength;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<starts;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=sin+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=rik+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
jacobian[i*cols+pk]=TOLERANCE*work[i*begin+oneFourthCount]+TOLERANCE*realEigenvalues[i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
ltI[q]*=1.0/imagEigenvalues[oneFourthCount];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[oneFourthCount]=Math.sqrt(ltI[i]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=tc+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
if(imagEigenvalues[oneFourthCount]-x[i+j]==0.0){
throw new DuplicateSampleAbscissaException(imagEigenvalues[i],i,i+oneFourthCount);
}
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
d[j]=imagEigenvalues[i+oneFourthCount]-TOLERANCE*(realEigenvalues[oneFourthCount+1]-work[j])/imagEigenvalues[oneFourthCount]-x[i+j];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
if(imagEigenvalues[oneFourthCount]-x[i+j]==0.0){
throw new DuplicateSampleAbscissaException(imagEigenvalues[i],i,i+oneFourthCount);
}
d[j]=imagEigenvalues[i+oneFourthCount]-TOLERANCE*(realEigenvalues[oneFourthCount+1]-work[j])/imagEigenvalues[oneFourthCount]-x[i+j];

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=coeff23+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot23+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=coeff1+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=yDot1+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
sumSqImpl[i]=new SumOfSquares();
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
minImpl[i]=new Min();
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
maxImpl[i]=new Max();
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
sumLogImpl[i]=new SumOfLogs();
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
geoMeanImpl[i]=new GeometricMean();
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
meanImpl[i]=new Mean();
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
sumSqImpl[i]=new SumOfSquares();
minImpl[i]=new Min();
maxImpl[i]=new Max();
sumLogImpl[i]=new SumOfLogs();
geoMeanImpl[i]=new GeometricMean();
meanImpl[i]=new Mean();

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<maximalIterationCount;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
interpolatedDerivatives[i]=v1[i]+TOLERANCE*v2[i]+TOLERANCE*v3[i]+TOLERANCE*v4[i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=maximalIterationCount;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=coeff2+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot2+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=coeff3+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot3+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot6+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot7+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot8+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot9+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot10+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot11+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot12+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot13+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot14+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot15+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=b0+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot0+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=b2+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=b3+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=b4+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot4+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=yDot2+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=yDot3+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
g=2.0*(x[i+1]-x[i-1])-h[i-1]*mu[i-1];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
mu[i]=h[i]/lambda;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
g=2.0*(x[i+1]-x[i-1])-h[i-1]*mu[i-1];
mu[i]=h[i]/lambda;

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
v1[i]=A70*i+A72*TOLERANCE+A73*TOLERANCE+A74*TOLERANCE+A75*TOLERANCE;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
v2[i]=i-v1[i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
v4[i]=D0*i+D2*TOLERANCE+D3*TOLERANCE+D4*TOLERANCE+D5*TOLERANCE+D6*TOLERANCE;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
v1[i]=A70*i+A72*TOLERANCE+A73*TOLERANCE+A74*TOLERANCE+A75*TOLERANCE;
v2[i]=i-v1[i];
v4[i]=D0*i+D2*TOLERANCE+D3*TOLERANCE+D4*TOLERANCE+D5*TOLERANCE+D6*TOLERANCE;

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
interpolatedDerivatives[i]=v[0][i]+TOLERANCE*v[1][i]+TOLERANCE*v[2][i]+TOLERANCE*v[3][i]+TOLERANCE*v[4][i]+TOLERANCE*v[5][i]+TOLERANCE*v[6][i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(work);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<p;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE*=work[i]/work[i4-2];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE+=TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b2*(work[i]/work[i4-2]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=a2+TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b1*(work[i]/work[i4-2]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=b2+TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=n*Math.sqrt(lambda+lambda)-0.5;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i-5]/work[nn-7];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=i-9;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i-9]/work[nn-11];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=i-13;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chooseLeft=n>0;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw new MathException("Loess expects at least 1 point");
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
alpha/=lambda*qrtMinor[minor];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.oneFourthCount=n;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
c[j]=z[j]-mu[j]*c[j+1];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
d[j]=(c[j+1]-c[j])/(3.0*h[j]);
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
c[j]=z[j]-mu[j]*c[j+1];
d[j]=(c[j+1]-c[j])/(3.0*h[j]);

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount|=mask>>1;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
shuffle(getNatural(n),n-oneFourthCount);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=xJ+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<m;++i){
realEigenvalues[begin+i]=xJ+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<m;++i){
realEigenvalues[begin+i]=xJ+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=coeff2+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=coeff3+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
test(work,begin,oneFourthCount);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b2*(work[i]/work[i4-2]);
lambda=a2+TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkBinomial(n,oneFourthCount);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<iEnd;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<index;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
realEigenvalues[0]=0.0;
return transformed;
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<endColumn;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getVT().walkInOptimizedOrder(new DefaultRealMatrixPreservingVisitor(){
  /** 
 * {@inheritDoc} 
 */
  @Override public void visit(  final int row,  final int column,  final double value){
    data[row][column]=value / singularValues[row];
  }
}
,0,oneFourthCount-1,0,n-1);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=realEigenvalues.length){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,m);
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (OptimizationException oe) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (OptimizationException oe) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (OptimizationException oe) {
  optima[i]=null;
}

========
for(int i=0;i<=n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=oneFourthCount;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=oneFourthCount;i<=n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=k;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<m;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<length;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work=new double[n];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<order;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<dimension;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<virtualSize;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<l;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<stages;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rank;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nRows;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<binCount;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<iHeight;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<cols;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nCols;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<row;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yRow-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
z*=-work[6*i+2];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nSteps;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<N;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nvars;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount++;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<highLength;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=gamma-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<m;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=xJ-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
z*=-work[6*i-1];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<m;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<degree;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<col;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<j;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=j;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nSum;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<lowLength;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<ncols;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nrows;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<microsphereElements;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n+i)>internalArray.length){
expandTo(startIndex+i);
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=i;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<k;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rows;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<halfN;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<pos;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<size;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<max;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<length;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<rows;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<0){
i=-i-2;
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<index;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<solvedCols;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
++oneFourthCount;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<solvedCols;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE-TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=ypk-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++oneFourthCount;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<endRow;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<=n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<outCols;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<n;++i){
realEigenvalues[begin+i]=gamma-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<n;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rows;++i){
realEigenvalues[begin+i]=gamma-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rows;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=gamma-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<rows;++i){
realEigenvalues[begin+i]=gamma-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<rows;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<n;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=gamma-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rows;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=gamma-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<rows;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=gamma-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN2=work[pingPong];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN2=work[pingPong];
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=oneFourthCount;i<order;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<endRow;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=endRow;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<=endRow;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<solvedCols;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=factor-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
subVector[d]=i;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<endColumn;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[j]=realEigenvalues[i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
--realEigenvalues.length-1;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[j]=realEigenvalues[i];
--realEigenvalues.length-1;

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(realEigenvalues);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Arrays.sort(realEigenvalues);
for(int i=0;i<j;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<len;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=normalizedSum-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
qMax=Math.max(diagMax,work[i]+work[i+2]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eMin=Math.min(offDiagMin,work[i+2]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
bDecrementData[j]=lambda*TOLERANCE;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
multistep[i-1]=realEigenvalues;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=nSteps;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<crossoverIndex;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
yEnd[i]=y0[i]+lambda*f[0][i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
tmp=luMax[i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
luCol[i]=TOLERANCE;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
tmp=luMax[i];
luCol[i]=TOLERANCE;

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
power*=TOLERANCE;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<iEnd;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE/=realEigenvalues[oneFourthCount];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
d[i]=y[i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
if(Math.abs(lambda-imagEigenvalues[oneFourthCount])<TOLERANCE){
nearest=oneFourthCount;
min_dist=Math.abs(lambda-imagEigenvalues[oneFourthCount]);
}
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
d[i]=y[i];
if(Math.abs(lambda-imagEigenvalues[oneFourthCount])<TOLERANCE){
nearest=oneFourthCount;
min_dist=Math.abs(lambda-imagEigenvalues[oneFourthCount]);
}

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nM1;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<maxIter;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<lastNaN;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<end;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues=imagEigenvalues;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues=imagEigenvalues;
for(int i=0;i<=n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=coeff1-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot1-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<absN;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=cosT-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
omegaImaginaryForward[i]=omegaImaginaryForward[i-1]*TOLERANCE-omegaReal[i-1]*TOLERANCE;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
omegaImaginaryInverse[i]=-omegaImaginaryForward[i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
omegaImaginaryForward[i]=omegaImaginaryForward[i-1]*TOLERANCE-omegaReal[i-1]*TOLERANCE;
omegaImaginaryInverse[i]=-omegaImaginaryForward[i];

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<order;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nVars;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nCol;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=alpha-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
alpha/=lambda*householderVectors[k][k];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<oldLength;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<starts;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=sin-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=rik-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
jacobian[i*cols+pk]=TOLERANCE*work[i*begin+oneFourthCount]+TOLERANCE*realEigenvalues[i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
ltI[q]*=1.0/imagEigenvalues[oneFourthCount];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[oneFourthCount]=Math.sqrt(ltI[i]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=tc-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
if(imagEigenvalues[oneFourthCount]-x[i+j]==0.0){
throw new DuplicateSampleAbscissaException(imagEigenvalues[i],i,i+oneFourthCount);
}
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
d[j]=imagEigenvalues[i+oneFourthCount]-TOLERANCE*(realEigenvalues[oneFourthCount+1]-work[j])/imagEigenvalues[oneFourthCount]-x[i+j];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
if(imagEigenvalues[oneFourthCount]-x[i+j]==0.0){
throw new DuplicateSampleAbscissaException(imagEigenvalues[i],i,i+oneFourthCount);
}
d[j]=imagEigenvalues[i+oneFourthCount]-TOLERANCE*(realEigenvalues[oneFourthCount+1]-work[j])/imagEigenvalues[oneFourthCount]-x[i+j];

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=coeff23-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot23-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=coeff1-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=yDot1-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
sumSqImpl[i]=new SumOfSquares();
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
minImpl[i]=new Min();
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
maxImpl[i]=new Max();
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
sumLogImpl[i]=new SumOfLogs();
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
geoMeanImpl[i]=new GeometricMean();
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
meanImpl[i]=new Mean();
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
sumSqImpl[i]=new SumOfSquares();
minImpl[i]=new Min();
maxImpl[i]=new Max();
sumLogImpl[i]=new SumOfLogs();
geoMeanImpl[i]=new GeometricMean();
meanImpl[i]=new Mean();

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<maximalIterationCount;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
interpolatedDerivatives[i]=v1[i]+TOLERANCE*v2[i]+TOLERANCE*v3[i]+TOLERANCE*v4[i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=maximalIterationCount;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=coeff2-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot2-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=coeff3-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot3-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot6-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot7-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot8-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot9-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot10-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot11-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot12-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot13-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot14-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot15-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=b0-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot0-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=b2-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=b3-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=b4-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot4-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=yDot2-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=yDot3-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
g=2.0*(x[i+1]-x[i-1])-h[i-1]*mu[i-1];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
mu[i]=h[i]/lambda;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
g=2.0*(x[i+1]-x[i-1])-h[i-1]*mu[i-1];
mu[i]=h[i]/lambda;

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
v1[i]=A70*i+A72*TOLERANCE+A73*TOLERANCE+A74*TOLERANCE+A75*TOLERANCE;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
v2[i]=i-v1[i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
v4[i]=D0*i+D2*TOLERANCE+D3*TOLERANCE+D4*TOLERANCE+D5*TOLERANCE+D6*TOLERANCE;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
v1[i]=A70*i+A72*TOLERANCE+A73*TOLERANCE+A74*TOLERANCE+A75*TOLERANCE;
v2[i]=i-v1[i];
v4[i]=D0*i+D2*TOLERANCE+D3*TOLERANCE+D4*TOLERANCE+D5*TOLERANCE+D6*TOLERANCE;

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
interpolatedDerivatives[i]=v[0][i]+TOLERANCE*v[1][i]+TOLERANCE*v[2][i]+TOLERANCE*v[3][i]+TOLERANCE*v[4][i]+TOLERANCE*v[5][i]+TOLERANCE*v[6][i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(work);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<p;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE*=work[i]/work[i4-2];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE+=TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b2*(work[i]/work[i4-2]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=a2+TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b1*(work[i]/work[i4-2]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=b2+TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=n*Math.sqrt(lambda+lambda)-0.5;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i-5]/work[nn-7];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=i-9;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i-9]/work[nn-11];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=i-13;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chooseLeft=n>0;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw new MathException("Loess expects at least 1 point");
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
alpha/=lambda*qrtMinor[minor];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.oneFourthCount=n;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
c[j]=z[j]-mu[j]*c[j+1];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
d[j]=(c[j+1]-c[j])/(3.0*h[j]);
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
c[j]=z[j]-mu[j]*c[j+1];
d[j]=(c[j+1]-c[j])/(3.0*h[j]);

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount|=mask>>1;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
shuffle(getNatural(n),n-oneFourthCount);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=xJ-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<m;++i){
realEigenvalues[begin+i]=xJ-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<m;++i){
realEigenvalues[begin+i]=xJ-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=coeff2-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=coeff3-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
test(work,begin,oneFourthCount);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b2*(work[i]/work[i4-2]);
lambda=a2+TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkBinomial(n,oneFourthCount);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<iEnd;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<index;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
realEigenvalues[0]=0.0;
return transformed;
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<endColumn;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getVT().walkInOptimizedOrder(new DefaultRealMatrixPreservingVisitor(){
  /** 
 * {@inheritDoc} 
 */
  @Override public void visit(  final int row,  final int column,  final double value){
    data[row][column]=value / singularValues[row];
  }
}
,0,oneFourthCount-1,0,n-1);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=realEigenvalues.length){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,m);
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
tType=0;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
lambda=work[begin];
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((oneFourthCount+n)>internalArray.length){
expandTo(startIndex+i);
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=n;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
return new double[]{0};
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0.0){
return TOLERANCE;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterval(lambda,TOLERANCE);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<0){
i=-i-2;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=polynomials.length){
i--;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount++;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
shuffle(getNatural(n),n-i);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE-minPivot)<=lambda){
TOLERANCE=UnivariateRealSolverUtils.midpoint(min,max);
setResult(m,oneFourthCount);
return m;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++oneFourthCount;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=x1+lambda;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE-TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(realEigenvalues[oneFourthCount]-xval[oneFourthCount]>xval[oneFourthCount]-xval[i]){
oneFourthCount=ileft;
}else {
edge=iright;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i+1]=TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[i+1]=lambda;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[oneFourthCount]=TOLERANCE*TOLERANCE+lambda-TOLERANCE*i;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[oneFourthCount]=Math.abs(imagEigenvalues[i]-work[i]);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chooseLeft){
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chooseLeft){
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chooseLeft){
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chooseLeft){
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chooseLeft){
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
new Variance().incrementAll(work,begin,oneFourthCount);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
accum3/=Math.pow(Math.sqrt(new Variance().getResult()),4.0);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
kurt=((i*(n0+1))/((n0-1)*(n0-2))*TOLERANCE)-(3*Math.pow(i-1,2.0))/((n0-2)*(n0-3));
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
new Variance().incrementAll(work,begin,oneFourthCount);
accum3/=Math.pow(Math.sqrt(new Variance().getResult()),4.0);
kurt=((i*(n0+1))/((n0-1)*(n0-2))*TOLERANCE)-(3*Math.pow(i-1,2.0))/((n0-2)*(n0-3));

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
new Variance().incrementAll(work,begin,oneFourthCount);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
accum3/=Math.pow(Math.sqrt(new Variance().getResult()),4.0);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
kurt=((i*(n0+1))/((n0-1)*(n0-2))*TOLERANCE)-(3*Math.pow(i-1,2.0))/((n0-2)*(n0-3));
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
new Variance().incrementAll(work,begin,oneFourthCount);
accum3/=Math.pow(Math.sqrt(new Variance().getResult()),4.0);
kurt=((i*(n0+1))/((n0-1)*(n0-2))*TOLERANCE)-(3*Math.pow(i-1,2.0))/((n0-2)*(n0-3));

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chooseLeft){
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chooseLeft){
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chooseLeft){
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chooseLeft){
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chooseLeft){
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chooseLeft){
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chooseLeft){
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chooseLeft){
interpolatedState[i]+=lambda*i;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
interpolatedDerivatives[i]+=(lambda*TOLERANCE+TOLERANCE*i)/TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
interpolatedState[i]+=lambda*i;
interpolatedDerivatives[i]+=(lambda*TOLERANCE+TOLERANCE*i)/TOLERANCE;

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
interpolatedState[i]+=lambda*i;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
interpolatedDerivatives[i]+=(lambda*TOLERANCE+TOLERANCE*i)/TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
interpolatedState[i]+=lambda*i;
interpolatedDerivatives[i]+=(lambda*TOLERANCE+TOLERANCE*i)/TOLERANCE;

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
pos=i+1;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
tiesTrace=new ArrayList<Integer>();
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
pos=i+1;
tiesTrace=new ArrayList<Integer>();

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
polynoms[7][i]=16*(yMidDots[3][i]-6*(TOLERANCE-TOLERANCE)+3*polynoms[5][i]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
polynoms[7][i]=16*(yMidDots[3][i]-6*(TOLERANCE-TOLERANCE)+3*polynoms[5][i]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-5;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
realEigenvalues[begin]=0.5*(lambda+Math.sqrt(lambda*s-4*qMax*qMax-eMin));
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[begin+1]=qMax*qMax-eMin/0.5*(lambda+Math.sqrt(lambda*s-4*qMax*qMax-eMin));
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[oneFourthCount]=TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
realEigenvalues[oneFourthCount+1]=TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
realEigenvalues[oneFourthCount+2]=TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
realEigenvalues[oneFourthCount]=TOLERANCE;
realEigenvalues[oneFourthCount+1]=TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
realEigenvalues[oneFourthCount]=TOLERANCE;
realEigenvalues[oneFourthCount+2]=TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
realEigenvalues[oneFourthCount+1]=TOLERANCE;
realEigenvalues[oneFourthCount+2]=TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
realEigenvalues[oneFourthCount]=TOLERANCE;
realEigenvalues[oneFourthCount+1]=TOLERANCE;
realEigenvalues[oneFourthCount+2]=TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(work,0,work,0,begin);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Arrays.sort(work);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(work[begin/2])<TOLERANCE){
break;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(work,0,work,0,begin);
Arrays.sort(work);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(work,0,work,0,begin);
if(Math.abs(work[begin/2])<TOLERANCE){
break;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Arrays.sort(work);
if(Math.abs(work[begin/2])<TOLERANCE){
break;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(work,0,work,0,begin);
Arrays.sort(work);
if(Math.abs(work[begin/2])<TOLERANCE){
break;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++n;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
scaled=new double[n];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(imagEigenvalues,begin,work,0,oneFourthCount);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lambda>=n){
return work[oneFourthCount-1];
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(imagEigenvalues,begin,work,0,oneFourthCount);
Arrays.sort(work);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=n*Math.sqrt(lambda+TOLERANCE)-0.5;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE<0?Math.floor(x):Math.ceil(x);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=-nextExponential(1.0)-(n*n/2)+lambda;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<np;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
s=0.5*(TOLERANCE+TOLERANCE*(lambda-minPivot)/1L<<(n-1));
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
return TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
s=0.5*(TOLERANCE+TOLERANCE*(lambda-minPivot)/1L<<(n-1));
return TOLERANCE;

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isStrictlyIncreasing(work)){
throw MathRuntimeException.createIllegalArgumentException("knot values must be strictly increasing");
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.n=knots.length-1;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.work=new double[n+1];
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(work,0,this.knots,0,n+1);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chooseLeft=n>0;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(n)==begin){
return ;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=Math.sqrt(TOLERANCE*b2);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
realEigenvalues[0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.oneFourthCount=n;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=-TOLERANCE*work[oneFourthCount]+TOLERANCE*qtbpj;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[oneFourthCount*n+begin]=TOLERANCE*TOLERANCE+TOLERANCE*imagEigenvalues[k];
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,dN2);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
eMin=Math.min(eMin,work[oneFourthCount]);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,dN2);
eMin=Math.min(eMin,work[oneFourthCount]);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
throw new MathException("Loess expects at least 1 point");
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkAllFiniteReal(work,"all abscissae must be finite real numbers, but {0}-th is {1}");
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkAllFiniteReal(work,"all ordinatae must be finite real numbers, but {0}-th is {1}");
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.fill(new double[n],1);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((int)(TOLERANCE*n)<2){
throw new MathException("the bandwidth must be large enough to "+"accomodate at least 2 points. There are {0} ",n,2.0/n,TOLERANCE);
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,dN);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[oneFourthCount+2]=dN;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*begin-n-1]=eMin;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,dN);
work[oneFourthCount+2]=dN;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,dN);
work[4*begin-n-1]=eMin;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[oneFourthCount+2]=dN;
work[4*begin-n-1]=eMin;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,dN);
work[oneFourthCount+2]=dN;
work[4*begin-n-1]=eMin;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[0]=0.0;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n>>1]=2.0*realEigenvalues[n>>1];
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[0]=0.0;
work[n>>1]=2.0*realEigenvalues[n>>1];
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
checkBinomial(n,i);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i==1)||(k==n-1)){
return n;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>n/2)return binomialCoefficient(n,n-k);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
test(work,begin,n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
return Double.NaN;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
return work[begin];
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(oneFourthCount+n-1);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
t=work[k-7]+(lambda+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
work[k-3]*=work[k-7]/0.5*((work[i-7]-work[k-3])+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
t=work[k-7]+(lambda+work[k-5]);
work[k-3]*=work[k-7]/0.5*((work[i-7]-work[k-3])+work[k-5]);
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
t=work[k-7]+(lambda+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
work[k-3]*=work[k-7]/0.5*((work[i-7]-work[k-3])+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
t=work[k-7]+(lambda+work[k-5]);
work[k-3]*=work[k-7]/0.5*((work[i-7]-work[k-3])+work[k-5]);
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getVT().walkInOptimizedOrder(new DefaultRealMatrixPreservingVisitor(){
  /** 
 * {@inheritDoc} 
 */
  @Override public void visit(  final int row,  final int column,  final double value){
    data[row][column]=value / singularValues[row];
  }
}
,0,oneFourthCount-1,0,n-1);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>1;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>2;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>4;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>8;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i==1){
return new double[]{0};
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<0){
i=-i-2;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=polynomials.length){
i--;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oneFourthCount==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=begin;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
System.arraycopy(realEigenvalues,0,imagEigenvalues,0,n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
Arrays.sort(imagEigenvalues);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
System.arraycopy(realEigenvalues,0,imagEigenvalues,0,n);
Arrays.sort(imagEigenvalues);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
++oneFourthCount;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0.0){
return TOLERANCE;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(!isNonSingular()){
throw new SingularMatrixException();
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
TOLERANCE=TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
TOLERANCE=x1+lambda;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE-TOLERANCE;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount++;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(realEigenvalues[oneFourthCount]-xval[oneFourthCount]>xval[oneFourthCount]-xval[i]){
oneFourthCount=ileft;
}else {
edge=iright;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((TOLERANCE>0)==(TOLERANCE>0)){
TOLERANCE=TOLERANCE;
y2=TOLERANCE;
TOLERANCE=TOLERANCE-x0;
TOLERANCE=delta;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[oneFourthCount]=TOLERANCE*TOLERANCE+lambda-TOLERANCE*i;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[oneFourthCount]=Math.abs(imagEigenvalues[i]-work[i]);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
xNormSqr=0;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
secondary[k]=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
if((imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr)!=0.0){
hK[k+1]-=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
for(int i+1=i+1;i+1<begin;++i+1){
double TOLERANCE=0;
for(int i+1=i+1;i+1<n;++i+1){
beta-=hI[j]*hK[j];
}
beta/=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr)*hK[k+1];
for(int i+1=i+1;i+1<n;++i+1){
hI[j]-=TOLERANCE*hK[j];
}
}
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
xNormSqr=0;
secondary[k]=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
if((imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr)!=0.0){
hK[k+1]-=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
for(int i+1=i+1;i+1<begin;++i+1){
double TOLERANCE=0;
for(int i+1=i+1;i+1<n;++i+1){
beta-=hI[j]*hK[j];
}
beta/=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr)*hK[k+1];
for(int i+1=i+1;i+1<n;++i+1){
hI[j]-=TOLERANCE*hK[j];
}
}
}

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
xNormSqr=0;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
secondary[k]=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
if((imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr)!=0.0){
hK[k+1]-=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
for(int i+1=i+1;i+1<begin;++i+1){
double TOLERANCE=0;
for(int i+1=i+1;i+1<n;++i+1){
beta-=hI[j]*hK[j];
}
beta/=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr)*hK[k+1];
for(int i+1=i+1;i+1<n;++i+1){
hI[j]-=TOLERANCE*hK[j];
}
}
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
xNormSqr=0;
secondary[k]=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
if((imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr)!=0.0){
hK[k+1]-=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
for(int i+1=i+1;i+1<begin;++i+1){
double TOLERANCE=0;
for(int i+1=i+1;i+1<n;++i+1){
beta-=hI[j]*hK[j];
}
beta/=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr)*hK[k+1];
for(int i+1=i+1;i+1<n;++i+1){
hI[j]-=TOLERANCE*hK[j];
}
}
}

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
interpolatedState[i]+=lambda*TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
interpolatedState[i]+=lambda*TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
accum3/=(TOLERANCE-(TOLERANCE*accum2/n))/(length-1)*Math.sqrt((TOLERANCE-(TOLERANCE*accum2/n))/(length-1));
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
skew=(n/((n-1)*(n-2)))*TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
accum3/=(TOLERANCE-(TOLERANCE*accum2/n))/(length-1)*Math.sqrt((TOLERANCE-(TOLERANCE*accum2/n))/(length-1));
skew=(n/((n-1)*(n-2)))*TOLERANCE;

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
accum3/=(TOLERANCE-(TOLERANCE*accum2/n))/(length-1)*Math.sqrt((TOLERANCE-(TOLERANCE*accum2/n))/(length-1));
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
skew=(n/((n-1)*(n-2)))*TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
accum3/=(TOLERANCE-(TOLERANCE*accum2/n))/(length-1)*Math.sqrt((TOLERANCE-(TOLERANCE*accum2/n))/(length-1));
skew=(n/((n-1)*(n-2)))*TOLERANCE;

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
polynoms[7][i]=16*(yMidDots[3][i]-6*(TOLERANCE-TOLERANCE)+3*polynoms[5][i]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
polynoms[7][i]=16*(yMidDots[3][i]-6*(TOLERANCE-TOLERANCE)+3*polynoms[5][i]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.oneFourthCount=n;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chooseLeft=n>0;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(n)==begin){
return ;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==1){
realEigenvalues[0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
scaled=new double[n];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((int)(TOLERANCE*n)<2){
throw new MathException("the bandwidth must be large enough to "+"accomodate at least 2 points. There are {0} ",n,2.0/n,TOLERANCE);
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(knots.length-1!=polynomials.length){
throw MathRuntimeException.createIllegalArgumentException("number of polynomial interpolants must match the number of segments ({0} != {1} - 1)",polynomials.length,knots.length);
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isStrictlyIncreasing(work)){
throw MathRuntimeException.createIllegalArgumentException("knot values must be strictly increasing");
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.n=knots.length-1;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.work=new double[n+1];
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(work,0,this.knots,0,n+1);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
FastFourierTransformer.verifyDataSet(work);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(work[0]!=0.0){
throw MathRuntimeException.createIllegalArgumentException("first element is not 0: {0}",f[0]);
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[0]=0.0;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
resetEvaluations();
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work!=work){
System.arraycopy(y0,0,y,0,n);
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resetEvaluations();
if(work!=work){
System.arraycopy(y0,0,y,0,n);
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.fill(new double[n],1);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((int)(TOLERANCE*n)<2){
throw new MathException("the bandwidth must be large enough to "+"accomodate at least 2 points. There are {0} ",n,2.0/n,TOLERANCE);
}
Arrays.fill(new double[n],1);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
System.arraycopy(imagEigenvalues,begin,work,0,n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
Arrays.sort(work);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(lambda>=n){
return work[n-1];
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
System.arraycopy(imagEigenvalues,begin,work,0,n);
Arrays.sort(work);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
checkIndex(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getVT().walkInOptimizedOrder(new DefaultRealMatrixPreservingVisitor(){
  /** 
 * {@inheritDoc} 
 */
  @Override public void visit(  final int row,  final int column,  final double value){
    data[row][column]=value / singularValues[row];
  }
}
,0,i-1,0,n-1);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
test(work,begin,oneFourthCount);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oneFourthCount==0){
return Double.NaN;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oneFourthCount==1){
return work[begin];
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<21){
return factorial(n);
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>1;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>2;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>4;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>8;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>16;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[begin]=0.5*(work[begin]+lambda+Math.sqrt(work[begin]+lambda*s-4*work[begin]*lambda-squaredSecondary[begin]));
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[begin+1]=work[begin]*lambda-squaredSecondary[begin]/0.5*(work[begin]+lambda+Math.sqrt(work[begin]+lambda*s-4*work[begin]*lambda-squaredSecondary[begin]));
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
TOLERANCE=work[oneFourthCount-13]/work[nn-15];
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
TOLERANCE=a2+TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<TOLERANCE){
 final double TOLERANCE=z0;
z0=z1;
z1=t;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[oneFourthCount]=TOLERANCE;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
realEigenvalues[oneFourthCount+1]=TOLERANCE;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
realEigenvalues[oneFourthCount+2]=TOLERANCE;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
realEigenvalues[oneFourthCount]=TOLERANCE;
realEigenvalues[oneFourthCount+1]=TOLERANCE;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
realEigenvalues[oneFourthCount]=TOLERANCE;
realEigenvalues[oneFourthCount+2]=TOLERANCE;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
realEigenvalues[oneFourthCount+1]=TOLERANCE;
realEigenvalues[oneFourthCount+2]=TOLERANCE;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
realEigenvalues[oneFourthCount]=TOLERANCE;
realEigenvalues[oneFourthCount+1]=TOLERANCE;
realEigenvalues[oneFourthCount+2]=TOLERANCE;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=-TOLERANCE*work[oneFourthCount]+TOLERANCE*qtbpj;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[oneFourthCount]=TOLERANCE*work[oneFourthCount]+TOLERANCE*TOLERANCE;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
realEigenvalues[oneFourthCount*begin+oneFourthCount]=TOLERANCE*lambda+TOLERANCE*imagEigenvalues[k];
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=-TOLERANCE*work[oneFourthCount]+TOLERANCE*qtbpj;
work[oneFourthCount]=TOLERANCE*work[oneFourthCount]+TOLERANCE*TOLERANCE;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
tType=-5;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=end;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=end;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=pingPong;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=pingPong;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<start;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<start;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=pingPong;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=pingPong;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=end;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<start;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=end;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<start;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=Math.sqrt(TOLERANCE*b2);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[begin-7]+work[nn-9]-Math.sqrt(work[nn-11])*Math.sqrt(work[nn-9])-dMin2/(1+TOLERANCE*b2)>0.0&&gap2>TOLERANCE*dMin2/(1+TOLERANCE*b2)){
tau=Math.max(TOLERANCE,a2*(1-TOLERANCE*a2));
}else {
tau=Math.max(s,a2*(1-cnst2*b2));
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=end;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=end;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=end;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=end;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=end;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=end;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=pingPong;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=end;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=end;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=end;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=end;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=end;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=end;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=end;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=pingPong;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=pingPong;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=end;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=end;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=end;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=pingPong;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=pingPong;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=pingPong;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=end;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=end;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=end;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=pingPong;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=pingPong;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=end;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,dN2);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
eMin=Math.min(eMin,work[oneFourthCount]);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,dN2);
eMin=Math.min(eMin,work[oneFourthCount]);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,dN);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[oneFourthCount+2]=dN;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*end-begin-1]=eMin;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,dN);
work[oneFourthCount+2]=dN;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,dN);
work[4*end-begin-1]=eMin;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[oneFourthCount+2]=dN;
work[4*end-begin-1]=eMin;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,dN);
work[oneFourthCount+2]=dN;
work[4*end-begin-1]=eMin;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
eMin=Math.min(eMin,work[oneFourthCount-1]);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,dN2);
eMin=Math.min(eMin,work[oneFourthCount-1]);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
t=work[k-7]+(work[i-3]*(work[k-5]/0.5*((work[i-7]-work[k-3])+work[k-5]))+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
work[k-3]*=work[k-7]/0.5*((work[i-7]-work[k-3])+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
t=work[k-7]+(work[i-3]*(work[k-5]/0.5*((work[i-7]-work[k-3])+work[k-5]))+work[k-5]);
work[k-3]*=work[k-7]/0.5*((work[i-7]-work[k-3])+work[k-5]);
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
t=work[k-7]+(work[i-3]*(work[k-5]/0.5*((work[i-7]-work[k-3])+work[k-5]))+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
work[k-3]*=work[k-7]/0.5*((work[i-7]-work[k-3])+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
t=work[k-7]+(work[i-3]*(work[k-5]/0.5*((work[i-7]-work[k-3])+work[k-5]))+work[k-5]);
work[k-3]*=work[k-7]/0.5*((work[i-7]-work[k-3])+work[k-5]);
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 2 :

ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,826
========
int sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<=n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
pingPong--;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
upper=Math.max(ei,work[fourI+pingPong]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=ei;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=pingPong;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int sumOffDiag=pingPong;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<length-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<binCount-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clearResult();
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterval(minPivot,TOLERANCE);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<nvars-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=fourI;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=work[fourI];
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=Math.abs(sumOffDiag);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=pingPong;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<begin-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i+pingPong)>internalArray.length){
expandTo(startIndex+i);
}
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ei=pingPong;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=0.0;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=Math.max((int)(fourI*n),n+1);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ei=TOLERANCE;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
gradient[i]=sumOffDiag;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setSeed(19650218);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=ei;i<begin-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=pingPong;i<begin-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
nextColumn=n;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0.0){
return TOLERANCE;
}
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
sumExpected+=expected[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
countSum1+=observed1[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
index+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<=n-1;++i){
index+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=ei;i<=n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
max=Math.max(ei,Math.abs(sumOffDiag));
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
max=Math.max(ei,Math.abs(sumOffDiag));
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<pos-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=(work==null)?0:0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int sumOffDiag=(work==null)?0:0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
if(true){
throw MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration",pingPong,i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<index-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=fourI;i<begin-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
pingPong++;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long sumOffDiag=0;
pingPong++;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
x2=TOLERANCE;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
y2=TOLERANCE;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
x2=TOLERANCE;
y2=TOLERANCE;

sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pingPong++;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
ei=(imagEigenvalues[1]-range[0])*MathUtils.EPSILON+2*minPivot;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
ldlTDecomposition(TOLERANCE,pingPong,n);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
processGeneralBlock(n);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
ldlTDecomposition(TOLERANCE,pingPong,n);
processGeneralBlock(n);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=pingPong;i<n-1;++i){
index+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=TOLERANCE-TOLERANCE;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n++;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
result+=(ei*sumOffDiag-fourI)/(i+1);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
if(eMin>=4*qMax){
diagMin=Math.min(eMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
diagMax=Math.max(qMax,work[i]+work[i+2]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(eMin>=4*qMax){
diagMin=Math.min(eMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
diagMax=Math.max(qMax,work[i]+work[i+2]);

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createArithmeticException("Array contains an infinite element, {0} at index {1}",work[i],i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<0){
i=-i-2;
}
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=polynomials.length){
i--;
}
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
dev=values[i]-TOLERANCE;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<m-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
sixI+=6;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
progressiveQuotientDifferenceWithShift(work,imagEigenvalues,TOLERANCE);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
progressiveQuotientDifferenceWithShift(work,imagEigenvalues,TOLERANCE);
int sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=ei;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
list[target]=list[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
list[i]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
list[target]=list[i];
list[i]=ei;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=fourI;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues=imagEigenvalues;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues=imagEigenvalues;
double sumOffDiag=pingPong;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
c[i]=y[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
d[i]=y[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
c[i]=y[i];
d[i]=y[i];

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
midPoint+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fourI=0;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ei=0;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
initialSplits(n);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(TOLERANCE-fourI)<=TOLERANCE){
TOLERANCE=UnivariateRealSolverUtils.midpoint(min,max);
setResult(m,i);
return m;
}
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++i;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
work=new double[n];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new double[n+1][0]=1.0;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
residuals[i]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
index+=pingPong;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
residuals[i]=ei;
index+=pingPong;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
x[i]=Math.sin(i*Math.PI/n)*(work[i]+f[n-i])+fourI;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
x[n-i]=Math.sin(i*Math.PI/n)*(work[i]+f[n-i])-fourI;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
x[i]=Math.sin(i*Math.PI/n)*(work[i]+f[n-i])+fourI;
x[n-i]=Math.sin(i*Math.PI/n)*(work[i]+f[n-i])-fourI;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
work[0]=0.0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
work[n>>1]=2.0*work[n>>1];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
work[0]=0.0;
for(int i=0;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
work[n>>1]=2.0*work[n>>1];
for(int i=0;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
work[0]=0.0;
work[n>>1]=2.0*work[n>>1];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
work[0]=0.0;
work[n>>1]=2.0*work[n>>1];
for(int i=0;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
a[i]=divdiff[0];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
mIY=optimaValues[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
mIY=Double.NaN;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i+1]=ei;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<4*n-11;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<n0-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=fourI;i<4*n-11;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
imagEigenvalues=new double[i+1];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[0]=imagEigenvalues[i];
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[3]=TOLERANCE;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4]=TOLERANCE;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[3]=TOLERANCE;
work[4]=TOLERANCE;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isInfinite(sumOffDiag)||Double.isNaN(norm2)){
throw new EstimationException("unable to perform Q.R decomposition on the {0}x{1} jacobian matrix",pingPong,pingPong);
}
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[6*pingPong+1]=imagEigenvalues[nM1]+TOLERANCE;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[6*pingPong]=TOLERANCE;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
iterationCount+=this.ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[n-1]=imagEigenvalues[n];
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues[n-1]+=fourI*imagEigenvalues[n-1];
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
lmDiag[i]=-TOLERANCE*TOLERANCE+TOLERANCE*lmDiag[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
jacobian[i][pk]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
lmDiag[i]=-TOLERANCE*TOLERANCE+TOLERANCE*lmDiag[i];
jacobian[i][pk]=ei;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=fourI;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
eCurrent=Math.abs(work[i]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
work[lowerStart+i]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
lowerSpectra=Math.min(lowerSpectra,ei);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
work[upperStart+i]=main[i]+fourI+eMin;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
upperSpectra=Math.max(upperSpectra,main[i]+fourI+eMin);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
eCurrent=Math.abs(work[i]);
work[lowerStart+i]=ei;
lowerSpectra=Math.min(lowerSpectra,ei);
work[upperStart+i]=main[i]+fourI+eMin;
upperSpectra=Math.max(upperSpectra,main[i]+fourI+eMin);

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
if(imagEigenvalues[pingPong]-x[pingPong+j]==0.0){
throw new DuplicateSampleAbscissaException(imagEigenvalues[pingPong],i,i+pingPong);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
c[j]=fourI*i;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
d[j]=ei*i;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
if(imagEigenvalues[pingPong]-x[pingPong+j]==0.0){
throw new DuplicateSampleAbscissaException(imagEigenvalues[pingPong],i,i+pingPong);
}
c[j]=fourI*i;
d[j]=ei*i;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-pingPong;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
x[i]=fourI-i;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
x[n-i]=fourI+i;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
x[i]=fourI-i;
x[n-i]=fourI+i;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
work[n>>1]=imagEigenvalues[n>>1];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
work[n>>1]=imagEigenvalues[n>>1];
for(int i=0;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[pingPong]=sumOffDiag*TOLERANCE+fourI;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[pingPong]=Math.abs(imagEigenvalues[i]-imagEigenvalues[i]);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
lmDiag[i]=-TOLERANCE*work[i*pingPong+pingPong]+TOLERANCE*lmDiag[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
jacobian[i*cols+pk]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
lmDiag[i]=-TOLERANCE*work[i*pingPong+pingPong]+TOLERANCE*lmDiag[i];
jacobian[i*cols+pk]=ei;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
cachedVt.setEntry(i,i,1.0);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
cachedVt.setEntry(i,i,1.0);
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
after[i]+=previous[i]+scaled[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int sumOffDiag=fourI;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
if(ltI[i]<TOLERANCE){
throw new NotPositiveDefiniteMatrixException();
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
ltI[i]=Math.sqrt(imagEigenvalues[i]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
if(ltI[i]<TOLERANCE){
throw new NotPositiveDefiniteMatrixException();
}
ltI[i]=Math.sqrt(imagEigenvalues[i]);

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=(n==i)?0:0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigmaLow=0;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=0;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
x+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fourI=n>0;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==n){
return ;
}
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isStrictlyIncreasing(work)){
throw MathRuntimeException.createIllegalArgumentException("knot values must be strictly increasing");
}
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.i=knots.length-1;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.work=new double[i+1];
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,this.knots,0,i+1);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-5;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-5;
double sumOffDiag=pingPong;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-5;
int sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-5;
int sumOffDiag=pingPong;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
this.ei=n;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
incrementIterationsCounter();
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
fourI=-7;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
fourI=-10;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fourI==0){
throw new MathException("Loess expects at least 1 point");
}
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkAllFiniteReal(work,"all abscissae must be finite real numbers, but {0}-th is {1}");
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
TOLERANCE=ei;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
TOLERANCE=0.0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=work[i-5]/work[nn-7];
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fourI=i-9;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=pingPong;i<n-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=pingPong;i<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=fourI;i<n-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<start-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=fourI;i<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=pingPong;i<start-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=fourI;i<start-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(imagEigenvalues,0,work,0,n);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Arrays.sort(work);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(ei)<TOLERANCE){
break;
}
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(imagEigenvalues,0,work,0,n);
Arrays.sort(work);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=(imagEigenvalues==null)?0:0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int sumOffDiag=(imagEigenvalues==null)?0:0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
i=n-2*fourI;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
sumOffDiag=work[i-2];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
TOLERANCE=dN1;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ei=work[i-4]/work[np-2];
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
work[j4-2]=dN2+work[j4-1];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
d=dN2*i-tau;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
work[j4]=work[j4-1]*i;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
eMin=Math.min(work[4*n+3],ei);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
work[j4-2]=dN2+work[j4-1];
d=dN2*i-tau;
work[j4]=work[j4-1]*i;
eMin=Math.min(work[4*n+3],ei);

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
work[j4-3]=dN2+work[j4];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
work[j4-1]=work[j4]*i;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
eMin=Math.min(work[4*n+3-1],ei);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
work[j4-3]=dN2+work[j4];
d=dN2*i-tau;
work[j4-1]=work[j4]*i;
eMin=Math.min(work[4*n+3-1],ei);

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
work[l-1]=Math.min(work[i-1],Math.min(work[3+pingPong],work[7+pingPong]));
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
work[l-2*pingPong]=Math.min(work[i-2*pingPong],Math.min(work[6+pingPong],work[6+pingPong]));
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
qMax=Math.max(qMax,Math.max(work[3+pingPong],work[7+pingPong]));
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
dMin=-0.0;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
work[l-1]=Math.min(work[i-1],Math.min(work[3+pingPong],work[7+pingPong]));
work[l-2*pingPong]=Math.min(work[i-2*pingPong],Math.min(work[6+pingPong],work[6+pingPong]));
qMax=Math.max(qMax,Math.max(work[3+pingPong],work[7+pingPong]));
dMin=-0.0;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
qMax=Math.max(qMax,Math.max(work[3+pingPong],work[7+pingPong]));
dMin=-0.0;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
ei=TOLERANCE;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b2*(work[i]/work[i4-2]);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=a2+TOLERANCE;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(TOLERANCE,ei)<TOLERANCE||TOLERANCE<a2){
break;
}
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>1;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>2;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>4;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-fourI;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=(householderVectors.length>=i)?0:1;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=householderVectors.length;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
cachedVt=MatrixUtils.createRealMatrix(householderVectors.length,m);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterpolationArray(work,work);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[fourI-2]=dN2+work[i];
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[fourI]=work[i+2]*(work[j4p2]/work[j4-2]);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=work[i+2]*(dN2/work[fourI-2])-tau;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ei=Math.min(dMin,dN1);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=ei;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fourI=j4+4;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
n+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
++n;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
checkBinomial(n,n);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==1)||(k==n-1)){
return n;
}
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>n/2)return binomialCoefficient(n,n-k);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>n/2){
return binomialCoefficientDouble(n,n-k);
}
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==1)||(k==n-1)){
return n;
}
double sumOffDiag=0;
checkBinomial(n,n);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,dN2);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sumOffDiag=Math.min(eMin,work[n]);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=Math.min(eMin,work[n-1]);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN=0;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sumOffDiag=0;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
int sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
int sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=0;
int sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
dN1=0;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
tau=0;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
tau=0;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
dN1=0;
int sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
tau=0;
int sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
tau=0;
int sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
dN1=0;
tau=0;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
dN1=0;
tau=0;
int sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
l+=4;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
n+=pingPong;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
l+=4;
n+=pingPong;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int sumOffDiag=ei;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
work[j4]=work[j4p2]*i;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
work[j4]=work[j4p2+2]*(work[j4p2]/work[j4-2]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
work[j4]=work[j4p2]*i;
work[j4]=work[j4p2+2]*(work[j4p2]/work[j4-2]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
imagEigenvalues[n]=0.0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
new double[n+1][n]=0.0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getVT().walkInOptimizedOrder(new DefaultRealMatrixPreservingVisitor(){
  /** 
 * {@inheritDoc} 
 */
  @Override public void visit(  final int row,  final int column,  final double value){
    data[row][column]=value / singularValues[row];
  }
}
,0,i-1,0,n-1);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=ei;
for(int i=0;i<n-1;++i){
n+=pingPong;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int sumOffDiag=0;
for(int i=0;i<n-1;++i){
n+=pingPong;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int sumOffDiag=ei;
for(int i=0;i<n-1;++i){
n+=pingPong;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[n-7]+(sumOffDiag+work[k-5]);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-3]*=work[k-7]/TOLERANCE;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-7]=TOLERANCE;
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
setInterpolatedTime(TOLERANCE);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
System.arraycopy(work,0,work,0,n);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
x0+=ei;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
r0=TOLERANCE;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
char sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
checkIndex(pingPong+n-1);
double sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(pingPong+n-1);
double sumOffDiag=pingPong;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(pingPong+n-1);
int sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(pingPong+n-1);
int sumOffDiag=pingPong;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,827
========
for(int i=0;i<=n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
pingPong--;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<n-1;++i){
lower=Math.min(ei,work[pingPong+pingPong]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work=new double[i];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;j<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
fourI++;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
z*=-work[6*i+2];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
eigenvector[i]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
z*=-work[6*i+2];
eigenvector[i]=ei;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[fourI]=Math.abs(sumOffDiag);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<binCount-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
z*=-work[6*i-1];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
z*=-work[6*i-1];
eigenvector[i]=ei;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i++;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;k<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
iterationCount=i;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=2*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<n-1;++i){
yCurrent[i]=yPrevious[twoI-n]-yPrevious[twoI-n+1];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<n-1;++i){
 final int fourI=2*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nvars-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<begin-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i+i)>internalArray.length){
expandTo(startIndex+i);
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pingPong=i;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
v[i]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
ak2=TOLERANCE;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*medianResidual;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(work[i]/(6*TOLERANCE)>=1){
robustnessWeights[i]=0;
}else {
 final double fourI=1-work[i]/(6*TOLERANCE)*arg;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
gradient[i]=sumOffDiag;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=work[fourI];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<begin-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
yCurrent[i]=yPrevious[twoI]+yPrevious[twoI+1];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=0.0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=Math.max((int)(fourI*n),n+1);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=ei;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;length<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setSeed(19650218);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
index+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work1[i]+=jacobian[index]*TOLERANCE;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=n-1;++i){
index+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=fourI-TOLERANCE;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
sumExpected+=expected[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
countSum2+=observed2[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<m-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
sixI+=6;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<=n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<pos-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<index-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lmDir[permutation[i]]-=TOLERANCE*jacobian[index];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(true){
throw MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration",i,i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;j<n-1;++i){
if(true){
throw MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration",i,i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
x2=TOLERANCE;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
y2=TOLERANCE;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
x2=TOLERANCE;
y2=TOLERANCE;

sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<n-1;++i){
index+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
y[i]-=TOLERANCE*jacobian[index];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
numElements-=i;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;j<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pingPong++;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i++;
pingPong++;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*xMean;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
result+=(sumOffDiag*ei-fourI)/(i+1);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
z[j]+=imagEigenvalues[i]*TOLERANCE;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;j<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
dev=values[i]-TOLERANCE;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
outBlock[outIndex++]=block[i*jWidth+jColumn];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
block[i*jWidth+jColumn]=mBlock[mIndex++];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<begin-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createArithmeticException("Array contains an infinite element, {0} at index {1}",work[i],i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=pingPong;i<n-1;++i){
dev=values[i]-TOLERANCE;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<begin-1;++i){
dev=values[i]-TOLERANCE;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<begin-1;++i){
dev=values[i]-TOLERANCE;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(eMin>=4*qMax){
diagMin=Math.min(eMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
diagMax=Math.max(ei,work[i]+work[i+2]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
offDiagMin=Math.min(eMin,work[i+2]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(eMin>=4*qMax){
diagMin=Math.min(eMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
diagMax=Math.max(ei,work[i]+work[i+2]);
offDiagMin=Math.min(eMin,work[i+2]);

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j]=(work[j]-sumOffDiag)/lmDiag[j];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<0){
i=-i-2;
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=polynomials.length){
i--;
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
midPoint+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
c[i]=y[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
d[i]=y[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
c[i]=y[i];
d[i]=y[i];

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;j<n-1;++i){
 final int fourI=4*j;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*j;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
c=polynoms[j][i]+TOLERANCE*fourI;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;j<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;j<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;j<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[n-1]=imagEigenvalues[n];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n-1]+=fourI*imagEigenvalues[n-1];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[n-1]=imagEigenvalues[n];
for(int i=0;k<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues=imagEigenvalues;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;j<=n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues=imagEigenvalues;
for(int i=0;i<=n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues=imagEigenvalues;
for(int i=0;j<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues=imagEigenvalues;
for(int i=0;j<=n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
mIY=optimaValues[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
mIY=Double.NaN;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
residuals[i]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
cost+=residualsWeights[i]*ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
residuals[i]=ei;
cost+=residualsWeights[i]*ei;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
a[i]=divdiff[0];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
x[i]=sumOffDiag+fourI;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
x[n-i]=sumOffDiag-fourI;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
x[i]=sumOffDiag+fourI;
x[n-i]=sumOffDiag-fourI;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n>>1]=2.0*work[n>>1];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[0]=0.0;
for(int i=0;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n>>1]=2.0*work[n>>1];
for(int i=0;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=0.0;
work[n>>1]=2.0*work[n>>1];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[0]=0.0;
work[n>>1]=2.0*work[n>>1];
for(int i=0;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[0]=imagEigenvalues[n];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues[0]=imagEigenvalues[n];
for(int i=0;i<=n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<n-1;++i){
polynoms[j+4][i]=16*(yMidDots[j][i]+sumOffDiag*polynoms[j+2][i]-fourI*polynoms[j][i]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final double fourI=4*j;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;j<n-1;++i){
 final double fourI=4*j;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(Double.isNaN(work[i])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<n-1;++i){
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<n-1;++i){
if(weights[i]<0){
throw MathRuntimeException.createIllegalArgumentException("negative weight {0} at index {1} ",work[i],i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(Double.isNaN(work[i])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",i);
}
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",i);
}
if(weights[i]<0){
throw MathRuntimeException.createIllegalArgumentException("negative weight {0} at index {1} ",work[i],i);
}

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<n-1;++i){
if(Double.isNaN(work[i])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<n-1;++i){
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<begin-1;++i){
if(Double.isNaN(work[i])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<begin-1;++i){
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(Double.isNaN(work[i])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",i);
}
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=ei;i<begin-1;++i){
if(Double.isNaN(work[i])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<begin-1;++i){
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<n-1;++i){
if(Double.isNaN(work[i])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",i);
}
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<begin-1;++i){
if(Double.isNaN(work[i])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",i);
}
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<begin-1;++i){
if(Double.isNaN(work[i])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",i);
}
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<4*n-11;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<n0-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<4*n-11;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*yScale;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*n;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<n-1;++i){
 final double fourI=4*n;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[6*pingPong+1]=imagEigenvalues[nM1]+TOLERANCE;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[6*pingPong]=TOLERANCE;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<n-1;++i){
 final int fourI=4*sin;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
jacobian[i][pk]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
jacobian[i][pk]=ei;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*ratio;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
eCurrent=Math.abs(work[i]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[lowerStart+i]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lowerSpectra=Math.min(lowerSpectra,ei);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[upperStart+i]=main[i]+fourI+eMin;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
upperSpectra=Math.max(upperSpectra,main[i]+fourI+eMin);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
eCurrent=Math.abs(work[i]);
work[lowerStart+i]=ei;
lowerSpectra=Math.min(lowerSpectra,ei);
work[upperStart+i]=main[i]+fourI+eMin;
upperSpectra=Math.max(upperSpectra,main[i]+fourI+eMin);

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i]=TOLERANCE*TOLERANCE+fourI;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i]=Math.abs(imagEigenvalues[i]-imagEigenvalues[i]);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*z;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(imagEigenvalues[pingPong]-x[i+j]==0.0){
throw new DuplicateSampleAbscissaException(imagEigenvalues[i],i,i+pingPong);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
c[j]=fourI*(imagEigenvalues[pingPong+1]-work[j])/imagEigenvalues[pingPong]-x[i+j];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
d[j]=sumOffDiag*(imagEigenvalues[pingPong+1]-work[j])/imagEigenvalues[pingPong]-x[i+j];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(imagEigenvalues[pingPong]-x[i+j]==0.0){
throw new DuplicateSampleAbscissaException(imagEigenvalues[i],i,i+pingPong);
}
c[j]=fourI*(imagEigenvalues[pingPong+1]-work[j])/imagEigenvalues[pingPong]-x[i+j];
d[j]=sumOffDiag*(imagEigenvalues[pingPong+1]-work[j])/imagEigenvalues[pingPong]-x[i+j];

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
jacobian[i*cols+pk]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
jacobian[i*cols+pk]=ei;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-1;++i){
 final int fourI=4*sin;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final double fourI=4*sin;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
 final int fourI=4*sin;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-1;++i){
 final double fourI=4*sin;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
 final int fourI=4*sin;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
 final double fourI=4*sin;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
 final double fourI=4*sin;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
x[i]=fourI-Math.sin(i*Math.PI/n)*(imagEigenvalues[i]-f[n-i]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
x[n-i]=fourI+Math.sin(i*Math.PI/n)*(imagEigenvalues[i]-f[n-i]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
x[i]=fourI-Math.sin(i*Math.PI/n)*(imagEigenvalues[i]-f[n-i]);
x[n-i]=fourI+Math.sin(i*Math.PI/n)*(imagEigenvalues[i]-f[n-i]);

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n>>1]=imagEigenvalues[n>>1];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n>>1]=imagEigenvalues[n>>1];
for(int i=0;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(i>=n){
 final double Math.abs(ei-sumOffDiag)=Math.abs(ei-sumOffDiag);
 final double fourI=TOLERANCE*(Math.abs(sumOffDiag)+Math.abs(ei));
if((Math.abs(ei-sumOffDiag)<=fourI)||(Math.abs(ei-sumOffDiag)<=TOLERANCE)){
setResult(ei,i);
return TOLERANCE;
}
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(Double.isInfinite(TOLERANCE)||Double.isNaN(TOLERANCE)){
throw new OptimizationException("unable to perform Q.R decomposition on the {0}x{1} jacobian matrix",pingPong,pingPong);
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(i>=n){
 final double Math.abs((4*ei-sumOffDiag)/3.0-TOLERANCE)=Math.abs((4*ei-sumOffDiag)/3.0-TOLERANCE);
 final double fourI=TOLERANCE*(Math.abs(TOLERANCE)+Math.abs((4*ei-sumOffDiag)/3.0));
if((Math.abs((4*ei-sumOffDiag)/3.0-TOLERANCE)<=fourI)||(Math.abs((4*ei-sumOffDiag)/3.0-TOLERANCE)<=TOLERANCE)){
setResult((4*ei-sumOffDiag)/3.0,i);
return TOLERANCE;
}
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
olds=(4*ei-sumOffDiag)/3.0;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(i>=n){
 final double Math.abs((4*ei-sumOffDiag)/3.0-TOLERANCE)=Math.abs((4*ei-sumOffDiag)/3.0-TOLERANCE);
 final double fourI=TOLERANCE*(Math.abs(TOLERANCE)+Math.abs((4*ei-sumOffDiag)/3.0));
if((Math.abs((4*ei-sumOffDiag)/3.0-TOLERANCE)<=fourI)||(Math.abs((4*ei-sumOffDiag)/3.0-TOLERANCE)<=TOLERANCE)){
setResult((4*ei-sumOffDiag)/3.0,i);
return TOLERANCE;
}
}
olds=(4*ei-sumOffDiag)/3.0;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
minRatioPositions=new ArrayList<Integer>();
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j+2]=work[i]*ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
d*=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j+2]=work[i]*ei;
d*=ei;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*scalRelativeTolerance;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
after[i]+=previous[i]+scaled[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final double fourI=4*yScale;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*sigma;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
cachedVt.setEntry(i,i,1.0);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<n-1;++i){
cachedVt.setEntry(i,i,1.0);
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(ltI[i]<TOLERANCE){
throw new NotPositiveDefiniteMatrixException();
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
ltI[i]=Math.sqrt(imagEigenvalues[i]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(ltI[i]<TOLERANCE){
throw new NotPositiveDefiniteMatrixException();
}
ltI[i]=Math.sqrt(imagEigenvalues[i]);

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;k<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ei=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;minor<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
x+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(imagEigenvalues,0,work,0,n);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Arrays.sort(work);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(imagEigenvalues,0,work,0,n);
Arrays.sort(work);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=n-2*fourI;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=work[i-2];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ei=dN1;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fourI==0){
throw new MathException("Loess expects at least 1 point");
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ei=n>0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==n){
return ;
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isStrictlyIncreasing(work)){
throw MathRuntimeException.createIllegalArgumentException("knot values must be strictly increasing");
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.i=knots.length-1;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.work=new double[i+1];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,this.knots,0,i+1);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.pingPong=n;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=0.0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ei=work[i-5]/work[nn-7];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=i-9;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<n-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i4<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=pingPong;i4<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i4<n-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<start-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i4<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i4<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i4<n-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<start-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i4<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i4<n-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<start-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i4<start-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i4<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i4<start-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i4<start-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>1;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>2;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=TOLERANCE;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=b2*(work[i]/work[i4-2]);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=a2+TOLERANCE;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE||TOLERANCE<a2){
break;
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j4-2]=dN2+work[j4-1];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
d=dN2*work[4*n+3+1]/work[j4-2]-tau;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
dMin=Math.min(ei,dN2);
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<n-1;++i){
work[j4]=work[j4-1]*work[4*n+3+1]/work[j4-2];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j4-2]=dN2+work[j4-1];
d=dN2*work[4*n+3+1]/work[j4-2]-tau;
dMin=Math.min(ei,dN2);
work[j4]=work[j4-1]*work[4*n+3+1]/work[j4-2];

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j4-3]=dN2+work[j4];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
d=dN2*work[4*n+3+2]/work[j4-3]-tau;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j4-1]=work[j4]*work[4*n+3+2]/work[j4-3];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j4-3]=dN2+work[j4];
d=dN2*work[4*n+3+2]/work[j4-3]-tau;
dMin=Math.min(ei,dN2);
work[j4-1]=work[j4]*work[4*n+3+2]/work[j4-3];

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;row<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
dMin2=Math.min(ei,work[i-1]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[l-1]=Math.min(work[i-1],Math.min(work[3+pingPong],work[7+pingPong]));
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[l-2*pingPong]=Math.min(work[i-2*pingPong],Math.min(work[6+pingPong],work[6+pingPong]));
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
qMax=Math.max(qMax,Math.max(work[3+pingPong],work[7+pingPong]));
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<n-1;++i){
dMin2=Math.min(ei,work[i-1]);
work[l-1]=Math.min(work[i-1],Math.min(work[3+pingPong],work[7+pingPong]));
work[l-2*pingPong]=Math.min(work[i-2*pingPong],Math.min(work[6+pingPong],work[6+pingPong]));
qMax=Math.max(qMax,Math.max(work[3+pingPong],work[7+pingPong]));

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-fourI;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(TOLERANCE==0.0){
break;
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<n-1;++i){
if(work[i4]>work[i4-2]){
return ;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
b2=TOLERANCE*(work[i4]/work[i4-2]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<n-1;++i){
if(TOLERANCE==0.0){
break;
}
if(work[i4]>work[i4-2]){
return ;
}
b2=TOLERANCE*(work[i4]/work[i4-2]);
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(TOLERANCE==0.0){
break;
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=pingPong;i<n-1;++i){
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i4<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(TOLERANCE==0.0){
break;
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i4<n-1;++i){
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(TOLERANCE==0.0){
break;
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<start-1;++i){
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(TOLERANCE==0.0){
break;
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=pingPong;i4<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(TOLERANCE==0.0){
break;
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i4<n-1;++i){
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(TOLERANCE==0.0){
break;
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<start-1;++i){
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<n-1;++i){
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(TOLERANCE==0.0){
break;
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=0;i4<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(TOLERANCE==0.0){
break;
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i4<start-1;++i){
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i4<n-1;++i){
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(TOLERANCE==0.0){
break;
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<start-1;++i){
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(TOLERANCE==0.0){
break;
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i4<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(TOLERANCE==0.0){
break;
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i4<start-1;++i){
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i4<n-1;++i){
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(TOLERANCE==0.0){
break;
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<start-1;++i){
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(TOLERANCE==0.0){
break;
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i4<start-1;++i){
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(TOLERANCE==0.0){
break;
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ei=work[i-4]/work[np-2];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=work[n-9]/work[nn-11];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=n-13;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=MatrixUtils.createRealMatrix(pingPong,m);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;k<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
n+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
innerPart+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;k<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
l+=4;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
n+=pingPong;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
l+=4;
n+=pingPong;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;col<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[n]=0.0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new double[n+1][n]=0.0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fourI==1){
imagEigenvalues[0]=0.0;
return transformed;
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
yCurrent[i]=yPrevious[twoI]+yPrevious[twoI+1];
 final int fourI=2*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
l+=4;
n+=pingPong;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
l+=4;
l+=4;
n+=pingPong;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
n+=pingPong;
l+=4;
n+=pingPong;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
l+=4;
n+=pingPong;
l+=4;
n+=pingPong;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[n-7]+(TOLERANCE+work[k-5]);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-3]*=work[k-7]/TOLERANCE;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-7]=TOLERANCE;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
checkBinomial(n,i);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i==1)||(k==n-1)){
return n;
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkBinomial(n,i);
if((i==1)||(k==n-1)){
return n;
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<n-1;++i){
yCurrent[i]=yPrevious[twoI-n]-yPrevious[twoI-n+1];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
yCurrent[i]=yPrevious[twoI-n]-yPrevious[twoI-n+1];
 final int fourI=2*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<n-1;++i){
yCurrent[i]=yPrevious[twoI-n]-yPrevious[twoI-n+1];
 final int fourI=2*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
x0+=ei;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getVT().walkInOptimizedOrder(new DefaultRealMatrixPreservingVisitor(){
  /** 
 * {@inheritDoc} 
 */
  @Override public void visit(  final int row,  final int column,  final double value){
    data[row][column]=value / singularValues[row];
  }
}
,0,i-1,0,n-1);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,828
org.apache.commons.math.linear.EigenDecompositionImpl,829
org.apache.commons.math.linear.EigenDecompositionImpl,830
org.apache.commons.math.linear.EigenDecompositionImpl,833
org.apache.commons.math.linear.EigenDecompositionImpl,839
========
tType=0;
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin1=0;
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dMin1=0;
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==1){
return new double[]{0};
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag!=0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(data.length==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(refI.length==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(xval.length!=yval.length){
throw new MathException("Loess expects the abscissa and ordinate arrays "+"to be of the same size, ",xval.length,yval.length);
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[0]!=0.0){
throw MathRuntimeException.createIllegalArgumentException("first element is not 0: {0}",f[0]);
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==pingPong){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag!=pingPong){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==pingPong){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=pingPong){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==pingPong)||(k==0)){
return 0;
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==1)||(k==n-1)){
return Math.log(n);
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==pingPong)||(k==0)){
return 1;
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==1)||(k==n-1)){
return n;
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==pingPong)||(k==0)){
return 1.0;
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Arrays.sort(work);
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(work,0,work,0,n);
if(sumOffDiag==pingPong){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Arrays.sort(work);
if(sumOffDiag==pingPong){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(work,0,work,0,n);
Arrays.sort(work);
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(work,0,work,0,n);
Arrays.sort(work);
if(sumOffDiag==pingPong){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
if(pingPong>n){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) exceeds n ({1})",k,n);
}
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
if(pingPong==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
tau=(work[1]-range[0])*MathUtils.EPSILON+2*minPivot;
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processGeneralBlock(n);
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=Math.max((int)(Math.min(4,Math.pow(TOLERANCE/TOLERANCE,0.5/abscissas.length))*n),n+1);
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE;
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==pingPong+n){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
checkIndex(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==pingPong){
return ;
}
flipIfWarranted(n,2);
checkIndex(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==pingPong+n){
return ;
}
flipIfWarranted(n,2);
checkIndex(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data.length!=0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,842
========
dMin1=0;
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin2=0;
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin1=0;
dMin2=0;
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
super();
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
initialSplits(n);
cachedVt=null;
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
TOLERANCE=0.0;
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n++;
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
initialSplits(n);
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("invalid number of elements {0} (must be positive)",n);
}
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
n=cachedVt.getRowDimension();
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=null;
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
setInterpolatedTime(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
initialSplits(n);
tType=tType;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
tType=tType;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
verifyIterationCount();
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
initialSplits(n);
tType=source.n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dest.value=source.value;
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
if(pingPong==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
initialSplits(n);
work=new double[Math.min(n,n)];
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
work=new double[Math.min(n,n)];
cachedVt=null;
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
resetEvaluations();
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
storeTime(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
System.arraycopy(work,0,work,0,n);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
checkIndex(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(pingPong+n-1);
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==pingPong)||(k==0)){
return 0;
}
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==1)||(k==n-1)){
return Math.log(n);
}
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
main=new double[Math.min(cachedVt.getRowDimension(),n)];
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
checkIndex(pingPong+n-1);
flipIfWarranted(n,2);
checkIndex(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processGeneralBlock(n);
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n==pingPong)||(k==0)){
return 1;
}
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==1)||(k==n-1)){
return n;
}
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==pingPong)||(k==0)){
return 1.0;
}
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
initialSplits(n);
++n;
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
initialSplits(n);
n=Math.max((int)(Math.min(4,Math.pow(TOLERANCE/TOLERANCE,0.5/abscissas.length))*n),n+1);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
initialSplits(n);
tau=0.25*dMin1;
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
if(dMin1==dN1){
tau=0.5*dMin1;
}
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
tau=0.25*dMin1;
if(dMin1==dN1){
tau=0.5*dMin1;
}
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[n-5]>work[nn-7]){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
initialSplits(n);
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-6;
flipIfWarranted(n,2);
initialSplits(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=-6;
flipIfWarranted(n,2);
initialSplits(n);
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
if(TOLERANCE>(TOLERANCE+TOLERANCE)){
TOLERANCE=Math.min(s,a2-(b1+b2));
}
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
initialSplits(n);
tau=Math.max(TOLERANCE,0.333*dMin);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
System.arraycopy(work,0,work,0,n);
storeTime(n);
tType=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,845
========
flipIfWarranted(n,2);
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin1=0;
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
dMin1=0;
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
super();
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
if(dMin1==dN1){
dMin1=0.5*dMin1;
}
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=0;
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
cachedVt=null;
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("invalid number of elements {0} (must be positive)",n);
}
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[n-5]>work[nn-7]){
return ;
}
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n++;
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setInterpolatedTime(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
if(n<0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
work=new double[Math.min(n,n)];
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=source.n;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyIterationCount();
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=pingPong;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
dMin=Math.min(dMin,dN1);
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
pingPong=j4+4;
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=pingPong;
dMin=Math.min(dMin,dN1);
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pingPong==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=0;
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=(n==n)?0:0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sigmaLow=0;
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sigmaLow=0;
initialSplits(n);
tType=(n==n)?0:0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
processGeneralBlock(n);
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
storeTime(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((n==pingPong)||(k==0)){
return 0;
}
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==1)||(k==n-1)){
return Math.log(n);
}
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=0;
if(TOLERANCE>(TOLERANCE+TOLERANCE)){
TOLERANCE=Math.min(s,a2-(b1+b2));
}
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resetEvaluations();
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==pingPong)||(k==0)){
return 1;
}
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==1)||(k==n-1)){
return n;
}
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==pingPong)||(k==0)){
return 1.0;
}
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=0;
dN1=work[tType+2]*(dN2/work[n-2])-tau;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
n=j4+4;
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=pingPong;
dN1=work[tType+2]*(dN2/work[n-2])-tau;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
dN1=work[tType+2]*(dN2/work[n-2])-tau;
dMin=Math.min(dMin,dN1);
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=pingPong;
dN1=work[tType+2]*(dN2/work[n-2])-tau;
dMin=Math.min(dMin,dN1);
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
checkIndex(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(pingPong+n-1);
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=0;
++n;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(pingPong+n-1);
checkIndex(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=0;
dMin1=tType;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
if((n!=sample2.length)||(n<1)){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same positive length ({0} and {1})",n,sample2.length);
}
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=0;
dMin=work[4*n+pingPong]-tau;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(work,0,work,0,n);
storeTime(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,846
========
dN=0;
tType=0;
dMin1=0;
dMin2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
tType=0;
dMin1=0;
dMin2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
dN1=0;
tType=0;
dMin1=0;
dMin2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dMin1==dN1){
dMin2=0.5*dMin1;
}
tType=0;
dMin1=0;
dMin2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[n-5]>work[nn-7]){
return ;
}
tType=0;
dMin1=0;
dMin2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=tType;
dMin1=0;
dMin2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dMin=Math.min(dMin,dN1);
dMin1=0;
dMin2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=tType+2*pingPong-1;
tType=0;
dMin1=0;
dMin2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=tType;
dMin=Math.min(dMin,dN1);
dMin1=0;
dMin2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=pingPong;
dMin1=0;
dMin2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dMin1=0;
dMin=Math.min(dMin,dMin1);
dMin2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=j4+4;
tType=0;
dMin1=0;
dMin2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=pingPong;
dMin1=0;
dMin=Math.min(dMin,dMin1);
dMin2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dMin1=0;
TOLERANCE=Math.sqrt(TOLERANCE*b2);
dMin2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,847
========
tType=0;
dMin1=0;
dMin2=0;
dN=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
dMin1=0;
dMin2=0;
dN=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dN1=0;
dMin1=0;
dMin2=0;
dN=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin1=0;
dMin2=0;
work[n]=0.0;
dN=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin1=0;
if(dMin1==dN1){
dN=0.5*dMin1;
}
dMin2=0;
dN=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[n-5]>work[nn-7]){
return ;
}
dMin1=0;
dMin2=0;
dN=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin1=0;
dMin2=0;
dN=pingPong;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin1=0;
dMin2=0;
n=j4+4;
dN=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,dN);
dMin1=0;
dMin2=0;
dN=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=j4+4;
dMin1=0;
dMin2=0;
dN=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n+2*pingPong-1;
dMin1=0;
dMin2=0;
dN=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n+2]=dN;
dMin1=0;
dMin2=0;
dN=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n-pingPong-1]=eMin;
dMin1=0;
dMin2=0;
dN=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n+2]=dN;
work[4*n-pingPong-1]=eMin;
dMin1=0;
dMin2=0;
dN=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin1=0;
TOLERANCE=Math.sqrt(TOLERANCE*b2);
dMin2=0;
dN=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,848
========
tType=0;
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin1=0;
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dMin1=0;
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin2=0;
dN=0;
work[n]=0.0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin2=0;
work[n]=0.0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0.0;
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0.0;
dMin2=0;
work[n]=0.0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[n-5]>work[nn-7]){
return ;
}
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin2=0;
dN=pingPong;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin2=0;
n=j4+4;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n+2]=dN;
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n-pingPong-1]=eMin;
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n+2]=dN;
work[4*n-pingPong-1]=eMin;
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[n-4]>work[np-2]){
return ;
}
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin2=0;
work[n]=work[n+2]*(work[j4p2]/work[j4-2]);
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=j4+4;
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(TOLERANCE*b2);
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,849
========
dMin1=0;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin2=0;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin1=0;
dMin2=0;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
work[n]=0.0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n]=0.0;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0.0;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n]=0.0;
dN=0.0;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[n-5]>work[nn-7]){
return ;
}
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN=pingPong;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=j4+4;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n+2]=dN;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n-pingPong-1]=eMin;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n+2]=dN;
work[4*n-pingPong-1]=eMin;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[n-4]>work[np-2]){
return ;
}
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n]=work[n+2]*(work[j4p2]/work[j4-2]);
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,850
========
dMin2=0;
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin2=0;
dN1=0;
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
if(dMin1==dN1){
tau=0.5*dMin1;
}
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n]=0.0;
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
work[4*n-3-pingPong]=0.0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
updateSigma(tau);
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
updateSigma(tau);
dN1=0;
work[4*n-3-pingPong]=0.0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
dN2=0;
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
dN2=0;
tau=pingPong;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
dN2=0;
n=j4+4;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n]=work[n+2]*(work[j4p2]/work[j4-2]);
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=j4+4;
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n-4]>work[np-2]){
return ;
}
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=0;
TOLERANCE=TOLERANCE*a2;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(dN2,n,n);
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
processGeneralBlock(n);
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 0
TESTING : math_81
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.apache.commons.math.linear.EigenSolverTest::testInvertible
  - org.apache.commons.math.linear.EigenSolverTest::testSolveDimensionErrors
  - org.apache.commons.math.linear.EigenSolverTest::testSolve
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testBigMatrix
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testVOrthogonal
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testAEqualVDVt
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testEigenvalues
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testDimensions
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testTridiagonal
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testEigenvectors
Failing tests: 10
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(dN2,n,n);
processGeneralBlock(n);
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n-2]=dN1+work[n];
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n+2]=dN1;
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n-2]=dN1+work[n];
work[n]=work[n+2]*(work[j4p2]/work[j4-2]);
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-2]=dN1+work[n];
work[n+2]=dN1;
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n]=work[n+2]*(work[j4p2]/work[j4-2]);
work[n+2]=dN1;
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-2]=dN1+work[n];
work[n]=work[n+2]*(work[j4p2]/work[j4-2]);
work[n+2]=dN1;
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,851
========
dN=0;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
dN1=0;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n-3-pingPong]=0.0;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
updateSigma(tau);
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n-3-pingPong]=0.0;
updateSigma(tau);
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN2=0;
tau=0;
double i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=0;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin1==dN1){
tau=0.5*dMin1;
}
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i0=-9;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=0;
if(i0==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=-6;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eMin=work[4*n+2];
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n-2]=eMin;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN2=0;
tau=0;
int i0=pingPong;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN2=pingPong;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n>=n){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=goodStep(n,n0);
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=0;
tau=0;
boolean i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(dN2,n,n);
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
processGeneralBlock(n);
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 0
TESTING : math_81
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.apache.commons.math.linear.EigenSolverTest::testInvertible
  - org.apache.commons.math.linear.EigenSolverTest::testSolveDimensionErrors
  - org.apache.commons.math.linear.EigenSolverTest::testSolve
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testBigMatrix
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testVOrthogonal
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testAEqualVDVt
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testEigenvalues
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testDimensions
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testTridiagonal
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testEigenvectors
Failing tests: 10
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ldlTDecomposition(dN2,n,n);
processGeneralBlock(n);
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=TOLERANCE*a2;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=-3;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=0;
work[n-2]=dN2+work[n];
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN2=0;
work[n]=work[n+2]*(work[j4p2]/work[j4-2]);
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,tau);
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin=Math.min(dMin,tau);
dN2=0;
work[n-2]=dN2+work[n];
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i0=work[4*n+pingPong]-tau;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=0;
work[n-2]=dN1+work[n];
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n+2]=tau;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN2=0;
work[n-2]=dN1+work[n];
work[n]=work[n+2]*(work[j4p2]/work[j4-2]);
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n+2]=tau;
dN2=0;
work[n-2]=dN1+work[n];
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n+2]=tau;
dN2=0;
work[n]=work[n+2]*(work[j4p2]/work[j4-2]);
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n+2]=tau;
dN2=0;
work[n-2]=dN1+work[n];
work[n]=work[n+2]*(work[j4p2]/work[j4-2]);
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,854
========
dN2=0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=0;
double i0=0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
double i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0=0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
long i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=p1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=q1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=0;
int i0=0;
n0=n>0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0<1){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",n);
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i0|=mask>>1;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dest.n=source.n;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=pingPong;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=0;
int i0=i0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*pingPong-2]=eMin;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=0;
n0=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*pingPong-2]=eMin;
tau=0;
int i0=pingPong;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n0<0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n++;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==0){
return ;
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sumOffDiag==0){
return ;
}
initialSplits(n);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sumOffDiag==0){
return ;
}
i0=0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
initialSplits(n);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
i0=0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
i0=0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
i0=0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==0){
return ;
}
initialSplits(n);
i0=0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
initialSplits(n);
i0=0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);
i0=0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=0.0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[0]=0.0;
tau=0;
int i0=0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=n0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=length;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(n0)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2",n);
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=cachedVt.getRowDimension();
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0=cachedVt.getColumnDimension();
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=null;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=0;
int i0=0;
if(xval.length!=yval.length){
throw new MathException("Loess expects the abscissa and ordinate arrays "+"to be of the same size, ",xval.length,yval.length);
}
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0==0){
throw new MathException("Loess expects at least 1 point");
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*i0-3-pingPong]=0.0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
updateSigma(tau);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=0;
incrementIterationsCounter();
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin1==dN1){
tau=0.5*dMin1;
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i0=-9;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0<2||n!=sample2.length){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same length and at least two elements ({0} and {1})",n,sample2.length);
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
double i0=0;
int n0=length;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(n0)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2 plus one",f.length);
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n0][0]=work.clone()[0];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=(householderVectors.length>=n)?0:1;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=(householderVectors.length>=n)?0:0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
work[0]=0.0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=0;
work[0]=0.0;
double i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
work[0]=0.0;
int i0=0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
work[0]=0.0;
double i0=0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=(work==null)?0:0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(b.length!=i0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,m);
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
verifyInterval(minPivot,TOLERANCE);
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
verifyIterationCount();
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work=new double[Math.min(n,n0)];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(cachedVt.getRowDimension()!=i0){
throw MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",b.getRowDimension(),b.getColumnDimension(),m,"n");
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=stepStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=stepSize;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(work,0,work,0,n);
tau=0;
int i0=0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=i0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0<1){
throw MathRuntimeException.createIllegalArgumentException("empty polynomials coefficients array");
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=MatrixUtils.createRealMatrix(i0,m);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=max;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=min;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=np;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
long i0=0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
if(x.length<3){
throw MathRuntimeException.createIllegalArgumentException("{0} points are required, got only {1}",3,x.length);
}
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>(TOLERANCE+TOLERANCE)){
TOLERANCE=Math.min(s,a2-(b1+b2));
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=-3;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=step;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE*a2;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<TOLERANCE){
TOLERANCE=TOLERANCE*(1-Math.sqrt(a2))/(1+a2);
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
if((n0!=sample2.length)||(n<1)){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same positive length ({0} and {1})",n,sample2.length);
}
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
if((i0+1>=i0)&&(TOLERANCE<=TOLERANCE)){
setResult(TOLERANCE,i);
return TOLERANCE;
}
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0=Math.max((int)(Math.min(4,Math.pow(TOLERANCE/TOLERANCE,0.5/abscissas.length))*n),n+1);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eMin=work[4*i0+2];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=subStep;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
double i0=n0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=n0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
double i0=n0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
++n;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
double n0=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
++n;
int n0=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
double n0=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
++n;
int n0=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
++n;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
++n;
double n0=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
++n;
double n0=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=oneFourthCount;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=threeFourthCount;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
boolean n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=(work==null)?0:0;
int n0=length;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resetEvaluations();
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i0==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=-6;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=BlockRealMatrix.BLOCK_SIZE;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=0;
int i0=0;
int n0=BLOCK_SIZE;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
checkIndex(n+n-1);
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=nthRootOfAbs;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=0;
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
double i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
verifyInterval(minPivot,TOLERANCE);
double i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
verifyInterval(minPivot,TOLERANCE);
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
verifyInterval(minPivot,TOLERANCE);
double i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
verifyInputArray(work,work);
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=d;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
if(dN2==0.0){
for(int i0=0;k<n;++k){
if((i0!=k)&&(work[i]==x[k])){
throw MathRuntimeException.createArithmeticException("identical abscissas x[{0}] == x[{1}] == {2} cause division by zero",i,k,x[i]);
}
}
}
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-1]=work[n];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n-1]+=tau*work[n-1];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n-1]=work[n];
tau=0;
int i0=0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-1]+=tau*work[n-1];
tau=0;
int i0=0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-1]=work[n];
work[n-1]+=tau*work[n-1];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n-1]=work[n];
work[n-1]+=tau*work[n-1];
tau=0;
int i0=0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=a;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=b;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
double n0=p1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
++n;
int n0=p1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
++n;
double n0=p1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
char i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=tau;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0=work[4*n+pingPong]-tau;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin1=-work[4*n+pingPong];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin1=-work[4*n+pingPong];
tau=0;
int i0=0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0-2]=dN2+work[i0];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=work[i0+2]*(work[j4p2]/work[j4-2]);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=work[i0+2]*(dN2/work[i0-2])-tau;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,dN1);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=0;
int i0=0;
int n0=nStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0-2]=dN1+work[i0];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN=work[i0+2]*(dN1/work[i0-2])-tau;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0+2]=dN;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
double i0=i0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=n0;
int n0=length;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(n0)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2",n);
}
tau=0;
int i0=n0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(n0)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2",n);
}
tau=0;
int i0=0;
int n0=length;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(n0)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2",n);
}
tau=0;
int i0=n0;
int n0=length;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
double n0=stepStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
tau=0;
int i0=0;
int n0=stepStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
double n0=stepSize;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
tau=0;
int i0=0;
int n0=stepSize;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
tau=0;
int i0=0;
double n0=stepStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
tau=0;
int i0=0;
double n0=stepSize;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=z;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=divider;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=i0;
int n0=nStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resetEvaluations();
tau=0;
int i0=0;
int n0=length;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,855
org.apache.commons.math.linear.EigenDecompositionImpl,856
UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

========
if(work[i+2]<0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i0]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i0]<0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
numElements-=i;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
i0=4*i+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
work[i+2]=-sigma;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
diagMax=0;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
offDiagMin=work[i+6];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
previousEMin=work[i+7];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
work[i+2]=-sigma;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];

i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
work[i+2]=-sigma;
i0=4*i+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
diagMax=0;
i0=4*i+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
offDiagMin=work[i+6];
i0=4*i+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
work[i+2]=-sigma;
diagMax=0;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
work[i+2]=-sigma;
offDiagMin=work[i+6];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
diagMax=0;
offDiagMin=work[i+6];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
work[i+2]=-sigma;
diagMax=0;
i0=4*i+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
work[i+2]=-sigma;
offDiagMin=work[i+6];
i0=4*i+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
diagMax=0;
offDiagMin=work[i+6];
i0=4*i+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
work[i+2]=-sigma;
diagMax=0;
offDiagMin=work[i+6];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
work[i+2]=-sigma;
diagMax=0;
offDiagMin=work[i+6];
i0=4*i+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i++;
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(1.5*work[pingPong]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(1.5*work[pingPong]<0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=work[i-5]/work[nn-7];
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=i-9;
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=work[i-9]/work[nn-11];
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=i-13;
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=n0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=i0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[n0]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n0]=Math.sqrt(ltI[i]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n0]<0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
work[j4-1]=0.0;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
d=work[j4+2];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
dMin=dN2;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
work[j4-1]=0.0;
d=work[j4+2];
dMin=dN2;

i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
work[j4]=0.0;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
d=work[j4+1];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
work[j4]=0.0;
d=work[j4+1];
dMin=dN2;

i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b2*(work[i]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=a2+TOLERANCE;
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b1*(work[i]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b2+TOLERANCE;
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
dN1=work[j4p2+2];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
dMin=dN1;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
work[j4]=0.0;
dN1=work[j4p2+2];
dMin=dN1;

i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
work[j4]=0.0;
dMin=dN1;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
dN=work[j4p2+2];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
dMin=dN;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i+2]<=0){
work[j4]=0.0;
dN=work[j4p2+2];
dMin=dN;

i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
work[j4]=0.0;
dMin=dN;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
obs1=observed1[i];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
obs2=observed2[i];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
obs1=observed1[i];
obs2=observed2[i];

i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i-1]=work[n];
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i0=goodStep(i0,n0);
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
pingPong=1-pingPong;
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i0=goodStep(i0,n0);
if(work[i+2]<=n0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
pingPong=1-pingPong;
if(work[i+2]<=n0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i0=goodStep(i0,n0);
pingPong=1-pingPong;
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
i0=goodStep(i0,n0);
pingPong=1-pingPong;
if(work[i+2]<=n0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(TOLERANCE<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=b2*(work[i]/work[i4-2]);
TOLERANCE=a2+TOLERANCE;
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

========
if(diagMin>=4*offDiagMax){
diagMin=Math.min(TOLERANCE,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax==0){
lmPar=g/TOLERANCE;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=Math.max((int)(Math.min(4,Math.pow(TOLERANCE/TOLERANCE,0.5/abscissas.length))*n),n+1);
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=TOLERANCE;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.min(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
diagMin=Math.min(upper,TOLERANCE+100*MathUtils.EPSILON);
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=offDiagMax*Math.min(delta,10.0*TOLERANCE);
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE/=offDiagMax;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
diagMin=Math.max(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diagMin>4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offDiagMax>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offDiagMax>4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
hNew=TOLERANCE;
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
r=i0;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
work[i+2]=-0.0;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
diagMin=work[pingPong];
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
diagMin=work[pingPong];
if(diagMin>=4*offDiagMax){
work[i+2]=-0.0;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diagMin>=4*offDiagMax){
mt[0]=mt[N-1];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin++;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diagMin>=4*offDiagMax){
iterationCount=i0;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
numElements-=diagMin;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i+offDiagMax)>internalArray.length){
expandTo(startIndex+i);
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=offDiagMax;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diagMin>=4*offDiagMax){
x2=TOLERANCE;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE-TOLERANCE;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0++;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(getEntry(offDiagMax)-work[i])>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
oldDelta=TOLERANCE;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
x2=TOLERANCE;
oldDelta=TOLERANCE;

diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0++;
if(diagMin>=4*offDiagMax){
x2=TOLERANCE;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin++;
if(diagMin>=4*offDiagMax){
mt[0]=mt[N-1];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0++;
if(diagMin>=4*offDiagMax){
mt[0]=mt[N-1];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin++;
i0++;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
diagMin++;
i0++;
if(diagMin>=4*offDiagMax){
mt[0]=mt[N-1];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
outBlock=out.blocks[++outBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
mBlock=matrix.blocks[++mBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
work[i]=-0.0;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diagMin>=4*offDiagMax){
work[j]=diagMin;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
work[j+2]=0.0;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
work[i]=-0.0;
work[j]=diagMin;
work[j+2]=0.0;

diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i0]>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues[i-1]=imagEigenvalues[n];
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[i0]=TOLERANCE*TOLERANCE+i-TOLERANCE*TOLERANCE;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues[i0]=Math.abs(imagEigenvalues[i]-work[i]);
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[i0]=TOLERANCE*TOLERANCE+i-TOLERANCE*TOLERANCE;
imagEigenvalues[i0]=Math.abs(imagEigenvalues[i]-work[i]);
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(TOLERANCE>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diagMin>=4*offDiagMax){
nextColumn=i0;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diagMin>4*offDiagMax){
nextColumn=i0;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>=4*offDiagMax){
nextColumn=i0;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>4*offDiagMax){
nextColumn=i0;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i0-7]+(diagMin+work[k-5]);
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0-3]*=work[k-7]/TOLERANCE;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0-7]=TOLERANCE;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(diagMin>=4*offDiagMax){
diagMin=Math.min(TOLERANCE,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax==0){
lmPar=g/TOLERANCE;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(TOLERANCE,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(offDiagMax==0){
lmPar=g/TOLERANCE;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(offDiagMax==0){
lmPar=g/TOLERANCE;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(TOLERANCE,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=offDiagMax*Math.min(delta,10.0*TOLERANCE);
TOLERANCE/=offDiagMax;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax*TOLERANCE>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offDiagMax*TOLERANCE>4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diagMin*offDiagMax>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(TOLERANCE)<=i){
setResult(TOLERANCE,0);
return TOLERANCE;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterval(offDiagMax,TOLERANCE);
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[l-1]=Math.min(work[n0-1],Math.min(work[3+i],work[7+pingPong]));
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[l-2*pingPong]=Math.min(work[n0-2*i],Math.min(work[6+pingPong],work[6+pingPong]));
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
dMin=-0.0;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
work[l-1]=Math.min(work[n0-1],Math.min(work[3+i],work[7+pingPong]));
work[l-2*pingPong]=Math.min(work[n0-2*i],Math.min(work[6+pingPong],work[6+pingPong]));
dMin=-0.0;

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
work[i+2]=-sigma;
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
diagMax=0;
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
offDiagMin=work[i+6];
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
previousEMin=work[i+7];
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
work[i+2]=-sigma;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];

i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<=0){
work[i+2]=-sigma;
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<=0){
diagMax=0;
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<=0){
offDiagMin=work[i+6];
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
work[i+2]=-sigma;
diagMax=0;
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
work[i+2]=-sigma;
offDiagMin=work[i+6];
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
diagMax=0;
offDiagMin=work[i+6];
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<=0){
work[i+2]=-sigma;
diagMax=0;
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<=0){
work[i+2]=-sigma;
offDiagMin=work[i+6];
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<=0){
diagMax=0;
offDiagMin=work[i+6];
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
work[i+2]=-sigma;
diagMax=0;
offDiagMin=work[i+6];
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<=0){
work[i+2]=-sigma;
diagMax=0;
offDiagMin=work[i+6];
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sum/=diag[pj];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(offDiagMin,0.1);
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(offDiagMin,0.1);
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sum/=diag[pj];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sum/=diag[pj];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sum/=diag[pj];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(offDiagMin,0.1);
}
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(offDiagMin,0.1);
}
if(offDiagMax==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(offDiagMax==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(offDiagMin,0.1);
}
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sum/=diag[pj];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(offDiagMin,0.1);
}
if(offDiagMax==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sum/=diag[pj];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(offDiagMax==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sum/=diag[pj];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(offDiagMin,0.1);
}
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(offDiagMax==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(offDiagMin,0.1);
}
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(offDiagMax==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sum/=diag[pj];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.min(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sumOffDiag=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
offDiagMin=Math.min(paru,lmPar);
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.max(diagMax,lmPar+TOLERANCE/(diagMin*sumOffDiag));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[j4]=work[j4-1]*work[i+1]/work[j4-2];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[j4]=work[j4+1]*(work[j4-1]/work[j4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=Math.min(dMin,diagMax);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=Math.min(eMin,work[i]);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[j4-1]=work[j4]*work[i+2]/work[j4-3];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[j4-1]=work[j4+2]*(work[j4]/work[j4-3]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.min(eMin,work[i-1]);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.max(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
tType=-8;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
tType=-8;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.max(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=offDiagMin;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy((coefficients.length<p.coefficients.length)?p.coefficients:coefficients,offDiagMin,new double[diagMax],lowLength,diagMax-lowLength);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(coefficients.length<p.coefficients.length){
for(int i=offDiagMin;i<diagMax;++i){
new double[diagMax][i]=-p.coefficients[i];
}
}else {
System.arraycopy(coefficients,lowLength,newCoefficients,lowLength,highLength-lowLength);
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(countEigenValues(diagMin,offDiagMin,n)>=1){
right=diagMin;
}else {
left=diagMin;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=Math.max(lower,TOLERANCE-100*MathUtils.EPSILON);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=diagMax-TOLERANCE;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=i0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
n=Math.max((int)(Math.min(4,Math.pow(Math.abs(TOLERANCE-diagMin)/Math.max(diagMax,TOLERANCE*(Math.abs(diagMin)+Math.abs(TOLERANCE))),0.5/abscissas.length))*n),n+1);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
oldt=TOLERANCE;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
n=Math.max((int)(Math.min(4,Math.pow(Math.abs(TOLERANCE-diagMin)/Math.max(diagMax,TOLERANCE*(Math.abs(diagMin)+Math.abs(TOLERANCE))),0.5/abscissas.length))*n),n+1);
oldt=TOLERANCE;

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(countEigenValues(offDiagMax,diagMax,n)>=n){
right=offDiagMax;
}else {
left=offDiagMax;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.min(upper,TOLERANCE+100*MathUtils.EPSILON);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
index+=n;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMax=work[i0-13]/work[nn-15];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=a2+offDiagMax;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax!=0.0){
for(int i=4*n-10+pingPong;i4>=4*n0+2+pingPong;i4-=4){
 final double diagMax=offDiagMin;
if(work[i4]>work[i4-2]){
return ;
}
b1=b1*(work[i4]/work[i4-2]);
b2=b2+b1;
if(100*Math.max(b1,oldB1)<b2){
break;
}
}
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=Math.sqrt(yDDotOnScale)/offDiagMax;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(100.0*Math.abs(h),diagMax);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.max(h,1.0E-12*Math.abs(offDiagMin));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax<getMinStep()){
h=getMinStep();
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.length);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.min(dMin,diagMin);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
diagMax=offDiagMin;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=Math.min(dMin,diagMin);
diagMax=offDiagMin;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
work[j4]=work[j4p2]*work[i+2]/work[n0-2];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[j4]=work[j4p2+2]*(work[j4p2]/work[j4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.min(dMin,diagMax);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n0+2]=diagMax;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=Math.min(dMin,diagMax);
work[n0+2]=diagMax;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diagMin<Math.max(i+1,(9*iMin+n)/10)){
index=low;
}else if(index>Math.min(n-1,(i+9*iMax)/10)){
index=high;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
lmPar*=0.5;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rescale(work,y,work);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
null.storeTime(offDiagMin);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2)+offDiagMax;i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=n0*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=2*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(diagMin)<=TOLERANCE){
setResult(TOLERANCE,i0);
return TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(diagMax)<=Math.max(offDiagMax*Math.abs(TOLERANCE),offDiagMin)){
setResult(TOLERANCE,i0);
return TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(diagMax)<=TOLERANCE){
setResult(TOLERANCE-(MathUtils.sign(offDiagMax)*MathUtils.sign(TOLERANCE))*(TOLERANCE-TOLERANCE)/Math.sqrt(diagMin),i0);
return TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
sixI+=6;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
progressiveQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,diagMax);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
progressiveQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,diagMax);
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(diagMax)<=TOLERANCE){
setResult(isSequence(TOLERANCE,TOLERANCE,TOLERANCE)?xplus:TOLERANCE+(-2.0*offDiagMax)/(TOLERANCE-Math.sqrt(diagMin)),n);
return TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
i0--;
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
rDiag[minor]=(work[i0]>0)?-Math.sqrt(diagMax):Math.sqrt(xNormSqr);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if((work[i0]>0)?-Math.sqrt(diagMax):Math.sqrt(xNormSqr)!=0.0){
qrtMinor[minor]-=(work[i0]>0)?-Math.sqrt(diagMax):Math.sqrt(xNormSqr);
for(int i0+1=i0+1;i0+1<n0;i0+1++){
double TOLERANCE=0;
for(int i=i0;i<i0;i++){
alpha-=qrtCol[row]*qrtMinor[row];
}
alpha/=(work[i0]>0)?-Math.sqrt(diagMax):Math.sqrt(xNormSqr)*qrtMinor[minor];
for(int i=i0;i<i0;i++){
qrtCol[row]-=TOLERANCE*qrtMinor[row];
}
}
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
rDiag[minor]=(work[i0]>0)?-Math.sqrt(diagMax):Math.sqrt(xNormSqr);
if((work[i0]>0)?-Math.sqrt(diagMax):Math.sqrt(xNormSqr)!=0.0){
qrtMinor[minor]-=(work[i0]>0)?-Math.sqrt(diagMax):Math.sqrt(xNormSqr);
for(int i0+1=i0+1;i0+1<n0;i0+1++){
double TOLERANCE=0;
for(int i=i0;i<i0;i++){
alpha-=qrtCol[row]*qrtMinor[row];
}
alpha/=(work[i0]>0)?-Math.sqrt(diagMax):Math.sqrt(xNormSqr)*qrtMinor[minor];
for(int i=i0;i<i0;i++){
qrtCol[row]-=TOLERANCE*qrtMinor[row];
}
}
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n+i)>internalArray.length){
expandTo(startIndex+i);
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=i;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
reject=true;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
bytes[bytesOut++]=(byte)i0;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(n==bytes.length){
return ;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
bytes[bytesOut++]=(byte)i0;
if(n==bytes.length){
return ;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
cachedVt.setEntry(Math.min(i0,diagMax)-1,minor,1.0);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=minPivot+TOLERANCE;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[i0-1]=TOLERANCE;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[0]=minPivot+TOLERANCE;
for(int i=4*(n0-2);i>=i0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[i0-1]=TOLERANCE;
for(int i=4*(n0-2);i>=i0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[0]=minPivot+TOLERANCE;
work[i0-1]=TOLERANCE;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[0]=minPivot+TOLERANCE;
work[i0-1]=TOLERANCE;
for(int i=4*(n0-2);i>=i0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.midpoint(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
setResult(diagMax,offDiagMin);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
vector[i]++;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=rawData.length;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
outBlock=out.blocks[++outBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
outBlock[outIndex++]=block[i*jWidth+jColumn];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
mBlock=matrix.blocks[++mBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
block[i*jWidth+jColumn]=mBlock[mIndex++];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(Math.abs(getEntry(diagMax)-work[i])>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.length);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
list[target]=list[i];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
list[i]=i0;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
list[target]=list[i];
list[i]=i0;

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
absDCurrent=Math.abs(main[i+1]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=n0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=diagMin){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[i+1]=TOLERANCE;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i+1]=TOLERANCE;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0.0){
return TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterval(minPivot,diagMax);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[n]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(Double.isNaN(work[n])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n);
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(Double.isInfinite(work[n])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n);
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(weights[i]>0.0){
containsPositiveWeight=true;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(Double.isNaN(work[n])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n);
}
if(Double.isInfinite(work[n])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n);
}
if(weights[i]>0.0){
containsPositiveWeight=true;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[n]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(Double.isNaN(work[n])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n);
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(Double.isInfinite(work[n])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n);
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[n]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(Double.isNaN(work[n])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n);
}
if(work[i+2]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(Double.isInfinite(work[n])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n);
}
if(work[i+2]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(Double.isNaN(work[n])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n);
}
if(work[n]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(Double.isInfinite(work[n])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n);
}
if(work[n]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(Double.isNaN(work[n])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n);
}
if(Double.isInfinite(work[n])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n);
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[n]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(Double.isNaN(work[n])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n);
}
if(work[i+2]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(Double.isInfinite(work[n])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n);
}
if(work[i+2]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(Double.isNaN(work[n])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n);
}
if(work[n]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(Double.isInfinite(work[n])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n);
}
if(work[n]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(Double.isNaN(work[n])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n);
}
if(Double.isInfinite(work[n])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n);
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(Double.isNaN(work[n])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n);
}
if(work[n]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(Double.isInfinite(work[n])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n);
}
if(work[n]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(Double.isNaN(work[n])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n);
}
if(Double.isInfinite(work[n])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n);
}
if(work[i+2]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(Double.isNaN(work[n])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n);
}
if(Double.isInfinite(work[n])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n);
}
if(work[n]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(Double.isNaN(work[n])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n);
}
if(work[n]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(Double.isInfinite(work[n])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n);
}
if(work[n]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(Double.isNaN(work[n])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n);
}
if(Double.isInfinite(work[n])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n);
}
if(work[i+2]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(Double.isNaN(work[n])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n);
}
if(Double.isInfinite(work[n])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n);
}
if(work[n]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(Double.isNaN(work[n])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n);
}
if(Double.isInfinite(work[n])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n);
}
if(work[n]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
work[j]=dN2+work[i];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-3-diagMin]=dN2;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=1-pingPong;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
diagMin=1-pingPong;
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
diagMin=1-pingPong;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
diagMin=1-pingPong;
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<0){
i=-i-2;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=polynomials.length){
i--;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[diagMin]-xval[n0]>xval[n0]-xval[i]){
n0=ileft;
}else {
edge=iright;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
nearest=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
c[i]=y[i];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
d[i]=y[i];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
c[i]=y[i];
d[i]=y[i];

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((offDiagMin>0)==(diagMin>0)){
diagMax=TOLERANCE;
y2=TOLERANCE;
offDiagMax=TOLERANCE-x0;
TOLERANCE=delta;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0++;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
offDiagMax=offDiagMin;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=TOLERANCE;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=x1+TOLERANCE;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((TOLERANCE>0)==(diagMin>0)){
diagMax=offDiagMax;
y2=TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=diagMax-offDiagMin;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0++;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
offDiagMax=offDiagMin;
i0++;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
main=new double[diagMax];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondary=new double[diagMax-1];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=null;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
cachedV=null;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
cachedVt=null;
cachedV=null;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=offDiagMax;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offDiagMax>=n0){
 final double Math.abs(diagMax-diagMin)=Math.abs(diagMax-diagMin);
 final double offDiagMin=TOLERANCE*(Math.abs(olds)+Math.abs(s));
if((delta<=rLimit)||(delta<=TOLERANCE)){
setResult(s,i);
return TOLERANCE;
}
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
tiesTrace=new ArrayList<Integer>();
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
out[ranks[i].getPosition()]=i0;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i0]=TOLERANCE*TOLERANCE+offDiagMin;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues[i0]=Math.abs(imagEigenvalues[i]-imagEigenvalues[i]);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=diagMin;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(offDiagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
nextColumn=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(Double.isInfinite(offDiagMin)||Double.isNaN(offDiagMin)){
throw new OptimizationException("unable to perform Q.R decomposition on the {0}x{1} jacobian matrix",diagMax,diagMin);
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=diagMin;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=diagMin;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(offDiagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(offDiagMin>4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=diagMin;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(offDiagMin>4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isRootOK(diagMin,offDiagMax,solve(new Complex[coefficients.length],offDiagMin))){
setResult(z.getReal(),diagMax);
return TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(TOLERANCE>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(Double.isInfinite(TOLERANCE)||Double.isNaN(TOLERANCE)){
throw new EstimationException("unable to perform Q.R decomposition on the {0}x{1} jacobian matrix",diagMax,n);
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(TOLERANCE>4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>4*offDiagMax){
nextColumn=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(TOLERANCE>=4*offDiagMax){
nextColumn=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(TOLERANCE>4*offDiagMax){
nextColumn=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b1*=work[i4]/work[i4-2];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(100*TOLERANCE<diagMax){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
b1*=work[i4]/work[i4-2];
if(100*TOLERANCE<diagMax){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(100*TOLERANCE<diagMax){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
if(100*TOLERANCE<diagMax){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
verifyIterationCount();
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=offDiagMax;i-=4){
if(work[i+2]<=n0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=(TOLERANCE-minPivot)/(Double.valueOf(n0)).doubleValue();
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=i0;i-=4){
if(work[i+2]<=n0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=i0;i-=4){
oldt=TOLERANCE;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
oldt=TOLERANCE;
if(work[i+2]<=n0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=i0;i-=4){
oldt=TOLERANCE;
if(work[i+2]<=n0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
++i0;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sumWeights+=tricube((i<n0)?TOLERANCE-work[i]:xk-x*diagMin)*work[i];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sumX+=work[i]*tricube((i<n0)?TOLERANCE-work[i]:xk-x*diagMin)*work[i];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
sumXY+=work[i]*work[i]*tricube((i<n0)?TOLERANCE-work[i]:xk-x*diagMin)*work[i];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
sumWeights+=tricube((i<n0)?TOLERANCE-work[i]:xk-x*diagMin)*work[i];
sumX+=work[i]*tricube((i<n0)?TOLERANCE-work[i]:xk-x*diagMin)*work[i];
sumXY+=work[i]*work[i]*tricube((i<n0)?TOLERANCE-work[i]:xk-x*diagMin)*work[i];

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
ltI[i]=Math.sqrt(work[i]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=i0;i-=4){
if(work[i+2]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=i0;i-=4){
if(work[i]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=i0;i-=4){
if(work[i]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
minRatioPositions=new ArrayList<Integer>();
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=i-2*n0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=work[n-2];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
diagMax=dN1;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=work[n-4]/work[np-2];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i-9]>work[nn-11]){
return ;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=work[i-9]/work[nn-11];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=i-13;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=work[n-2];
diagMax=dN1;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=i-2){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*(n0-2);i>=0;i-=4){
if(dN2==0.0){
for(int diagMax=0;diagMax<i;++diagMax){
if((i0!=diagMax)&&(x[i]==x[k])){
throw MathRuntimeException.createArithmeticException("identical abscissas x[{0}] == x[{1}] == {2} cause division by zero",i0,diagMax,work[i]);
}
}
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
tc[n-1]=c[n];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
coefficients[n-1]+=imagEigenvalues[i0]/dN2*tc[n-1];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(dN2==0.0){
for(int diagMax=0;diagMax<i;++diagMax){
if((i0!=diagMax)&&(x[i]==x[k])){
throw MathRuntimeException.createArithmeticException("identical abscissas x[{0}] == x[{1}] == {2} cause division by zero",i0,diagMax,work[i]);
}
}
}
tc[n-1]=c[n];
coefficients[n-1]+=imagEigenvalues[i0]/dN2*tc[n-1];

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=-offDiagMax*work[i0]+i*qtbpj;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=diagMax;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues[i0*n0+offDiagMax]=i*TOLERANCE+TOLERANCE*imagEigenvalues[k];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=-TOLERANCE*work[i0]+i*qtbpj;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*diagMin-8]=sigma+work[i-7];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*diagMin-4]=sigma+work[i-3];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin-=2;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new CombinedEventsManager().addEventHandler(new EndTimeChecker(offDiagMin),Double.POSITIVE_INFINITY,Math.ulp(Math.max(Math.abs(diagMax),Math.abs(endTime))),100);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
offDiagMin=Math.min(paru,lmPar);
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=0;
TOLERANCE=Math.max(diagMax,lmPar+TOLERANCE/(diagMin*sumOffDiag));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
offDiagMin=Math.min(paru,lmPar);
}
TOLERANCE=Math.max(diagMax,lmPar+TOLERANCE/(diagMin*sumOffDiag));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
offDiagMin=Math.min(paru,lmPar);
}
TOLERANCE=Math.max(diagMax,lmPar+TOLERANCE/(diagMin*sumOffDiag));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
outBlock=out.blocks[++outBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
outBlock[outIndex++]=block[i*jWidth+jColumn];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
outBlock[outIndex++]=block[i*jWidth+jColumn];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
outBlock=out.blocks[++outBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
outBlock[outIndex++]=block[i*jWidth+jColumn];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
outBlock=out.blocks[++outBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
mBlock=matrix.blocks[++mBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
block[i*jWidth+jColumn]=mBlock[mIndex++];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
block[i*jWidth+jColumn]=mBlock[mIndex++];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
mBlock=matrix.blocks[++mBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
block[i*jWidth+jColumn]=mBlock[mIndex++];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
mBlock=matrix.blocks[++mBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifySequence(minPivot,TOLERANCE,TOLERANCE);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>=maxIter){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) exceeds collection size ({1})");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>maxIter){
throw MathRuntimeException.createIllegalArgumentException("sample size ({0}) exceeds collection size ({1})");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>=maxIter){
if(maxIter<67){
return Math.log(binomialCoefficient(n,i0));
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIter){
if(maxIter<1030){
return Math.log(binomialCoefficientDouble(n,i0));
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIter){
if(maxIter<67){
return binomialCoefficient(n,i0);
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIter){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",maxIter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>=maxIter){
throw MathRuntimeException.createIllegalArgumentException("sample size must be positive ({0})",maxIter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>=maxIter){
throw new DimensionMismatchException(maxIter,k);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIter){
throw MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^31",i0,maxIter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>=maxIter){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",i0,maxIter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>=maxIter){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) exceeds n ({1})",k,maxIter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>maxIter){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) exceeds n ({1})",k,maxIter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>=maxIter){
throw MathRuntimeException.createIllegalArgumentException("must have n >= k for binomial coefficient (n,k), got n = {0}, k = {1}",maxIter,k);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>=maxIter){
if((k==1)||(k==maxIter-1)){
return Math.log(n);
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIter){
if(k==0){
i0=i0;
return ;
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>=maxIter){
rank=i0;
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIter){
if((k==i0)||(k==0)){
return 1;
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkBinomial(k,i0);
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIter){
if((k==i0)||(k==0)){
return 1.0;
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIter){
if((k==i0)||(k==0)){
return 0;
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIter/2){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>=maxIter){
if(k>maxIter/2){
return binomialCoefficientDouble(n,n-k);
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>maxIter/2){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>=maxIter){
if(k>maxIter/2){
return binomialCoefficientLog(n,n-k);
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIter){
if((k==1)||(k==maxIter-1)){
return n;
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIter){
throw MathRuntimeException.createIllegalStateException("roots of unity have not been computed yet");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((maxIter<0)||(k>=k)){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",k,0,omegaCount-1);
}
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIter){
throw MathRuntimeException.createArithmeticException("identical abscissas x[{0}] == x[{1}] == {2} cause division by zero",i0,maxIter,work[i]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((maxIter<0)||(k>=k)){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",k,0,omegaCount-1);
}
if(k>=maxIter){
throw MathRuntimeException.createIllegalStateException("roots of unity have not been computed yet");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=n){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>=i0){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>=maxIter){
if(k>=i0){
return deflatedEnd;
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=i0;
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(k>=maxIter){
rank=i0;
if(k==0){
i0=i0;
return ;
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIter){
if(TOLERANCE>4*Math.max(1.0E-15,TOLERANCE)){
return false;
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.min(dMin,diagMax);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=Math.min(eMin,work[i]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=Math.min(dMin,diagMax);
previousEMin=Math.min(eMin,work[i]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=Math.min(eMin,work[i-1]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=Math.min(dMin,diagMax);
previousEMin=Math.min(eMin,work[i-1]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&TOLERANCE>i){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.max(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
if(TOLERANCE>(i+sigma)){
s=Math.min(diagMax,TOLERANCE-(i+sigma));
}
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&TOLERANCE>i){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.max(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=Math.min(dMin,diagMax);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=previousEMin;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=Math.min(dMin,diagMax);
offDiagMin=previousEMin;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[i+2]=diagMax;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=Math.min(dMin,diagMax);
work[i+2]=diagMax;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((i0<previousEMin)&&(costPerTimeUnit[k]<sigma*costPerTimeUnit[k-1])){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((i0<previousEMin)&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(imagEigenvalues[i0]<sigma*costPerTimeUnit[k-1])){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(imagEigenvalues[i0]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=orderControl2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i0<previousEMin)&&(work[i+2]<TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(imagEigenvalues[i0]<TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((i0<previousEMin)&&(imagEigenvalues[i0]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((i0<previousEMin)&&(imagEigenvalues[i0]<TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((0.1*TOLERANCE>=sigma)||(offDiagMin<0.1)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((0.1*TOLERANCE>=sigma)&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(offDiagMin<0.1)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((0.1*TOLERANCE>=sigma)&&(offDiagMin<0.1)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((i0+1>=i0)&&(Math.abs(TOLERANCE-TOLERANCE)<=Math.max(diagMax,TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(TOLERANCE))))){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((i0+1>=i0)&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(Math.abs(TOLERANCE-TOLERANCE)<=Math.max(diagMax,TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(TOLERANCE))))){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(previousEMin,diagMax)<TOLERANCE||sigma<TOLERANCE){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(previousEMin,diagMax)<TOLERANCE&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&sigma<TOLERANCE){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(previousEMin,diagMax)<TOLERANCE&&sigma<TOLERANCE){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&sigma>TOLERANCE*TOLERANCE){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(TOLERANCE,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
tType=-8;
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&sigma>TOLERANCE*TOLERANCE){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(TOLERANCE,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&sigma>TOLERANCE*TOLERANCE){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
tType=-8;
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
tType=-8;
diagMax=Math.max(TOLERANCE,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&sigma>TOLERANCE*TOLERANCE){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
tType=-8;
diagMax=Math.max(TOLERANCE,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(diagMax,previousEMin)<TOLERANCE||sigma<TOLERANCE){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(diagMax,previousEMin)<TOLERANCE&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(diagMax,previousEMin)<TOLERANCE&&sigma<TOLERANCE){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=Math.sqrt(TOLERANCE*b2);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i0-7]+work[nn-9]-Math.sqrt(work[nn-11])*Math.sqrt(work[nn-9])-sigma/(1+TOLERANCE*b2)>0.0&&gap2>TOLERANCE*sigma/(1+TOLERANCE*b2)){
diagMax=Math.max(TOLERANCE,a2*(1-TOLERANCE*a2));
}else {
tau=Math.max(s,a2*(1-cnst2*b2));
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(work[i0]-work[i])>(Math.max(Math.abs(work[i0]),Math.abs(work[i]))*sigma))&&(Math.abs(work[i0]-work[i])>TOLERANCE)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((Math.abs(work[i0]-work[i])>(Math.max(Math.abs(work[i0]),Math.abs(work[i]))*sigma))&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(Math.abs(work[i0]-work[i])>TOLERANCE)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((Math.abs(previousEMin-diagMax)>(Math.max(Math.abs(previousEMin),Math.abs(diagMax))*sigma))&&(Math.abs(previousEMin-diagMax)>TOLERANCE)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((Math.abs(previousEMin-diagMax)>(Math.max(Math.abs(previousEMin),Math.abs(diagMax))*sigma))&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(Math.abs(previousEMin-diagMax)>TOLERANCE)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.getEntry(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rescale(work,y,previousEMin);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
null.storeTime(TOLERANCE);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=TOLERANCE;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
i0--;
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((i0+i)>internalArray.length){
expandTo(startIndex+i);
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=i;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i0==i0&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&i0<i0){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i0==i0&&i0<i0){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i0<xval.length-1&&xval[right+1]-xval[i]<xval[i]-xval[left]){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i0<xval.length-1&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&work[i0+1]-xval[i0]<xval[i]-xval[i0]){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[np-8]>TOLERANCE||work[np-4]>sigma){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i0-8]>TOLERANCE&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&work[i0-4]>sigma){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i0-8]>TOLERANCE&&work[i0-4]>sigma){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(TOLERANCE)<Math.abs(previousEMin)){
TOLERANCE=TOLERANCE;
x1=TOLERANCE;
x2=x0;
TOLERANCE=y1;
y1=y2;
y2=y0;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(diagMax)<=Math.max(TOLERANCE*Math.abs(TOLERANCE),offDiagMin)){
setResult(TOLERANCE,i0);
return TOLERANCE;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((realEigenvalues[i]==0)&&(imagEigenvalues[i]==0)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((realEigenvalues[i0]==0)&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(imagEigenvalues[i0]==0)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((realEigenvalues[i0]==0)&&(imagEigenvalues[i0]==0)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.midpoint(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
setResult(diagMax,previousEMin);
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
setResult(diagMax,previousEMin);
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE-(MathUtils.sign(TOLERANCE)*MathUtils.sign(TOLERANCE))*(TOLERANCE-TOLERANCE)/Math.sqrt(diagMax)-TOLERANCE)<=Math.max(TOLERANCE*Math.abs(TOLERANCE-(MathUtils.sign(TOLERANCE)*MathUtils.sign(TOLERANCE))*(TOLERANCE-TOLERANCE)/Math.sqrt(diagMax)),offDiagMin)){
setResult(x,i0);
return TOLERANCE;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&work[i-1]>=xval[i]){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[j]=dN2;
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[j+2]=0.0;
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
d=work[i+2];
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[j]=dN2;
work[j+2]=0.0;
d=work[i+2];

work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n-3-pingPong]=dN2;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
pingPong=1-pingPong;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n-3-pingPong]=dN2;
pingPong=1-pingPong;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[k-7]=work[i-3];
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(isSequence(TOLERANCE,TOLERANCE,TOLERANCE)?xplus:TOLERANCE+(-2.0*TOLERANCE)/(TOLERANCE-Math.sqrt(offDiagMin))-TOLERANCE)<=Math.max(TOLERANCE*Math.abs(isSequence(TOLERANCE,TOLERANCE,TOLERANCE)?xplus:TOLERANCE+(-2.0*TOLERANCE)/(TOLERANCE-Math.sqrt(offDiagMin))),previousEMin)){
setResult(x,i0);
return TOLERANCE;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
obs1=observed1[i];
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
obs2=observed2[i];
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
obs1=observed1[i];
obs2=observed2[i];

diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i+1]=TOLERANCE;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues[i+1]=sigma;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[i+1]=TOLERANCE;
imagEigenvalues[i+1]=sigma;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(TOLERANCE<knots[0]||TOLERANCE>knots[n]){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<work[0]&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&TOLERANCE>work[n]){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Arrays.binarySearch(work,TOLERANCE)<0){
i=-i-2;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Arrays.binarySearch(work,TOLERANCE)>=polynomials.length){
i--;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<work[0]&&TOLERANCE>work[n]){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Arrays.binarySearch(work,TOLERANCE)<0){
i=-i-2;
}
if(TOLERANCE<work[0]&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Arrays.binarySearch(work,TOLERANCE)<0){
i=-i-2;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&TOLERANCE>work[n]){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Arrays.binarySearch(work,TOLERANCE)<0){
i=-i-2;
}
if(TOLERANCE<work[0]&&TOLERANCE>work[n]){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[i0]-xval[i0]>xval[i0]-xval[i]){
diagMax=ileft;
}else {
edge=iright;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!split&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
interpolatedState[i]+=TOLERANCE*previousEMin;
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
interpolatedDerivatives[i]+=(TOLERANCE*diagMax+sigma*previousEMin)/TOLERANCE;
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
interpolatedState[i]+=TOLERANCE*previousEMin;
interpolatedDerivatives[i]+=(TOLERANCE*diagMax+sigma*previousEMin)/TOLERANCE;

work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
interpolatedState[i]+=TOLERANCE*previousEMin;
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
interpolatedDerivatives[i]+=(TOLERANCE*diagMax+sigma*previousEMin)/TOLERANCE;
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
interpolatedState[i]+=TOLERANCE*previousEMin;
interpolatedDerivatives[i]+=(TOLERANCE*diagMax+sigma*previousEMin)/TOLERANCE;

diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((TOLERANCE>0)==(TOLERANCE>0)){
previousEMin=TOLERANCE;
y2=TOLERANCE;
TOLERANCE=diagMax-x0;
split=delta;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0++;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(TOLERANCE==0.0){
return TOLERANCE;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE)>Math.abs(TOLERANCE)){
diagMax=0.5*TOLERANCE;
}else {
delta=(TOLERANCE-previousEMin)/(1-y0/y1);
if(delta/oldDelta>1){
delta=0.5*oldDelta;
}
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=previousEMin;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
previousEMin=x1+diagMax;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE-previousEMin;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/1;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
tiesTrace=new ArrayList<Integer>();
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=diagMax*TOLERANCE+sumOffDiag/sumOffDiag-diagMax*i;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[i0]=Math.abs(work[i]-work[i]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[i0]=diagMax*TOLERANCE+sumOffDiag/sumOffDiag-diagMax*i;
work[i0]=Math.abs(work[i]-work[i]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues=work;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work=imagEigenvalues;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues=work;
work=imagEigenvalues;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
sin=1.0/Math.sqrt(1.0+TOLERANCE/imagEigenvalues[i0]*cotan);
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
sin=diagMax*imagEigenvalues[i0]/TOLERANCE;
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=-sigma*work[i0]+diagMax*qtbpj;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=diagMax*work[i0]+sigma*TOLERANCE;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diagMax==0.0){
for(int i0=0;k<i;++k){
if((i0!=k)&&(work[i]==x[k])){
throw MathRuntimeException.createArithmeticException("identical abscissas x[{0}] == x[{1}] == {2} cause division by zero",i,k,x[i]);
}
}
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i-1]=imagEigenvalues[n];
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues[i-1]+=imagEigenvalues[i0]/diagMax*imagEigenvalues[n-1];
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues[i-1]=imagEigenvalues[n];
imagEigenvalues[i-1]+=imagEigenvalues[i0]/diagMax*imagEigenvalues[n-1];
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
if(work[i-3]*(work[k-5]/0.5*((work[i-7]-work[k-3])+work[k-5]))<=0.5*((work[i-7]-work[k-3])+work[k-5])){
s=work[k-3]*work[k-5]/(0.5*((work[i-7]-work[k-3])+work[k-5])*(1+Math.sqrt(1+work[i-3]*(work[k-5]/0.5*((work[i-7]-work[k-3])+work[k-5]))/0.5*((work[i-7]-work[k-3])+work[k-5]))));
}else {
s=work[k-3]*work[k-5]/(0.5*((work[i-7]-work[k-3])+work[k-5])+Math.sqrt(0.5*((work[i-7]-work[k-3])+work[k-5])*(t+work[i-3]*(work[k-5]/0.5*((work[i-7]-work[k-3])+work[k-5])))));
}
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
t=work[k-7]+(work[i-3]*(work[k-5]/0.5*((work[i-7]-work[k-3])+work[k-5]))+work[k-5]);
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
if(work[i-3]*(work[k-5]/0.5*((work[i-7]-work[k-3])+work[k-5]))<=0.5*((work[i-7]-work[k-3])+work[k-5])){
s=work[k-3]*work[k-5]/(0.5*((work[i-7]-work[k-3])+work[k-5])*(1+Math.sqrt(1+work[i-3]*(work[k-5]/0.5*((work[i-7]-work[k-3])+work[k-5]))/0.5*((work[i-7]-work[k-3])+work[k-5]))));
}else {
s=work[k-3]*work[k-5]/(0.5*((work[i-7]-work[k-3])+work[k-5])+Math.sqrt(0.5*((work[i-7]-work[k-3])+work[k-5])*(t+work[i-3]*(work[k-5]/0.5*((work[i-7]-work[k-3])+work[k-5])))));
}
t=work[k-7]+(work[i-3]*(work[k-5]/0.5*((work[i-7]-work[k-3])+work[k-5]))+work[k-5]);
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);

work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
sigmaLow-=previousEMin-sigma;
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
sigma=previousEMin;
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
sigmaLow-=previousEMin-sigma;
sigma=previousEMin;

work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
sigma=previousEMin;
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
sigmaLow-=previousEMin-sigma;
sigma=previousEMin;
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
sigmaLow-=previousEMin-sigma;
sigmaLow-=previousEMin-sigma;
sigma=previousEMin;

work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
sigmaLow-=previousEMin-sigma;
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
sigma=previousEMin;
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
sigma=previousEMin;
sigmaLow-=previousEMin-sigma;
sigma=previousEMin;

work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
sigma=previousEMin;
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
sigma=previousEMin;
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
sigmaLow-=previousEMin-sigma;
sigma=previousEMin;

work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
sigma=previousEMin;
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
sigmaLow-=previousEMin-sigma;
sigma=previousEMin;
sigmaLow-=previousEMin-sigma;
sigma=previousEMin;

work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
sigmaLow-=previousEMin-sigma;
sigma=previousEMin;
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
sigma=previousEMin;
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
sigmaLow-=previousEMin-sigma;
sigmaLow-=previousEMin-sigma;
sigma=previousEMin;

work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
sigma=previousEMin;
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
sigma=previousEMin;
sigmaLow-=previousEMin-sigma;
sigma=previousEMin;

work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
sigma=previousEMin;
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
sigmaLow-=previousEMin-sigma;
sigma=previousEMin;
sigmaLow-=previousEMin-sigma;
sigma=previousEMin;

work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
sigma=previousEMin;
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
setResult(TOLERANCE,0);
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
largest=Math.abs(sumOffDiag);
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(previousEMin>=4*qMax){
diagMin=Math.min(previousEMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
diagMax=Math.max(diagMax,work[i]+work[i+2]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
offDiagMin=Math.min(offDiagMin,work[i+2]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(previousEMin>=4*qMax){
diagMin=Math.min(previousEMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(previousEMin>=4*qMax){
diagMin=Math.min(previousEMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(previousEMin>=4*qMax){
diagMin=Math.min(previousEMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
offDiagMin=Math.min(offDiagMin,work[i+2]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(previousEMin>=4*qMax){
diagMin=Math.min(previousEMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
if(previousEMin>=4*qMax){
diagMin=Math.min(previousEMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
diagMax=Math.max(diagMax,work[i]+work[i+2]);
if(previousEMin>=4*qMax){
diagMin=Math.min(previousEMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
offDiagMin=Math.min(offDiagMin,work[i+2]);
if(previousEMin>=4*qMax){
diagMin=Math.min(previousEMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(previousEMin>=4*qMax){
diagMin=Math.min(previousEMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(previousEMin>=4*qMax){
diagMin=Math.min(previousEMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
if(previousEMin>=4*qMax){
diagMin=Math.min(previousEMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(previousEMin>=4*qMax){
diagMin=Math.min(previousEMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
offDiagMin=Math.min(offDiagMin,work[i+2]);
if(previousEMin>=4*qMax){
diagMin=Math.min(previousEMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
if(previousEMin>=4*qMax){
diagMin=Math.min(previousEMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(previousEMin>=4*qMax){
diagMin=Math.min(previousEMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
if(previousEMin>=4*qMax){
diagMin=Math.min(previousEMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=Math.min(dMin,diagMax);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=Math.min(eMin,work[i]);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
previousEMin=Math.min(eMin,work[i-1]);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=Math.min(previousEMin,Math.max(lmPar,TOLERANCE));
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
lmPar=Math.sqrt(offDiagMin)/TOLERANCE;
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
diagMax=Math.min(previousEMin,Math.max(lmPar,TOLERANCE));
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
if(diagMax==0){
lmPar=Math.sqrt(offDiagMin)/TOLERANCE;
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=Math.min(previousEMin,Math.max(lmPar,TOLERANCE));
if(diagMax==0){
lmPar=Math.sqrt(offDiagMin)/TOLERANCE;
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
diagMax=Math.min(previousEMin,Math.max(lmPar,TOLERANCE));
if(diagMax==0){
lmPar=Math.sqrt(offDiagMin)/TOLERANCE;
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.max(diagMax,lmPar+sigma);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.max(diagMax,lmPar+TOLERANCE/(TOLERANCE*offDiagMin));
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
previousEMin=Math.min(dMin,diagMax);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=previousEMin;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=Math.min(dMin,diagMax);
offDiagMin=previousEMin;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[i+2]=diagMax;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy((coefficients.length<p.coefficients.length)?p.coefficients:coefficients,previousEMin,new double[diagMax],lowLength,diagMax-lowLength);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(coefficients.length<p.coefficients.length){
for(int i=previousEMin;i<diagMax;++i){
new double[diagMax][i]=-p.coefficients[i];
}
}else {
System.arraycopy(coefficients,lowLength,newCoefficients,lowLength,highLength-lowLength);
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((i+1>=i0)&&(Math.abs(TOLERANCE-TOLERANCE)<=Math.max(diagMax,sigma*(Math.abs(TOLERANCE)+Math.abs(TOLERANCE))))){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((i+1>=i0)&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(Math.abs(TOLERANCE-TOLERANCE)<=Math.max(diagMax,sigma*(Math.abs(TOLERANCE)+Math.abs(TOLERANCE))))){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
n=Math.max((int)(Math.min(4,Math.pow(Math.abs(TOLERANCE-TOLERANCE)/Math.max(diagMax,sigma*(Math.abs(TOLERANCE)+Math.abs(TOLERANCE))),0.5/abscissas.length))*n),n+1);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
oldt=TOLERANCE;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
n=Math.max((int)(Math.min(4,Math.pow(Math.abs(TOLERANCE-TOLERANCE)/Math.max(diagMax,sigma*(Math.abs(TOLERANCE)+Math.abs(TOLERANCE))),0.5/abscissas.length))*n),n+1);
oldt=TOLERANCE;

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=Math.max(lower,TOLERANCE-100*MathUtils.EPSILON);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=diagMax-TOLERANCE;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=upperSpectra+TOLERANCE;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=n0*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=2*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*pingPong;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=n0*pingPong;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=2*pingPong;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
b1=previousEMin*(work[i4]/work[i4-2]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
b2=TOLERANCE+previousEMin;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(100*Math.max(previousEMin,diagMax)<TOLERANCE){
break;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
b1=previousEMin*(work[i4]/work[i4-2]);
b2=TOLERANCE+previousEMin;
if(100*Math.max(previousEMin,diagMax)<TOLERANCE){
break;
}

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-n0;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(previousEMin==0.0){
break;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
b1=previousEMin;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
b2=previousEMin*(work[i4]/work[i4-2]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
a2=TOLERANCE+previousEMin;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(100*Math.max(previousEMin,diagMax)<TOLERANCE||sigma<TOLERANCE){
break;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(previousEMin==0.0){
break;
}
b1=previousEMin;
b2=previousEMin*(work[i4]/work[i4-2]);
a2=TOLERANCE+previousEMin;
if(100*Math.max(previousEMin,diagMax)<TOLERANCE||sigma<TOLERANCE){
break;
}

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-n0;i+=4){
if(previousEMin==0.0){
break;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-n0;i+=4){
if(100*Math.max(previousEMin,diagMax)<TOLERANCE||sigma<TOLERANCE){
break;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(previousEMin==0.0){
break;
}
if(100*Math.max(previousEMin,diagMax)<TOLERANCE||sigma<TOLERANCE){
break;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-n0;i+=4){
if(previousEMin==0.0){
break;
}
if(100*Math.max(previousEMin,diagMax)<TOLERANCE||sigma<TOLERANCE){
break;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
checkVectorDimensions(v.length);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(diagMax==0.0){
break;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
b1=diagMax;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
b2=diagMax*(work[i4]/work[i4-2]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
a2=TOLERANCE+diagMax;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(100*Math.max(diagMax,previousEMin)<TOLERANCE||sigma<TOLERANCE){
break;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(diagMax==0.0){
break;
}
b1=diagMax;
b2=diagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+diagMax;
if(100*Math.max(diagMax,previousEMin)<TOLERANCE||sigma<TOLERANCE){
break;
}

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(diagMax==0.0){
break;
}
if(100*Math.max(diagMax,previousEMin)<TOLERANCE||sigma<TOLERANCE){
break;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(previousEMin<Math.max(i+1,(9*iMin+n)/10)){
index=low;
}else if(index>n0){
index=high;
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((Math.abs(work[i]-work[i])>(Math.max(Math.abs(work[i]),Math.abs(work[i]))*TOLERANCE))&&(Math.abs(work[i]-work[i])>sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((Math.abs(work[i]-work[i])>(Math.max(Math.abs(work[i]),Math.abs(work[i]))*TOLERANCE))&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(Math.abs(work[i]-work[i])>sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((Math.abs(previousEMin-diagMax)>(Math.max(Math.abs(previousEMin),Math.abs(diagMax))*TOLERANCE))&&(Math.abs(previousEMin-diagMax)>sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((Math.abs(previousEMin-diagMax)>(Math.max(Math.abs(previousEMin),Math.abs(diagMax))*TOLERANCE))&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(Math.abs(previousEMin-diagMax)>sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
computeDerivatives(sigma+TOLERANCE,work,work);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
previousEMin=Math.sqrt(yDDotOnScale)/TOLERANCE;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(100.0*Math.abs(h),diagMax);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.max(h,1.0E-12*Math.abs(sigma));
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<getMinStep()){
h=getMinStep();
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.getEntry(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
cachedVt.setEntry(Math.min(i0,offDiagMin)-1,minor,1.0);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n0+i)>internalArray.length){
expandTo(startIndex+i);
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=i;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rescale(work,y,previousEMin);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
null.storeTime(TOLERANCE);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=TOLERANCE;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((realEigenvalues[i]==0)&&(imagEigenvalues[i]==0)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((realEigenvalues[n0]==0)&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(imagEigenvalues[n0]==0)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((realEigenvalues[n0]==0)&&(imagEigenvalues[n0]==0)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&work[i-1]>=xval[i]){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-1;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[0]=minPivot+sigma;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n0-1]=TOLERANCE;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[0]=minPivot+sigma;
for(int i=4*i0;i<4*n0-1;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n0-1]=TOLERANCE;
for(int i=4*i0;i<4*n0-1;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[0]=minPivot+sigma;
work[n0-1]=TOLERANCE;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[0]=minPivot+sigma;
work[n0-1]=TOLERANCE;
for(int i=4*i0;i<4*n0-1;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(previousEMin)<=TOLERANCE){
setResult(TOLERANCE,n);
return TOLERANCE;
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(diagMax)<=sigma){
setResult(TOLERANCE,n);
return TOLERANCE;
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
bytes[bytesOut++]=(byte)split;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(n0==bytes.length){
return ;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
bytes[bytesOut++]=(byte)split;
if(n0==bytes.length){
return ;
}

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
vector[i]++;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-2;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[j]=dN2;
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[j+2]=0.0;
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
d=work[i+2];
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[j]=dN2;
work[j+2]=0.0;
d=work[i+2];

work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
work[j]=dN2+work[i];
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-3-i0]=dN2;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=2*i0;i<4*n-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=2*i0;i<4*n0-2;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n0-3-i0]=dN2;
for(int i=2*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*pingPong;i<4*n-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*pingPong;i<4*n0-2;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n0-3-i0]=dN2;
for(int i=4*pingPong;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n-2;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n0-3-i0]=dN2;
for(int i=4*i0;i<4*n-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n0-3-i0]=dN2;
for(int i=4*i0;i<4*n0-2;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=2*pingPong;i<4*n-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=2*pingPong;i<4*n0-2;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n0-3-i0]=dN2;
for(int i=2*pingPong;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=2*i0;i<4*n-2;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n0-3-i0]=dN2;
for(int i=2*i0;i<4*n-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n0-3-i0]=dN2;
for(int i=2*i0;i<4*n0-2;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*pingPong;i<4*n-2;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n0-3-i0]=dN2;
for(int i=4*pingPong;i<4*n-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n0-3-i0]=dN2;
for(int i=4*pingPong;i<4*n0-2;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n0-3-i0]=dN2;
for(int i=4*i0;i<4*n-2;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=2*pingPong;i<4*n-2;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n0-3-i0]=dN2;
for(int i=2*pingPong;i<4*n-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n0-3-i0]=dN2;
for(int i=2*pingPong;i<4*n0-2;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n0-3-i0]=dN2;
for(int i=2*i0;i<4*n-2;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n0-3-i0]=dN2;
for(int i=4*pingPong;i<4*n-2;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
list[target]=list[i];
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
list[i]=split;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
list[target]=list[i];
list[i]=split;

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
absDCurrent=Math.abs(main[i+1]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(i==n&&i<i0){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(i==n&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&i<i0){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(diagMax)<=TOLERANCE){
setResult(isSequence(TOLERANCE,previousEMin,TOLERANCE)?xplus:TOLERANCE+(-2.0*TOLERANCE)/(TOLERANCE-Math.sqrt(TOLERANCE)),n);
return TOLERANCE;
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE-(MathUtils.sign(TOLERANCE)*MathUtils.sign(TOLERANCE))*(TOLERANCE-TOLERANCE)/Math.sqrt(diagMax)-TOLERANCE)<=Math.max(sigma*Math.abs(TOLERANCE-(MathUtils.sign(TOLERANCE)*MathUtils.sign(TOLERANCE))*(TOLERANCE-TOLERANCE)/Math.sqrt(diagMax)),offDiagMin)){
setResult(x,n);
return TOLERANCE;
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(previousEMin)<=TOLERANCE){
setResult(TOLERANCE-(MathUtils.sign(TOLERANCE)*MathUtils.sign(TOLERANCE))*(TOLERANCE-TOLERANCE)/Math.sqrt(diagMax),n);
return TOLERANCE;
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterval(minPivot,sigma);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-i0;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(Double.isNaN(work[n0])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n0);
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(Double.isInfinite(work[n0])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n0);
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(!split&&weights[i]>0.0){
containsPositiveWeight=true;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(Double.isNaN(work[n0])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n0);
}
if(Double.isInfinite(work[n0])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n0);
}
if(!split&&weights[i]>0.0){
containsPositiveWeight=true;
}

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-i0;i+=4){
if(Double.isNaN(work[n0])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n0);
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-i0;i+=4){
if(Double.isInfinite(work[n0])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n0);
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(Double.isNaN(work[n0])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n0);
}
if(Double.isInfinite(work[n0])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n0);
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-i0;i+=4){
if(Double.isNaN(work[n0])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",n0);
}
if(Double.isInfinite(work[n0])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",n0);
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<0){
i=-i-2;
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=polynomials.length){
i--;
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
min_dist=Math.abs(TOLERANCE-work[n]);
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
c[i]=y[i];
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
d[i]=y[i];
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
c[i]=y[i];
d[i]=y[i];

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i0]-xval[n0]>xval[n0]-xval[i]){
diagMax=ileft;
}else {
edge=iright;
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i+1]=TOLERANCE;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((TOLERANCE>0)==(TOLERANCE>0)){
previousEMin=TOLERANCE;
y2=TOLERANCE;
TOLERANCE=diagMax-x0;
split=delta;
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0++;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=previousEMin;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
previousEMin=x1+diagMax;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((TOLERANCE>0)==(sigma>0)){
TOLERANCE=TOLERANCE;
y2=TOLERANCE;
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE-previousEMin;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=cachedVt.getData();
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
main=new double[diagMax];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondary=new double[diagMax-1];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=null;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
cachedV=null;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
cachedVt=null;
cachedV=null;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/1;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
tiesTrace=new ArrayList<Integer>();
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
out[ranks[i].getPosition()]=split;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<=4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
oldt=offDiagMin;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
b1*=work[i4]/work[i4-2];
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
b2+=TOLERANCE;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(100*TOLERANCE<sigma){
break;
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
b1*=work[i4]/work[i4-2];
b2+=TOLERANCE;
if(100*TOLERANCE<sigma){
break;
}

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=i0){
 final double Math.abs(offDiagMin-TOLERANCE)=Math.abs(offDiagMin-TOLERANCE);
 final double sigma*(Math.abs(TOLERANCE)+Math.abs(offDiagMin))=sigma*(Math.abs(olds)+Math.abs(s));
if((delta<=rLimit)||(delta<=TOLERANCE)){
setResult(s,i);
return TOLERANCE;
}
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n]=diagMax*TOLERANCE+sigma/sumOffDiag-diagMax*sumOffDiag/sumOffDiag;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n]=Math.abs(work[i]-work[i]);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=TOLERANCE;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0++;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=4*i0;i<4*n0-11;i+=4){
olds=offDiagMin;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
olds=offDiagMin;
oldt=TOLERANCE;

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<=4*n0-11;i+=4){
oldt=TOLERANCE;
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
ltI[i]=Math.sqrt(work[i]);
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=(TOLERANCE-sigma)/(Double.valueOf(i0)).doubleValue();
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
split=new double[i0];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(diagMax==0.0){
for(int i0=0;i0<i;++i0){
if((x[i]==x[k])){
throw MathRuntimeException.createArithmeticException("identical abscissas x[{0}] == x[{1}] == {2} cause division by zero",i0,i0,work[i]);
}
}
}
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
tc[n-1]=c[n];
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
coefficients[n-1]+=imagEigenvalues[i0]/diagMax*tc[n-1];
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*i0;i<4*n0-11;i+=4){
if(diagMax==0.0){
for(int i0=0;i0<i;++i0){
if((x[i]==x[k])){
throw MathRuntimeException.createArithmeticException("identical abscissas x[{0}] == x[{1}] == {2} cause division by zero",i0,i0,work[i]);
}
}
}
tc[n-1]=c[n];
coefficients[n-1]+=imagEigenvalues[i0]/diagMax*tc[n-1];

if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*i0-8]=sigma+work[i-7];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*i0-4]=sigma+work[i-3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0-=2;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=-sigma*work[i0]+diagMax*qtbpj;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=diagMax*work[i0]+sigma*TOLERANCE;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues[n*i0+n0]=diagMax*TOLERANCE+sigma*imagEigenvalues[k];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=-sigma*work[n]+diagMax*qtbpj;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n]=diagMax*work[n]+sigma*TOLERANCE;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
imagEigenvalues[n*i0+n0]=diagMax*TOLERANCE+sigma*imagEigenvalues[k];
work[n]=diagMax*work[n]+sigma*TOLERANCE;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
offDiagMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
previousEMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
offDiagMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
previousEMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
offDiagMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
previousEMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
previousEMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
tType=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
offDiagMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
previousEMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
offDiagMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
previousEMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
offDiagMin=0;
previousEMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
offDiagMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
offDiagMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
offDiagMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
offDiagMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
previousEMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
previousEMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
previousEMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
previousEMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
dN=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
dN=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
dN=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
offDiagMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
previousEMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
offDiagMin=0;
previousEMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
offDiagMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
offDiagMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
offDiagMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
offDiagMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
previousEMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
previousEMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
previousEMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
previousEMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
dN=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
dN=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
dN=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
offDiagMin=0;
previousEMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
offDiagMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
offDiagMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
offDiagMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
offDiagMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
previousEMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
previousEMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
previousEMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
previousEMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dN=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dN=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dN=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
previousEMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
previousEMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
previousEMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
previousEMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
dN=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
dN=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
dN=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=0;
dN=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=0;
dN=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=0;
dN=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN1=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
tType=0;
offDiagMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
tType=0;
previousEMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
tType=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
tType=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
tType=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
tType=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
offDiagMin=0;
previousEMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
offDiagMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
offDiagMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
offDiagMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
offDiagMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
previousEMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
previousEMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
previousEMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
previousEMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
dN=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
dN=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
dN=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
offDiagMin=0;
previousEMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
offDiagMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
offDiagMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
offDiagMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
offDiagMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
previousEMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
previousEMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
previousEMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
previousEMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
dN=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
dN=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
dN=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
tType=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
offDiagMin=0;
previousEMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
offDiagMin=0;
previousEMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
offDiagMin=0;
previousEMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
offDiagMin=0;
previousEMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
offDiagMin=0;
dN=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
offDiagMin=0;
dN=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
offDiagMin=0;
dN=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
offDiagMin=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
offDiagMin=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
offDiagMin=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
previousEMin=0;
dN=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
previousEMin=0;
dN=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
previousEMin=0;
dN=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
previousEMin=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
previousEMin=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
previousEMin=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
dN=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
dN=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
dN=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
dN1=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
offDiagMin=0;
previousEMin=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
offDiagMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
offDiagMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
offDiagMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
offDiagMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
previousEMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
previousEMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
previousEMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
previousEMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
dN=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
dN=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
dN=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
tType=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
offDiagMin=0;
previousEMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
offDiagMin=0;
previousEMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
offDiagMin=0;
previousEMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
offDiagMin=0;
previousEMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
offDiagMin=0;
dN=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
offDiagMin=0;
dN=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
offDiagMin=0;
dN=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
offDiagMin=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
offDiagMin=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
offDiagMin=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
previousEMin=0;
dN=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
previousEMin=0;
dN=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
previousEMin=0;
dN=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
previousEMin=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
previousEMin=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
previousEMin=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
dN=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
dN=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
dN=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
dN1=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
offDiagMin=0;
previousEMin=0;
dN=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
offDiagMin=0;
previousEMin=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
offDiagMin=0;
previousEMin=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
offDiagMin=0;
previousEMin=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
offDiagMin=0;
dN=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
offDiagMin=0;
dN=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
offDiagMin=0;
dN=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
offDiagMin=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
offDiagMin=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
offDiagMin=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
previousEMin=0;
dN=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
previousEMin=0;
dN=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
previousEMin=0;
dN=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
previousEMin=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
previousEMin=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
previousEMin=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dN=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dN=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dN=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tType=0;
dN1=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
previousEMin=0;
dN=0;
dN1=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
previousEMin=0;
dN=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
previousEMin=0;
dN=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
previousEMin=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
previousEMin=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
previousEMin=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
dN=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
dN=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
dN=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
dN1=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=0;
dN=0;
dN1=0;
dN2=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=0;
dN=0;
dN1=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=0;
dN=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=0;
dN1=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dN=0;
dN1=0;
dN2=0;
tau=0;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(TOLERANCE==0.0){
return TOLERANCE;
}
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new CombinedEventsManager().addEventHandler(new EndTimeChecker(TOLERANCE),Double.POSITIVE_INFINITY,Math.ulp(Math.max(Math.abs(diagMax),Math.abs(endTime))),100);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifySequence(minPivot,TOLERANCE,TOLERANCE);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&TOLERANCE>TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(n0-i0>3)){
tau=Math.max(diagMax,0.333*dMin);
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(n0-i0>3)){
tType=-3;
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(n0-i0>3)){
tau=Math.max(diagMax,0.333*dMin);
tType=-3;

int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&TOLERANCE>TOLERANCE){
tau=Math.max(diagMax,0.333*dMin);
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&TOLERANCE>TOLERANCE){
tType=-3;
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&TOLERANCE>TOLERANCE){
tau=Math.max(diagMax,0.333*dMin);
tType=-3;

int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(n0-i0>3)){
tau=Math.max(diagMax,0.333*dMin);
tType=-3;
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(n0-i0>3)){
tau=Math.max(diagMax,0.333*dMin);
tau=Math.max(diagMax,0.333*dMin);
tType=-3;

int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(n0-i0>3)){
tType=-3;
tau=Math.max(diagMax,0.333*dMin);
tType=-3;

int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&TOLERANCE>TOLERANCE){
tau=Math.max(diagMax,0.333*dMin);
tType=-3;
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&TOLERANCE>TOLERANCE){
tau=Math.max(diagMax,0.333*dMin);
tau=Math.max(diagMax,0.333*dMin);
tType=-3;

int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&TOLERANCE>TOLERANCE){
tType=-3;
tau=Math.max(diagMax,0.333*dMin);
tType=-3;

int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(n0-i0>3)){
tau=Math.max(diagMax,0.333*dMin);
tType=-3;
tau=Math.max(diagMax,0.333*dMin);
tType=-3;

int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&TOLERANCE>TOLERANCE){
tau=Math.max(diagMax,0.333*dMin);
tType=-3;
tau=Math.max(diagMax,0.333*dMin);
tType=-3;

int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((MathUtils.SAFE_MIN*work[j4p2+2]<work[j4-2])&&(MathUtils.SAFE_MIN*work[j4-2]<work[j4p2+2])){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i0+2]<work[i-2])&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(MathUtils.SAFE_MIN*work[i-2]<work[i0+2])){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
double split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=dN2;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
dMin2=previousEMin;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i-2]=dN2+work[i0];
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
previousEMin=Math.min(dMin,diagMax);
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin1=previousEMin;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=j4+4;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin<0)||(MathUtils.SAFE_MIN*sigma<Math.min(work[n0-1],Math.min(work[l-9],dMin2+work[l-2*i0])))){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((dMin<0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(MathUtils.SAFE_MIN*sigma<Math.min(work[n0-1],Math.min(work[l-9],dMin2+work[l-2*i0])))){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
computeShiftIncrement(n,n,pingPong-deflatedEnd);
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((0.1*sigma>=TOLERANCE)||(offDiagMin<0.1)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((0.1*sigma>=TOLERANCE)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(offDiagMin<0.1)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((cost==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((0.1*sigma>=TOLERANCE)&&(offDiagMin<0.1)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((i0+1>=pingPong)&&(Math.abs(previousEMin-TOLERANCE)<=Math.max(diagMax,TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(previousEMin))))){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i0+1>=pingPong)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(Math.abs(previousEMin-TOLERANCE)<=Math.max(diagMax,TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(previousEMin))))){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(TOLERANCE,diagMax)<TOLERANCE||sigma<TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(TOLERANCE,diagMax)<TOLERANCE&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&sigma<TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(100*Math.max(TOLERANCE,diagMax)<TOLERANCE&&sigma<TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&sigma>TOLERANCE*TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(n0-i0>3)){
tType=-8;
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&sigma>TOLERANCE*TOLERANCE){
tType=-8;
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[np-8]>diagMax||work[np-4]>previousEMin){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i0-8]>diagMax&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&work[i0-4]>previousEMin){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=-5;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pingPong-n>2){
diagMax=work[n0-13]/work[nn-15];
TOLERANCE=a2+b2;
for(int i=nn-17;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
previousEMin=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||sigma<a2){
break;
}
}
a2=TOLERANCE*a2;
}
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin2==sigma&&2*work[nn-5]<work[nn-7]){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin2==sigma&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&2*work[i-5]<work[nn-7]){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
tType=-10;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(n0-i0>3)){
b2=Math.sqrt(TOLERANCE*offDiagMin);
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
if(work[i-7]+work[nn-9]-Math.sqrt(work[nn-11])*Math.sqrt(work[nn-9])-dMin2/(1+offDiagMin*b2)>0.0&&work[i-7]+work[nn-9]-Math.sqrt(work[nn-11])*Math.sqrt(work[nn-9])-dMin2/(1+offDiagMin*b2)>offDiagMin*dMin2/(1+offDiagMin*b2)){
tau=Math.max(diagMax,dMin2/(1+offDiagMin*b2)*(1-TOLERANCE*a2));
}else {
tau=Math.max(diagMax,dMin2/(1+offDiagMin*b2)*(1-TOLERANCE*offDiagMin));
}
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
tType=-10;
b2=Math.sqrt(TOLERANCE*offDiagMin);
if(work[i-7]+work[nn-9]-Math.sqrt(work[nn-11])*Math.sqrt(work[nn-9])-dMin2/(1+offDiagMin*b2)>0.0&&work[i-7]+work[nn-9]-Math.sqrt(work[nn-11])*Math.sqrt(work[nn-9])-dMin2/(1+offDiagMin*b2)>offDiagMin*dMin2/(1+offDiagMin*b2)){
tau=Math.max(diagMax,dMin2/(1+offDiagMin*b2)*(1-TOLERANCE*a2));
}else {
tau=Math.max(diagMax,dMin2/(1+offDiagMin*b2)*(1-TOLERANCE*offDiagMin));
}

int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin2==sigma&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
tType=-10;
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((Math.abs(work[i]-work[i])>(split*TOLERANCE))&&(Math.abs(work[i]-work[i])>sigma)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(work[i]-work[i])>(split*TOLERANCE))&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(Math.abs(work[i]-work[i])>sigma)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((difference==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(previousEMin-diagMax)>(split*TOLERANCE))&&(Math.abs(previousEMin-diagMax)>sigma)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(previousEMin-diagMax)>(split*TOLERANCE))&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(Math.abs(previousEMin-diagMax)>sigma)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE-eMin)<1.0E-6)||(Math.abs(qMax-tMed)<1.0E-6)){
split=previousEMin;
}else {
 final double sigma=tMax-tMed;
 final double TOLERANCE-eMin=tMed-tMin;
 final double qMax-eMin=tMax-tMin;
 final double TOLERANCE-qMax=TOLERANCE-tMax;
 final double TOLERANCE-TOLERANCE=time-tMed;
 final double TOLERANCE-eMin=time-tMin;
 final double diagMax=((dt2*dt3)*n0-(dt1*dt3)*iMed+(dt1*dt2)*i0)/(d12*d23);
index=(int)Math.rint(iLagrange);
}
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rescale(work,y,new double[y0.length]);
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
null.storeTime(previousEMin);
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=previousEMin;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
i0--;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Math.abs(TOLERANCE)<Math.max(sigma*Math.abs(TOLERANCE),TOLERANCE)){
setResult(x1,i0);
return TOLERANCE;
}
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE)>Math.abs(offDiagMin)){
diagMax=0.5*TOLERANCE;
}else {
delta=(previousEMin-TOLERANCE)/(1-y0/y1);
if(delta/oldDelta>1){
delta=0.5*oldDelta;
}
}
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
previousEMin=TOLERANCE;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=TOLERANCE;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=x1+diagMax;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((TOLERANCE>0)==(TOLERANCE>0)){
split=previousEMin;
y2=offDiagMin;
}
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=split-TOLERANCE;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0++;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=TOLERANCE;
i0++;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&work[i0-1]>=xval[i]){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0<xval.length-1&&xval[right+1]-xval[i]<xval[i]-xval[left]){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0<xval.length-1&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&work[n0+1]-xval[i0]<xval[i]-xval[i0]){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n0+i0)>internalArray.length){
expandTo(startIndex+i);
}
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=i0;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
polynoms[7][i]=16*(yMidDots[3][i]-split+3*polynoms[5][i]);
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[j4p2+2]<work[j4-2])&&(MathUtils.SAFE_MIN*work[j4-2]<work[j4p2+2])){
double split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i0+2]<work[i-2])&&(MathUtils.SAFE_MIN*work[i-2]<work[i0+2])){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i0+2]<work[i-2])&&(n0-i0>3)){
double split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(MathUtils.SAFE_MIN*work[i-2]<work[i0+2])){
double split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i0+2]<work[i-2])&&(MathUtils.SAFE_MIN*work[i-2]<work[i0+2])){
double split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i0==split&&i0<pingPong){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i0==split&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&i0<pingPong){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
verifyInterval(minPivot,sigma);
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
setResult(diagMax,i0);
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
resultComputed=true;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
G2=G.multiply(G);
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==n0-2)||(work[k-9]<=TOLERANCE_2*sigma)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==n0-2)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(work[i-9]<=TOLERANCE_2*sigma)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((start==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==n0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(n0-i0>3)){
deflatedEnd-=2;
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==n0-2)||(work[k-9]<=TOLERANCE_2*sigma)){
double split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==n0-2)&&(n0-i0>3)){
double split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==n0)&&(n0-i0>3)){
double split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
optimaValues[i+1]=TOLERANCE;
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
currX=optima[j];
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
currY=optimaValues[j];
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
optimaValues[i+1]=TOLERANCE;
currX=optima[j];
currY=optimaValues[j];

int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
int split=n-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((pingPong==0)&&(n0-i0>3)){
int split=k-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=TOLERANCE;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyIterationCount();
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n]=diagMax*TOLERANCE+sumOffDiag/sumOffDiag-diagMax*sumOffDiag/sumOffDiag;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
work[n]=Math.abs(work[i]-work[i]);
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
s=0.5*(TOLERANCE+split*previousEMin);
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((cost==0)&&(offDiagMin<0.1)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
int split=sigma-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
sigmaLow-=previousEMin-sigma;
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((difference==0)&&(Math.abs(previousEMin-diagMax)>sigma)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=n0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
diagMax=Math.max(diagMax,work[i]+work[i+2]);
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
offDiagMin=Math.min(offDiagMin,work[i+2]);
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);

if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=pingPong;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=Math.min(dMin,diagMax);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin1=previousEMin;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=j4+4;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=i0+2*pingPong-1;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0-2]=diagMax+work[i];
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i0-2]==0.0){
work[j4]=0.0;
offDiagMin=work[i+2];
previousEMin=dN;
eMin=0.0;
}else if((MathUtils.SAFE_MIN*work[j4p2+2]<work[j4-2])&&(MathUtils.SAFE_MIN*work[j4-2]<work[j4p2+2])){
 final double work[i+2]/work[i0-2]=work[j4p2+2]/work[j4-2];
work[j4]=work[j4p2]*tmp;
dN=diagMax*tmp;
}else {
work[j4]=work[j4p2+2]*(work[j4p2]/work[j4-2]);
dN=work[j4p2+2]*(dN1/work[j4-2]);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
previousEMin=Math.min(dMin,offDiagMin);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0+2]=offDiagMin;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*n-pingPong-1]=eMin;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[i0+2]=offDiagMin;
work[4*n-pingPong-1]=eMin;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
if(previousEMin==0){
paru=0.0/Math.min(maxIter,0.1);
}
TOLERANCE=Math.min(previousEMin,Math.max(lmPar,offDiagMin));
if(TOLERANCE==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=Math.max(lower,diagMax-2*(Math.max(Math.abs(diagMax),Math.abs(offDiagMin))*MathUtils.EPSILON+2*minPivot)-100*MathUtils.EPSILON);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=diagMax-2*(Math.max(Math.abs(diagMax),Math.abs(offDiagMin))*MathUtils.EPSILON+2*minPivot);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=0;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.max(diagMax,lmPar+k);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.max(diagMax,lmPar+TOLERANCE/(TOLERANCE*split));
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=0;
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=0;
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=0;
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
split=0;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
split=0;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
for(int k=0;i<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
for(int k=0;i<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;i<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=0;
for(int k=0;i<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
split=0;
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
split=0;
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=0;
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
split=0;
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
split=0;
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
split=0;
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
split=0;
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
split=0;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
for(int k=0;i<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;i<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
split=0;
for(int k=0;i<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;i<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
split=0;
for(int k=0;i<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
for(int k=0;i<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
split=0;
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
split=0;
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
split=0;
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;j<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
split=0;
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
split=0;
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<solvedCols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
TOLERANCE=offDiagMin-TOLERANCE;
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.sqrt(dxNorm);
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin-TOLERANCE;
if((Math.abs(TOLERANCE)<=0.1*TOLERANCE)||((diagMax==0)&&(fp<=TOLERANCE))){
return ;
}
split=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
previousEMin=Math.min(paru,lmPar);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=split;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy((coefficients.length<p.coefficients.length)?p.coefficients:coefficients,pingPong,new double[split],lowLength,split-lowLength);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(coefficients.length<p.coefficients.length){
for(int i=maxIter;i<pingPong;++i){
new double[pingPong][i]=-p.coefficients[i];
}
}else {
System.arraycopy(coefficients,lowLength,newCoefficients,lowLength,highLength-lowLength);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
if((k+1>=i0)&&(Math.abs(previousEMin-TOLERANCE)<=Math.max(diagMax,TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(previousEMin))))){
setResult(previousEMin,i);
return TOLERANCE;
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
setResult(previousEMin,k);
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
oldt=previousEMin;
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if(100*Math.max(TOLERANCE,diagMax)<TOLERANCE||sigma<TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if(100*Math.max(TOLERANCE,diagMax)<TOLERANCE&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&sigma<TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
if(TOLERANCE==0.0){
break;
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
b1=TOLERANCE;
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
if(work[i4]>work[i4-2]){
return ;
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
b2=TOLERANCE*(work[i4]/work[i4-2]);
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
if(TOLERANCE==0.0){
break;
}
b1=TOLERANCE;
if(work[i4]>work[i4-2]){
return ;
}
b2=TOLERANCE*(work[i4]/work[i4-2]);

n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if(100*Math.max(TOLERANCE,diagMax)<TOLERANCE||sigma<TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if(100*Math.max(TOLERANCE,diagMax)<TOLERANCE&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&sigma<TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
if(TOLERANCE==0.0){
break;
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
if(TOLERANCE==0.0){
break;
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if(100*Math.max(TOLERANCE,diagMax)<TOLERANCE||sigma<TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if(100*Math.max(TOLERANCE,diagMax)<TOLERANCE&&sigma<TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
if(TOLERANCE==0.0){
break;
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if(100*Math.max(TOLERANCE,diagMax)<TOLERANCE&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
if(TOLERANCE==0.0){
break;
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&sigma<TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
if(TOLERANCE==0.0){
break;
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if(100*Math.max(TOLERANCE,diagMax)<TOLERANCE||sigma<TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if(100*Math.max(TOLERANCE,diagMax)<TOLERANCE&&sigma<TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
if(TOLERANCE==0.0){
break;
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if(100*Math.max(TOLERANCE,diagMax)<TOLERANCE&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
if(TOLERANCE==0.0){
break;
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&sigma<TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
if(TOLERANCE==0.0){
break;
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if(100*Math.max(TOLERANCE,diagMax)<TOLERANCE&&sigma<TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
if(TOLERANCE==0.0){
break;
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if(100*Math.max(TOLERANCE,diagMax)<TOLERANCE&&sigma<TOLERANCE){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;split<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<j;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-5;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(maxIter-n>2){
diagMax=work[n0-13]/work[nn-15];
TOLERANCE=a2+b2;
for(int i=nn-17;i4>=4*start+2+pingPong;i4-=4){
if(b2==0.0){
break;
}
previousEMin=b2;
if(work[i4]>work[i4-2]){
return ;
}
b2=b2*(work[i4]/work[i4-2]);
a2=a2+b2;
if(100*Math.max(b2,b1)<a2||TOLERANCE<a2){
break;
}
}
a2=sigma*a2;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i0-8]/diagMax)*(1+work[np-4]/previousEMin)<TOLERANCE){
split=k*(1-Math.sqrt(a2))/(1+a2);
}else {
tau=offDiagMin;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.length);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((TOLERANCE-TOLERANCE<splitTolerance)||(TOLERANCE-TOLERANCE<splitTolerance*Math.max(Math.abs(TOLERANCE),Math.abs(TOLERANCE)))){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((TOLERANCE-TOLERANCE<splitTolerance)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(TOLERANCE-TOLERANCE<splitTolerance*Math.max(Math.abs(TOLERANCE),Math.abs(TOLERANCE)))){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((range==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(countEigenValues(previousEMin,i0,n0)>=n0){
right=previousEMin;
}else {
left=previousEMin;
}
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((TOLERANCE-TOLERANCE<splitTolerance)&&(TOLERANCE-TOLERANCE<splitTolerance*Math.max(Math.abs(TOLERANCE),Math.abs(TOLERANCE)))){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
rescale(work,y,new double[y0.length]);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
null.storeTime(previousEMin);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=previousEMin;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
ratio=yDot0[j]/scale[j];
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
computeDerivatives(maxIter+((TOLERANCE<1.0E-10)||(offDiagMin<1.0E-10))?1.0E-6:(0.01*Math.sqrt(yOnScale2/yDotOnScale2)),work,work);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=Math.sqrt(yDDotOnScale)/((TOLERANCE<1.0E-10)||(offDiagMin<1.0E-10))?1.0E-6:(0.01*Math.sqrt(yOnScale2/yDotOnScale2));
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(100.0*Math.abs(h),previousEMin);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.max(h,1.0E-12*Math.abs(maxIter));
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(((TOLERANCE<1.0E-10)||(offDiagMin<1.0E-10))?1.0E-6:(0.01*Math.sqrt(yOnScale2/yDotOnScale2))<getMinStep()){
h=getMinStep();
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(((TOLERANCE<1.0E-10)||(offDiagMin<1.0E-10))?1.0E-6:(0.01*Math.sqrt(yOnScale2/yDotOnScale2))>getMaxStep()){
h=getMaxStep();
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((Math.abs(work[i]-work[i])>(split*sigma))&&(Math.abs(work[i]-work[i])>TOLERANCE)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((Math.abs(work[i]-work[i])>(split*sigma))&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(Math.abs(work[i]-work[i])>TOLERANCE)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((difference==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((Math.abs(maxIter-diagMax)>(split*sigma))&&(Math.abs(maxIter-diagMax)>TOLERANCE)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((Math.abs(maxIter-diagMax)>(split*sigma))&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(Math.abs(maxIter-diagMax)>TOLERANCE)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((difference==0)&&(Math.abs(maxIter-diagMax)>TOLERANCE)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
lJ[i]=0;
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
d=work[pingPong];
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
work[4*n-3-pingPong]=offDiagMin;
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
d=work[pingPong];
work[4*n-3-pingPong]=offDiagMin;

n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=0;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i0=0;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
work[4*n-3-pingPong]=offDiagMin;
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
sixI+=6;
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
stationaryQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,TOLERANCE);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
progressiveQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,TOLERANCE);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new double[pingPong][n0]=1;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
previousEMin=1;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
stationaryQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,TOLERANCE);
progressiveQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,TOLERANCE);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=maxIter;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((Math.abs(TOLERANCE-eMin)<1.0E-6)||(Math.abs(qMax-tMed)<1.0E-6)){
offDiagMin=previousEMin;
}else {
 final double sigma=tMax-tMed;
 final double TOLERANCE-eMin=tMed-tMin;
 final double qMax-eMin=tMax-tMin;
 final double TOLERANCE-qMax=TOLERANCE-tMax;
 final double TOLERANCE-TOLERANCE=time-tMed;
 final double TOLERANCE-eMin=time-tMin;
 final double diagMax=((dt2*dt3)*i0-(dt1*dt3)*iMed+(dt1*dt2)*n0)/(d12*d23);
index=(int)Math.rint(iLagrange);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMin<k){
index=low;
}else if(index>split){
index=high;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;pingPong<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<binCount;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n0][0]=sigma+TOLERANCE;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n0][n0-1]=TOLERANCE;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<xval.length;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<length;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&work[i0-1]>=xval[i]){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;minor<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues=new double[Math.min(n0,k)];
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=null;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
checkBinomial(i0,i);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i==1)||(k==i0-1)){
return n;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>i0/2){
return binomialCoefficientDouble(n,n-k);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i0<67){
return binomialCoefficient(n,i);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=previousEMin;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i0==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
shuffle(getNatural(n0),n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong+i0)>internalArray.length){
expandTo(startIndex+i);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=i0;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE)<=sigma){
setResult(TOLERANCE,i0);
return TOLERANCE;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE)<Math.max(TOLERANCE*Math.abs(TOLERANCE),TOLERANCE)){
setResult(x1,i0);
return TOLERANCE;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE)>Math.abs(offDiagMin)){
diagMax=0.5*TOLERANCE;
}else {
delta=(previousEMin-TOLERANCE)/(1-y0/y1);
if(delta/oldDelta>1){
delta=0.5*oldDelta;
}
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
previousEMin=TOLERANCE;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=TOLERANCE;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TOLERANCE=x1+diagMax;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((TOLERANCE>0)==(TOLERANCE>0)){
split=previousEMin;
y2=offDiagMin;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=split-TOLERANCE;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0++;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
offDiagMin=TOLERANCE;
i0++;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
main=new double[pingPong];
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
secondary=new double[pingPong-1];
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
cachedV=null;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
main=new double[pingPong];
secondary=new double[pingPong-1];
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
main=new double[pingPong];
cachedVt=null;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
main=new double[pingPong];
cachedV=null;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
secondary=new double[pingPong-1];
cachedVt=null;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
secondary=new double[pingPong-1];
cachedV=null;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
cachedVt=null;
cachedV=null;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
main=new double[pingPong];
secondary=new double[pingPong-1];
cachedVt=null;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
main=new double[pingPong];
secondary=new double[pingPong-1];
cachedV=null;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
main=new double[pingPong];
cachedVt=null;
cachedV=null;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
secondary=new double[pingPong-1];
cachedVt=null;
cachedV=null;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
main=new double[pingPong];
secondary=new double[pingPong-1];
cachedVt=null;
cachedV=null;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n++;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
absDCurrent=Math.abs(main[i+1]);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration",k,j+1);
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw MathRuntimeException.createIllegalArgumentException("element {0} is not positive: {1}",maxIter,work[i]);
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<pingPong;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<l;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
res[index]=(double)i0/pingPong;
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i<pingPong;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<pingPong;++k){
if(k>=maxIter){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i<pingPong;++k){
if(k>=maxIter){
throw new IllegalArgumentException("originalData and permutedData must contain the same objects.");
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
list[target]=list[i];
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
list[i]=previousEMin;
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
list[target]=list[i];
list[i]=previousEMin;

if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
numElements-=maxIter;
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0<=0){
throw MathRuntimeException.createIllegalArgumentException("sample size must be positive ({0})",k);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
bytes[bytesOut++]=(byte)split;
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(i0==bytes.length){
return ;
}
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
bytes[bytesOut++]=(byte)split;
if(i0==bytes.length){
return ;
}

if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
cDot=1.0/(pingPong-3)*(TOLERANCE*split+TOLERANCE);
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
iterationCount=i0;
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE)<=sigma){
setResult(TOLERANCE-(MathUtils.sign(TOLERANCE)*MathUtils.sign(TOLERANCE))*(TOLERANCE-offDiagMin)/Math.sqrt(TOLERANCE),maxIter);
return TOLERANCE;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.sign(TOLERANCE)*MathUtils.sign(TOLERANCE))*(TOLERANCE-offDiagMin)/Math.sqrt(TOLERANCE)>0.0){
if(MathUtils.sign(previousEMin)+MathUtils.sign(TOLERANCE)==0.0){
diagMax=TOLERANCE-(MathUtils.sign(TOLERANCE)*MathUtils.sign(TOLERANCE))*(TOLERANCE-offDiagMin)/Math.sqrt(TOLERANCE);
TOLERANCE=y;
}else {
offDiagMin=x;
x2=TOLERANCE;
y1=y;
y2=TOLERANCE;
}
}else {
if(MathUtils.sign(y2)+MathUtils.sign(y)==0.0){
x1=x;
y1=y;
}else {
x1=x3;
x2=x;
y1=y3;
y2=y;
}
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=i0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=i0;j<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=i0;i0<n;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i<n;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;j<n;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=i0;i<n;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=i0;j<n;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterval(minPivot,sigma);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<0){
i=-i-2;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=polynomials.length){
i--;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if(n0==split&&n0<i0){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if(n0==split&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&n0<i0){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<pingPong;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&n0<i0){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&n0<i0){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&n0<i0){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i<pingPong;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&n0<i0){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i<n;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&n0<i0){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<rawData.length;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",maxIter,n0);
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i<length;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",maxIter,n0);
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<length;++k){
if(k>=maxIter){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",maxIter,n0);
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i<length;++k){
if(k>=maxIter){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",maxIter,n0);
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw MathRuntimeException.createArithmeticException("identical abscissas x[{0}] == x[{1}] == {2} cause division by zero",i,k,work[i]);
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
tc[n-1]=c[n];
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
coefficients[n-1]+=imagEigenvalues[i]/split*tc[n-1];
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
tc[n-1]=c[n];
coefficients[n-1]+=imagEigenvalues[i]/split*tc[n-1];

if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
cachedV.setEntry(k,k,1);
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=i0;i0<n0;++k){
cachedV.setEntry(k,k,1);
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;k<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<diagOffset;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
cachedVt.setEntry(i,k,1);
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=n0;k<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
checkBinomial(n0,i);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i==1)||(k==n0-1)){
return n;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>n0/2)return binomialCoefficient(n,n-k);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0<=61){
int i0=n-i+1;
for(int n=1;j<=k;j++){
diagMax=result*i/j;
i++;
}
}else if(n<=66){
int i=n-k+1;
for(int j=1;j<=k;j++){
 final long gcd(i0,n)=gcd(i,j);
result=(result/(j/d))*(i/d);
i++;
}
}else {
int i=n-k+1;
for(int j=1;j<=k;j++){
 final long d=gcd(i,j);
result=mulAndCheck(result/(j/d),i/d);
i++;
}
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
c[i]=y[i];
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
d[i]=y[i];
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
c[i]=y[i];
d[i]=y[i];

pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<m;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
double split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
cachedVt.setEntry(i0,k,1+diagMax*work[k]);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
cachedVt.setEntry(i0,k,1);
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=n0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
cachedVt.setEntry(i0,k,1+diagMax*work[k]);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=n0;i0<n0;++k){
cachedVt.setEntry(i0,k,1);
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;k<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
cachedVt.setEntry(i0,k,1+diagMax*work[k]);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;k<n0;++k){
cachedVt.setEntry(i0,k,1);
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
cachedVt.setEntry(i0,k,1);
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
cachedVt.setEntry(i0,k,1+diagMax*work[k]);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=n0;k<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
cachedVt.setEntry(i0,k,1+diagMax*work[k]);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
for(int k=n0;k<n0;++k){
cachedVt.setEntry(i0,k,1);
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
for(int k=n0;i0<n0;++k){
cachedVt.setEntry(i0,k,1);
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
cachedVt.setEntry(i0,k,1+diagMax*work[k]);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;k<n0;++k){
cachedVt.setEntry(i0,k,1);
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
cachedVt.setEntry(i0,k,1+diagMax*work[k]);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=n0;k<n0;++k){
cachedVt.setEntry(i0,k,1);
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
cachedVt.setEntry(i0,k,1+diagMax*work[k]);
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
hNew=previousEMin;
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
updateJacobian();
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
RealMatrix new LUDecompositionImpl(MatrixUtils.createRealMatrix(new double[i0][m])).getSolver().getInverse()=new LUDecompositionImpl(MatrixUtils.createRealMatrix(new double[i0][m])).getSolver().getInverse();
return inverse.getData();
}catch (InvalidMatrixException ime) {
  throw new EstimationException("unable to compute covariances: singular problem");
}

for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i<m;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new DimensionMismatchException(xvalI.length,maxIter);
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
if((Math.abs(previousEMin-TOLERANCE)<=split)||(delta<=sigma)){
setResult(previousEMin,k);
return TOLERANCE;
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
olds=previousEMin;
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
oldt=offDiagMin;
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
olds=previousEMin;
oldt=offDiagMin;

if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i0]-xval[n]>xval[n]-xval[i]){
split=ileft;
}else {
edge=iright;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<measurements.length;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
if(MathUtils.compareTo(cachedVt.getEntry(0,maxIter),0,TOLERANCE)<0){
return false;
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
if((Math.abs(previousEMin-TOLERANCE)<=split)||(delta<=sigma)){
setResult(previousEMin,i);
return TOLERANCE;
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
previousRow=work;
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
currentRow=work;
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
previousRow=work;
currentRow=work;
olds=previousEMin;

if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
oldt=previousEMin;
if(k>=maxIter){
if((Math.abs(previousEMin-TOLERANCE)<=split)||(delta<=sigma)){
setResult(previousEMin,k);
return TOLERANCE;
}
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i+1<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondary[i]=(work[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=(split-minPivot)/(Double.valueOf(n0)).doubleValue();
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work=new double[n0];
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n0-1]=1.0;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work=new double[n0];
work[n0-1]=1.0;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
polynoms[0][i]=currentState[i];
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
polynoms[1][i]=imagEigenvalues[i0]-imagEigenvalues[i];
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
polynoms[2][i]=imagEigenvalues[i0]-imagEigenvalues[i]-sigma*imagEigenvalues[i0];
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
polynoms[3][i]=sigma*imagEigenvalues[i0]-imagEigenvalues[i0]-imagEigenvalues[i];
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
polynoms[4][i]=16*(yMidDots[0][i]-0.5*(imagEigenvalues[i0]+imagEigenvalues[i])+0.125*(imagEigenvalues[i0]-imagEigenvalues[i]-sigma*imagEigenvalues[i0]+sigma*imagEigenvalues[i0]-imagEigenvalues[i0]-imagEigenvalues[i]));
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(n0>0){
 final double imagEigenvalues[i0]-imagEigenvalues[i]+0.25*(imagEigenvalues[i0]-imagEigenvalues[i]-sigma*imagEigenvalues[i0]-sigma*imagEigenvalues[i0]-imagEigenvalues[i0]-imagEigenvalues[i])=imagEigenvalues[i0]-imagEigenvalues[i]+0.25*(imagEigenvalues[i0]-imagEigenvalues[i]-sigma*imagEigenvalues[i0]-sigma*imagEigenvalues[i0]-imagEigenvalues[i0]-imagEigenvalues[i]);
polynoms[5][i]=16*(yMidDots[1][i]-imagEigenvalues[i0]-imagEigenvalues[i]+0.25*(imagEigenvalues[i0]-imagEigenvalues[i]-sigma*imagEigenvalues[i0]-sigma*imagEigenvalues[i0]-imagEigenvalues[i0]-imagEigenvalues[i]));
if(n0>1){
 final double sigma*imagEigenvalues[i0]-sigma*imagEigenvalues[i0]=sigma*imagEigenvalues[i0]-sigma*imagEigenvalues[i0];
polynoms[6][i]=16*(yMidDots[2][i]-sigma*imagEigenvalues[i0]-sigma*imagEigenvalues[i0]+polynoms[4][i]);
if(n0>2){
 final double split=6*(sigma*imagEigenvalues[i0]-imagEigenvalues[i0]-imagEigenvalues[i]-imagEigenvalues[i0]-imagEigenvalues[i]-sigma*imagEigenvalues[i0]);
polynoms[7][i]=16*(yMidDots[3][i]-split+3*polynoms[5][i]);
for(int k=4;k<=n0;++k){
 final double 0.5*k=0.5*k;
 final double 2*0.5*k=2*0.5*k;
polynoms[j+4][i]=16*(yMidDots[j][i]+0.5*k*polynoms[j+2][i]-2*0.5*k*polynoms[j][i]);
}
}
}
}
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
polynoms[0][i]=currentState[i];
polynoms[1][i]=imagEigenvalues[i0]-imagEigenvalues[i];
polynoms[2][i]=imagEigenvalues[i0]-imagEigenvalues[i]-sigma*imagEigenvalues[i0];
polynoms[3][i]=sigma*imagEigenvalues[i0]-imagEigenvalues[i0]-imagEigenvalues[i];
polynoms[4][i]=16*(yMidDots[0][i]-0.5*(imagEigenvalues[i0]+imagEigenvalues[i])+0.125*(imagEigenvalues[i0]-imagEigenvalues[i]-sigma*imagEigenvalues[i0]+sigma*imagEigenvalues[i0]-imagEigenvalues[i0]-imagEigenvalues[i]));
if(n0>0){
 final double imagEigenvalues[i0]-imagEigenvalues[i]+0.25*(imagEigenvalues[i0]-imagEigenvalues[i]-sigma*imagEigenvalues[i0]-sigma*imagEigenvalues[i0]-imagEigenvalues[i0]-imagEigenvalues[i])=imagEigenvalues[i0]-imagEigenvalues[i]+0.25*(imagEigenvalues[i0]-imagEigenvalues[i]-sigma*imagEigenvalues[i0]-sigma*imagEigenvalues[i0]-imagEigenvalues[i0]-imagEigenvalues[i]);
polynoms[5][i]=16*(yMidDots[1][i]-imagEigenvalues[i0]-imagEigenvalues[i]+0.25*(imagEigenvalues[i0]-imagEigenvalues[i]-sigma*imagEigenvalues[i0]-sigma*imagEigenvalues[i0]-imagEigenvalues[i0]-imagEigenvalues[i]));
if(n0>1){
 final double sigma*imagEigenvalues[i0]-sigma*imagEigenvalues[i0]=sigma*imagEigenvalues[i0]-sigma*imagEigenvalues[i0];
polynoms[6][i]=16*(yMidDots[2][i]-sigma*imagEigenvalues[i0]-sigma*imagEigenvalues[i0]+polynoms[4][i]);
if(n0>2){
 final double split=6*(sigma*imagEigenvalues[i0]-imagEigenvalues[i0]-imagEigenvalues[i]-imagEigenvalues[i0]-imagEigenvalues[i]-sigma*imagEigenvalues[i0]);
polynoms[7][i]=16*(yMidDots[3][i]-split+3*polynoms[5][i]);
for(int k=4;k<=n0;++k){
 final double 0.5*k=0.5*k;
 final double 2*0.5*k=2*0.5*k;
polynoms[j+4][i]=16*(yMidDots[j][i]+0.5*k*polynoms[j+2][i]-2*0.5*k*polynoms[j][i]);
}
}
}
}

if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isRootOK(minPivot,TOLERANCE,solve(new Complex[coefficients.length],new Complex(0.5*(minPivot+TOLERANCE),0.0)))){
setResult(z.getReal(),maxIter);
return TOLERANCE;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i0>0){
u=-u;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0>0){
v=-v;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pingPong==31){
throw MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^31",n,n);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.isInfinite(TOLERANCE)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(Double.doubleToLongBits(TOLERANCE)&0x7ff0000000000000L!=0){
diagMax|=0x0010000000000000L;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(split!=0){
diagMax=-m;
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((maxIter<0)||(k>=pingPong)){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",k,0,omegaCount-1);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.split=(maxIter<=0)?2:maxNumIter;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.pingPong=(i0<=0)?1:maxNumChecks;
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=i0;i0<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
for(int k=0;i0<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
for(int k=0;i0<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=0;i0<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=i0;i<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
for(int k=i0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
for(int k=i0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=i0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
for(int k=i0;i0<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
for(int k=i0;i0<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=i0;i0<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
for(int k=0;i<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
for(int k=0;i<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=0;i<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
for(int k=0;i0<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=0;i0<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=0;i0<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
for(int k=i0;i<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
for(int k=i0;i<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=i0;i<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
for(int k=i0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=i0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=i0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
for(int k=i0;i0<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=i0;i0<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=i0;i0<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=i0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
for(int k=0;i<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=0;i<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=0;i<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=0;i<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
k=i0;
return ;
}
work[i0]=1.0/(diagMax-work[i0*n0+i0]*(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2));
work[i0]=(work[i0*n0+i0]>0)?-Math.sqrt(diagMax):Math.sqrt(ak2);
for(int k=0;i0<cols;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i0==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
shuffle(getNatural(n0),n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
diagMax=Double.NaN;
}else if(n==1){
variance=0.0;
}else {
variance=TOLERANCE/(n-1);
}
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i<rawData.length;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<rawData.length;++k){
if(k>=maxIter){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",maxIter,n0);
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i<rawData.length;++k){
if(k>=maxIter){
throw MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}",maxIter,n0);
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new CombinedEventsManager().addEventHandler(new EndTimeChecker(TOLERANCE),Double.POSITIVE_INFINITY,Math.ulp(Math.max(Math.abs(TOLERANCE),Math.abs(endTime))),100);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
largest=Math.abs(sumOffDiag);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifySequence(minPivot,TOLERANCE,TOLERANCE);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
dMin2=Math.min(previousEMin,work[diagMin-1]);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
work[l-2*pingPong]=Math.min(work[diagMin-2*i0],Math.min(work[6+pingPong],work[6+pingPong]));
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
qMax=Math.max(diagMax,Math.max(work[3+i0],work[7+pingPong]));
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
dMin2=Math.min(previousEMin,work[diagMin-1]);
work[l-2*pingPong]=Math.min(work[diagMin-2*i0],Math.min(work[6+pingPong],work[6+pingPong]));
qMax=Math.max(diagMax,Math.max(work[3+i0],work[7+pingPong]));

sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
d=offDiagMax*diagMin-tau;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
work[j4]=work[j4-1]*diagMin;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
eMin=Math.min(work[i],previousEMin);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
d=offDiagMax*diagMin-tau;
work[j4]=work[j4-1]*diagMin;
eMin=Math.min(work[i],previousEMin);

sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
work[j4-1]=work[j4]*diagMin;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
eMin=Math.min(work[i-1],previousEMin);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
d=offDiagMax*diagMin-tau;
work[j4-1]=work[j4]*diagMin;
eMin=Math.min(work[i-1],previousEMin);

sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
d*=offDiagMax;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
d*=work[j4+1]/work[j4-2];
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
d*=work[j4+2]/work[j4-3];
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=Math.max(lower,diagMax-2*(offDiagMax*MathUtils.EPSILON+2*minPivot)-100*MathUtils.EPSILON);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=diagMax-2*(offDiagMax*MathUtils.EPSILON+2*minPivot);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin+2*(offDiagMax*MathUtils.EPSILON+2*minPivot);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.min(upper,offDiagMin+2*(offDiagMax*MathUtils.EPSILON+2*minPivot)+100*MathUtils.EPSILON);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE-TOLERANCE<=0.1*TOLERANCE){
diagMax=0;
return ;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=0;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=Math.min(diagMin,Math.max(lmPar,previousEMin));
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax==0){
lmPar=offDiagMax/TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sigma<=0.1*TOLERANCE){
diagMax=0;
return ;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
offDiagMin=0;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
if(diagMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
diagMax=Math.min(diagMin,Math.max(lmPar,previousEMin));
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
if(diagMax==0){
lmPar=offDiagMax/TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=0;
if(diagMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=0;
diagMax=Math.min(diagMin,Math.max(lmPar,previousEMin));
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=0;
if(diagMax==0){
lmPar=offDiagMax/TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
diagMax=Math.min(diagMin,Math.max(lmPar,previousEMin));
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
if(diagMax==0){
lmPar=offDiagMax/TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=Math.min(diagMin,Math.max(lmPar,previousEMin));
if(diagMax==0){
lmPar=offDiagMax/TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
offDiagMin=0;
if(diagMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
offDiagMin=0;
diagMax=Math.min(diagMin,Math.max(lmPar,previousEMin));
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
offDiagMin=0;
if(diagMax==0){
lmPar=offDiagMax/TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
if(diagMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
diagMax=Math.min(diagMin,Math.max(lmPar,previousEMin));
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
if(diagMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
if(diagMax==0){
lmPar=offDiagMax/TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
diagMax=Math.min(diagMin,Math.max(lmPar,previousEMin));
if(diagMax==0){
lmPar=offDiagMax/TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=0;
if(diagMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
diagMax=Math.min(diagMin,Math.max(lmPar,previousEMin));
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=0;
if(diagMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
if(diagMax==0){
lmPar=offDiagMax/TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=0;
diagMax=Math.min(diagMin,Math.max(lmPar,previousEMin));
if(diagMax==0){
lmPar=offDiagMax/TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
diagMax=Math.min(diagMin,Math.max(lmPar,previousEMin));
if(diagMax==0){
lmPar=offDiagMax/TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
offDiagMin=0;
if(diagMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
diagMax=Math.min(diagMin,Math.max(lmPar,previousEMin));
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
offDiagMin=0;
if(diagMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
if(diagMax==0){
lmPar=offDiagMax/TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
offDiagMin=0;
diagMax=Math.min(diagMin,Math.max(lmPar,previousEMin));
if(diagMax==0){
lmPar=offDiagMax/TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
if(diagMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
diagMax=Math.min(diagMin,Math.max(lmPar,previousEMin));
if(diagMax==0){
lmPar=offDiagMax/TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=0;
if(diagMin==0){
paru=0.0/Math.min(TOLERANCE,0.1);
}
diagMax=Math.min(diagMin,Math.max(lmPar,previousEMin));
if(diagMax==0){
lmPar=offDiagMax/TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
computeDerivatives(maxIter+diagMax,work,work);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
previousEMin=Math.sqrt(yDDotOnScale)/diagMax;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=Math.min(100.0*Math.abs(h),sigmaLow);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=Math.max(h,1.0E-12*Math.abs(maxIter));
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax<getMinStep()){
h=getMinStep();
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax>getMaxStep()){
h=getMaxStep();
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigmaLow=Math.max(4*TOLERANCE,1.0);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMax=Math.max(sigma/TOLERANCE,Math.min(1/pow,fac));
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work=work;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
determineLMParameter(work,offDiagMin,work,work,work,work);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
previousEMin=Math.sqrt(lmNorm);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
updateResidualsAndCost();
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(0.1*TOLERANCE<TOLERANCE){
double TOLERANCE/TOLERANCE=cost/previousCost;
diagMin=1.0-r*r;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=coeff1/TOLERANCE*previousCost;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=(dMin==0)?0:(diagMin/preRed);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<=0.25){
double offDiagMax=(diagMin<0)?(0.5*-(TOLERANCE+sigmaLow)/(dirDer+0.5*actRed)):0.5;
if((0.1*TOLERANCE>=TOLERANCE)||(tmp<0.1)){
tmp=0.1;
}
offDiagMin=tmp*Math.min(delta,10.0*previousEMin);
TOLERANCE/=tmp;
}else if((lmPar==0)||(ratio>=0.75)){
delta=2*lmNorm;
lmPar*=0.5;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy((coefficients.length<p.coefficients.length)?p.coefficients:coefficients,offDiagMax,new double[Math.max(coefficients.length,p.coefficients.length)],lowLength,Math.max(coefficients.length,p.coefficients.length)-lowLength);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(coefficients.length<p.coefficients.length){
for(int i=offDiagMax;i<diagMin;++i){
new double[diagMin][i]=-p.coefficients[i];
}
}else {
System.arraycopy(coefficients,lowLength,newCoefficients,lowLength,highLength-lowLength);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work!=work){
System.arraycopy(y0,0,y,0,y0.length);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rescale(work,y,new double[y0.length]);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
null.storeTime(previousEMin);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigmaLow=previousEMin;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=0;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
boolean offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
after[i]+=previous[i]+scaled[i];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.length);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
d=work[i];
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
work[j-k]=sigmaLow;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
delta=2*TOLERANCE;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work=new double[Math.min(diagMin,maxIter)];
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=null;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offDiagMax<=0.0){
den=1.0;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=i0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
int offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=diagMax;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
work[k-7]=sigmaLow;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
minG=sigma;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
stationaryQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,TOLERANCE);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
progressiveQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,TOLERANCE);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new double[diagMin][pingPong]=1;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=1;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
stationaryQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,TOLERANCE);
progressiveQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,TOLERANCE);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
double maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
d*=sigma;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
d*=work[i+2]/work[j];
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0.0){
return TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
x0=TOLERANCE;
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
x1=diagMin;
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
x2=previousEMin;
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
y1=offDiagMin;
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
x0=TOLERANCE;
x1=diagMin;
x2=previousEMin;
y1=offDiagMin;

diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
if(Math.abs(TOLERANCE)<Math.max(TOLERANCE*Math.abs(TOLERANCE),TOLERANCE)){
setResult(TOLERANCE,maxIter);
return TOLERANCE;
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
if(Math.abs(TOLERANCE)>Math.abs(diagMax)){
delta=0.5*TOLERANCE;
}else {
delta=(previousEMin-TOLERANCE)/(1-diagMax/TOLERANCE);
if(offDiagMax/TOLERANCE>1){
delta=0.5*TOLERANCE;
}
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
x0=TOLERANCE;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
y0=TOLERANCE;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
x1=TOLERANCE+offDiagMax;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
if((TOLERANCE>0)==(offDiagMin>0)){
x2=previousEMin;
y2=diagMax;
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
oldDelta=diagMin-TOLERANCE;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
maxIter++;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
if(Math.abs(TOLERANCE)<Math.max(TOLERANCE*Math.abs(TOLERANCE),TOLERANCE)){
setResult(TOLERANCE,maxIter);
return TOLERANCE;
}
if(Math.abs(TOLERANCE)>Math.abs(diagMax)){
delta=0.5*TOLERANCE;
}else {
delta=(previousEMin-TOLERANCE)/(1-diagMax/TOLERANCE);
if(offDiagMax/TOLERANCE>1){
delta=0.5*TOLERANCE;
}
}
x0=TOLERANCE;
y0=TOLERANCE;
x1=TOLERANCE+offDiagMax;
if((TOLERANCE>0)==(offDiagMin>0)){
x2=previousEMin;
y2=diagMax;
}
oldDelta=diagMin-TOLERANCE;
maxIter++;

sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
if(Math.abs(offDiagMin)<=TOLERANCE){
setResult(0.5*(TOLERANCE+previousEMin)-offDiagMax,maxIter);
return TOLERANCE;
}
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
if(offDiagMax>0.0){
if(MathUtils.sign(diagMax)+MathUtils.sign(offDiagMin)==0.0){
x2=0.5*(TOLERANCE+previousEMin)-offDiagMax;
y2=offDiagMin;
}else {
x1=0.5*(TOLERANCE+previousEMin)-offDiagMax;
x2=0.5*(TOLERANCE+previousEMin);
y1=offDiagMin;
y2=diagMin;
}
}else {
if(MathUtils.sign(TOLERANCE)+MathUtils.sign(offDiagMin)==0.0){
x1=0.5*(TOLERANCE+previousEMin)-offDiagMax;
y1=offDiagMin;
}else {
x1=0.5*(TOLERANCE+previousEMin);
x2=0.5*(TOLERANCE+previousEMin)-offDiagMax;
y1=diagMin;
y2=offDiagMin;
}
}
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
if(Math.abs(offDiagMin)<=TOLERANCE){
setResult(0.5*(TOLERANCE+previousEMin)-offDiagMax,maxIter);
return TOLERANCE;
}
if(offDiagMax>0.0){
if(MathUtils.sign(diagMax)+MathUtils.sign(offDiagMin)==0.0){
x2=0.5*(TOLERANCE+previousEMin)-offDiagMax;
y2=offDiagMin;
}else {
x1=0.5*(TOLERANCE+previousEMin)-offDiagMax;
x2=0.5*(TOLERANCE+previousEMin);
y1=offDiagMin;
y2=diagMin;
}
}else {
if(MathUtils.sign(TOLERANCE)+MathUtils.sign(offDiagMin)==0.0){
x1=0.5*(TOLERANCE+previousEMin)-offDiagMax;
y1=offDiagMin;
}else {
x1=0.5*(TOLERANCE+previousEMin);
x2=0.5*(TOLERANCE+previousEMin)-offDiagMax;
y1=diagMin;
y2=offDiagMin;
}
}
maxIter++;

sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(sigmaLow-offDiagMin)<=Math.max(TOLERANCE*Math.abs(offDiagMin),TOLERANCE)){
setResult(offDiagMin,n0);
return TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Math.abs(diagMax)<Math.max(TOLERANCE*Math.abs(offDiagMin),TOLERANCE))||(Math.abs(TOLERANCE)<=Math.abs(TOLERANCE))){
previousEMin=0.5*sigmaLow-offDiagMin;
oldDelta=delta;
}else {
double diagMin=y1/y0;
double TOLERANCE;
double TOLERANCE;
if(TOLERANCE==sigmaLow){
p=dx*r3;
p1=1.0-r3;
}else {
double offDiagMax=y0/TOLERANCE;
double sigma=y1/y2;
p=r3*(dx*r1-(offDiagMin-x0)*(r2-1.0));
p1=(r1-1.0)*(r2-1.0);
}
if(p>0.0){
p1=-p1;
}else {
p=-p;
}
if(2.0*p>=1.5*dx-Math.abs(tolerance*p1)||p>=Math.abs(0.5*oldDelta)){
delta=0.5*dx;
oldDelta=delta;
}else {
oldDelta=delta;
delta=p/p1;
}
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=offDiagMin;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(previousEMin)>Math.max(TOLERANCE*Math.abs(offDiagMin),TOLERANCE)){
offDiagMin=x1+delta;
}else if(sigmaLow-offDiagMin>0.0){
x1=x1+0.5*tolerance;
}else if(dx<=0.0){
x1=x1-0.5*tolerance;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((TOLERANCE>0)==(TOLERANCE>0)){
sigmaLow=TOLERANCE;
y2=TOLERANCE;
previousEMin=offDiagMin-x0;
diagMax=delta;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0++;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
previousEMin=0;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
previousEMin=Math.sqrt(cost);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
v[i]=offDiagMax;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=i0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
f2Integral+=offDiagMax*(TOLERANCE*previousY+previousY*TOLERANCE+currentY*currentY)/3;
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sxy+=TOLERANCE-sigma*TOLERANCE;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sxz+=TOLERANCE-sigma*TOLERANCE;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
f2Integral+=offDiagMax*(TOLERANCE*previousY+previousY*TOLERANCE+currentY*currentY)/3;
sxy+=TOLERANCE-sigma*TOLERANCE;
sxz+=TOLERANCE-sigma*TOLERANCE;

sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((diagMin*TOLERANCE-TOLERANCE*split/TOLERANCE*TOLERANCE-TOLERANCE*split<0.0)||(c2/TOLERANCE*diagMin-TOLERANCE*sxy<0.0)){
throw new OptimizationException("unable to first guess the harmonic coefficients");
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigmaLow=Math.sqrt(diagMin*TOLERANCE-TOLERANCE*split/TOLERANCE*TOLERANCE-TOLERANCE*split);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.sqrt(TOLERANCE*TOLERANCE-TOLERANCE*split/TOLERANCE*diagMin-TOLERANCE*sxy);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=false;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Double.NaN;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
main=new double[offDiagMax];
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondary=new double[offDiagMax-1];
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedV=null;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
cachedVt=null;
cachedV=null;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(objective.length!=offDiagMax){
throw new FunctionEvaluationException(work,"dimension mismatch {0} != {1}",objective.length,rows);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
previousEMin=0;
previousEMin=Math.sqrt(cost);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
i0--;
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
mt[0]=mt[N-1];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[diagMin][0]=minPivot+offDiagMax;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[diagMin][diagMin-1]=TOLERANCE;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==1){
return new double[]{0};
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkBinomial(n0,i0);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i0==1)||(k==n0-1)){
return n;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i0>n0/2){
return binomialCoefficientDouble(n,n-k);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0<67){
return binomialCoefficient(n,i0);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[i0]=previousEMin;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[i0+1]=sigmaLow*offDiagMax-sigma/previousEMin;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
cos=sigma*diagMin;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
cos=1.0/Math.sqrt(1.0+work[i0]/TOLERANCE*tan);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
cachedVt.setEntry(k,maxIter,diagMax);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
cachedVt.setEntry(maxIter,k,diagMax);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
cachedVt.setEntry(k,maxIter,diagMax);
cachedVt.setEntry(maxIter,k,diagMax);

sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
dN1=diagMin*offDiagMax;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
dN1=work[j4p2+2]*(diagMin/work[j4-2]);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
dN=diagMin*offDiagMax;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
dN=work[j4p2+2]*(diagMin/work[j4-2]);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
c[ii][ij]=previousEMin;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
c[ij][ii]=previousEMin;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
c[ii][ij]=previousEMin;
c[ij][ii]=previousEMin;

sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work!=null){
setInterpolatedTime(previousEMin);
}else {
sigmaLow=t;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i0==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
shuffle(getNatural(diagMin),diagMin-i0);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInputArray(work,work);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong+diagMin)>internalArray.length){
expandTo(startIndex+i);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=diagMin;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=i0-1;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(n0>0){
c=polynoms[j][i]+diagMin*offDiagMax;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==n){
return ;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work=new double[diagMin];
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=1.0;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[0]=0.0;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n=diagMin;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=1.0;
work[0]=0.0;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((TOLERANCE>=-sigma)&&(x<=threshold)){
double diagMin=1/Math.sqrt(TOLERANCE*y+TOLERANCE*z);
return new Vector3D(0,inverse*z,-inverse*y);
}else if((y>=-threshold)&&(y<=threshold)){
double inverse=1/Math.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterval(minPivot,offDiagMax);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
outBlock=out.blocks[++outBlockIndex];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
mBlock=matrix.blocks[++mBlockIndex];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n++;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=maxIter;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkBinomial(i0,n0);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n0==1)||(k==i0-1)){
return n;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0>i0/2)return binomialCoefficient(n,n-k);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i0<=61){
int offDiagMax=n-n0+1;
for(int pingPong=1;j<=k;j++){
diagMax=result*i/j;
i++;
}
}else if(n<=66){
int i=n-k+1;
for(int j=1;j<=k;j++){
 final long diagMin=gcd(i,j);
result=(result/(j/d))*(i/d);
i++;
}
}else {
int i=n-k+1;
for(int j=1;j<=k;j++){
 final long d=gcd(i,j);
result=mulAndCheck(result/(j/d),i/d);
i++;
}
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
max+=sigmaLow;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FastFourierTransformer.verifyDataSet(work);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0==1){
new double[f.length][0]=0.0;
return transformed;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n0][0]=0.0;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n0][n0>>1]=2.0*work[n>>1];
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[f.length][0]=0.0;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[f.length][1]=0.5*transformer.transform(new double[n0])[0].getReal();
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax<=0){
throw MathRuntimeException.createIllegalArgumentException("sample size must be positive ({0})",k);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
polynoms[j+4][i]=16*(yMidDots[j][i]+offDiagMax*polynoms[j+2][i]-sigmaLow*polynoms[j][i]);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
mIY=optimaValues[i];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
mIY=Double.NaN;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
optima[i+1]=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
optimaValues[i+1]=previousEMin;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
optima[i+1]=diagMax;
optimaValues[i+1]=previousEMin;

i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
q2=0.5*Math.sqrt(sigma+1.0);
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
q3=diagMin*(ort[2][1]+ort[1][2]);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
q2=0.5*Math.sqrt(sigma+1.0);
q3=diagMin*(ort[2][1]+ort[1][2]);

sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
q3=0.5*Math.sqrt(sigma+1.0);
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
q2=diagMin*(ort[2][1]+ort[1][2]);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
q3=0.5*Math.sqrt(sigma+1.0);
q2=diagMin*(ort[2][1]+ort[1][2]);

sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues=new double[n0];
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new double[n0+1][0]=1.0;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
updateJacobian();
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
try{
RealMatrix new LUDecompositionImpl(MatrixUtils.createRealMatrix(new double[offDiagMax][m])).getSolver().getInverse()=new LUDecompositionImpl(MatrixUtils.createRealMatrix(new double[offDiagMax][m])).getSolver().getInverse();
return inverse.getData();
}catch (InvalidMatrixException ime) {
  throw new EstimationException("unable to compute covariances: singular problem");
}

while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMax<offDiagMin){
 final double previousEMin=z0;
z0=z1;
z1=t;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMin<2*offDiagMax*Math.cos((diagMin+4*Math.PI)/3)--(main[i0]+main[i0+1])/3){
 final double previousEMin=z1;
z1=z2;
z2=t;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[i0]=diagMax;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[i0+1]=offDiagMin;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[i0+2]=2*offDiagMax*Math.cos((diagMin+4*Math.PI)/3)--(main[i0]+main[i0+1])/3;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
x0=previousEMin;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
++i0;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(n0>0){
x0=previousEMin;
++i0;

sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
currentRow[j]=work[i0-1]+(work[i0-1]-previousRow[j-1])/sigmaLow;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.previousEMin=iterationCount;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n0][0]=0.5*(work[0]+f[n0]);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n0][n0>>1]=work[n>>1];
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[f.length][0]=transformer.transform(new double[n0])[0].getReal();
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[f.length][1]=previousEMin;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[f.length][n0]=transformer.transform(new double[n0])[n>>1].getReal();
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigmaLow=(dMin-sigma)/(Double.valueOf(diagMin)).doubleValue();
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[diagMin-1]=1.0;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
minRatioPositions=new ArrayList<Integer>();
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x.length<3){
throw MathRuntimeException.createIllegalArgumentException("{0} points are required, got only {1}",3,x.length);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n0+1][0]=0.0;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n0+1][n0]=0.0;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isRootOK(minPivot,TOLERANCE,solve(new Complex[coefficients.length],new Complex(0.5*(minPivot+TOLERANCE),0.0)))){
setResult(z.getReal(),i0);
return TOLERANCE;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
q0*=1.0/Math.sqrt(diagMin*q0+offDiagMax*q1+sigmaLow*q2+dMin*q3);
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
q1*=1.0/Math.sqrt(diagMin*q0+offDiagMax*q1+sigmaLow*q2+dMin*q3);
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
q0*=1.0/Math.sqrt(diagMin*q0+offDiagMax*q1+sigmaLow*q2+dMin*q3);
q1*=1.0/Math.sqrt(diagMin*q0+offDiagMax*q1+sigmaLow*q2+dMin*q3);

sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
o0[0]=TOLERANCE-0.5*(TOLERANCE*imagEigenvalues[0]*TOLERANCE+work[0]*TOLERANCE+imagEigenvalues[0]*TOLERANCE+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m0[0]);
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
o0[1]=TOLERANCE-0.5*(TOLERANCE*diagMin+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m0[1]);
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
o0[2]=TOLERANCE-0.5*(TOLERANCE*imagEigenvalues[0]*TOLERANCE+work[0]*TOLERANCE+imagEigenvalues[0]*TOLERANCE+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m0[2]);
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
o1[0]=TOLERANCE-0.5*(TOLERANCE*imagEigenvalues[0]*TOLERANCE+work[0]*TOLERANCE+imagEigenvalues[0]*TOLERANCE+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m1[0]);
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
o1[1]=TOLERANCE-0.5*(TOLERANCE*diagMin+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m1[1]);
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
o1[2]=TOLERANCE-0.5*(TOLERANCE*imagEigenvalues[0]*TOLERANCE+work[0]*TOLERANCE+imagEigenvalues[0]*TOLERANCE+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m1[2]);
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
o2[0]=TOLERANCE-0.5*(TOLERANCE*imagEigenvalues[0]*TOLERANCE+work[0]*TOLERANCE+imagEigenvalues[0]*TOLERANCE+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m2[0]);
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
o2[1]=TOLERANCE-0.5*(TOLERANCE*diagMin+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m2[1]);
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
o2[2]=TOLERANCE-0.5*(TOLERANCE*imagEigenvalues[0]*TOLERANCE+work[0]*TOLERANCE+imagEigenvalues[0]*TOLERANCE+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m2[2]);
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
if(Math.abs(previousEMin-sigmaLow)<=TOLERANCE)return new double[3][3];
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
x00=o0[0];
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
x01=o0[1];
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
x02=o0[2];
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
x11=o1[1];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
x12=o1[2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
x20=o2[0];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
x21=o2[1];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
x22=o2[2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
o0[0]=TOLERANCE-0.5*(TOLERANCE*imagEigenvalues[0]*TOLERANCE+work[0]*TOLERANCE+imagEigenvalues[0]*TOLERANCE+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m0[0]);
o0[1]=TOLERANCE-0.5*(TOLERANCE*diagMin+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m0[1]);
o0[2]=TOLERANCE-0.5*(TOLERANCE*imagEigenvalues[0]*TOLERANCE+work[0]*TOLERANCE+imagEigenvalues[0]*TOLERANCE+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m0[2]);
o1[0]=TOLERANCE-0.5*(TOLERANCE*imagEigenvalues[0]*TOLERANCE+work[0]*TOLERANCE+imagEigenvalues[0]*TOLERANCE+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m1[0]);
o1[1]=TOLERANCE-0.5*(TOLERANCE*diagMin+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m1[1]);
o1[2]=TOLERANCE-0.5*(TOLERANCE*imagEigenvalues[0]*TOLERANCE+work[0]*TOLERANCE+imagEigenvalues[0]*TOLERANCE+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m1[2]);
o2[0]=TOLERANCE-0.5*(TOLERANCE*imagEigenvalues[0]*TOLERANCE+work[0]*TOLERANCE+imagEigenvalues[0]*TOLERANCE+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m2[0]);
o2[1]=TOLERANCE-0.5*(TOLERANCE*diagMin+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m2[1]);
o2[2]=TOLERANCE-0.5*(TOLERANCE*imagEigenvalues[0]*TOLERANCE+work[0]*TOLERANCE+imagEigenvalues[0]*TOLERANCE+TOLERANCE*imagEigenvalues[1]*TOLERANCE+work[1]*TOLERANCE+imagEigenvalues[1]*TOLERANCE+TOLERANCE*imagEigenvalues[2]*TOLERANCE+work[2]*TOLERANCE+imagEigenvalues[2]*TOLERANCE-m2[2]);
if(Math.abs(previousEMin-sigmaLow)<=TOLERANCE)return new double[3][3];
x00=o0[0];
x01=o0[1];
x02=o0[2];
x11=o1[1];
x12=o1[2];
x20=o2[0];
x21=o2[1];
x22=o2[2];

sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new CombinedEventsManager().addEventHandler(new EndTimeChecker(TOLERANCE),Double.POSITIVE_INFINITY,Math.ulp(Math.max(Math.abs(TOLERANCE),Math.abs(endTime))),100);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
y=Math.ceil(offDiagMax);
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
nextGaussian=offDiagMax*Math.sin(diagMax);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
nextGaussian=Double.NaN;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=diagMin;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax==0.0&&TOLERANCE==0.0){
return createComplex(0.0,0.0);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax>=0.0){
return createComplex(diagMin,TOLERANCE/(2.0*t));
}else {
return createComplex(Math.abs(imaginary)/(2.0*t),MathUtils.indicator(imaginary)*t);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.sigmaLow=diagMax;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i0>0){
u=-u;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pingPong>0){
v=-v;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==31){
throw MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^31",n0,diagMax);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
cos=sigma*diagMin;
cos=1.0/Math.sqrt(1.0+work[i0]/TOLERANCE*tan);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
q0=0.0;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
q0=Math.sqrt(0.5*(1.0+TOLERANCE/TOLERANCE));
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigmaLow-=offDiagMax-diagMin;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(TOLERANCE)){
throw MathRuntimeException.createIllegalArgumentException("cannot convert infinite value");
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offDiagMax!=0){
diagMax|=0x0010000000000000L;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin&0x8000000000000000L!=0){
diagMax=-m;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
q2=(getA(k,TOLERANCE)/getB(k,TOLERANCE)*qMax)+qMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
++k;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
relativeError=Math.abs(sigma/getA(0,TOLERANCE)/qMax-1.0);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
c=offDiagMin/previousEMin;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
p0=getA(0,TOLERANCE);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
p1=offDiagMin;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
q0=qMax;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
q1=previousEMin;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
++k;
relativeError=Math.abs(sigma/getA(0,TOLERANCE)/qMax-1.0);
c=offDiagMin/previousEMin;
p0=getA(0,TOLERANCE);
p1=offDiagMin;
q0=qMax;
q1=previousEMin;

sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIter){
throw new MaxIterationsExceededException(maxIterations,"Continued fraction convergents failed to converge for value {0}",TOLERANCE);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((maxIter<0)||(k>=diagMin)){
throw MathRuntimeException.createIllegalArgumentException("out of range root of unity index {0} (must be in [{1};{2}])",k,0,omegaCount-1);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
q2=0.0;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
q3=0.0;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
q2=0.0;
q3=0.0;

sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=Math.sqrt(c);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
qMax=1.0/(diagMax+c)*new Vector3D(TOLERANCE*TOLERANCE-TOLERANCE*TOLERANCE,dz1*TOLERANCE-TOLERANCE*dz2,dx1*dy2-dy1*dx2).getX();
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=1.0/(diagMax+c)*new Vector3D(TOLERANCE*TOLERANCE-TOLERANCE*TOLERANCE,dz1*TOLERANCE-TOLERANCE*dz2,dx1*dy2-dy1*dx2).getY();
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
split=1.0/(diagMax+c)*new Vector3D(TOLERANCE*TOLERANCE-TOLERANCE*TOLERANCE,dz1*TOLERANCE-TOLERANCE*dz2,dx1*dy2-dy1*dx2).getZ();
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=Vector3D.dotProduct(new Vector3D(TOLERANCE*TOLERANCE-TOLERANCE*TOLERANCE,dz1*TOLERANCE-TOLERANCE*dz2,dx1*dy2-dy1*dx2),k);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(knots.length-1!=polynomials.length){
throw MathRuntimeException.createIllegalArgumentException("number of polynomial interpolants must match the number of segments ({0} != {1} - 1)",polynomials.length,knots.length);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isStrictlyIncreasing(work)){
throw MathRuntimeException.createIllegalArgumentException("knot values must be strictly increasing");
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.maxIter=knots.length-1;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.work=new double[maxIter+1];
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,this.knots,0,maxIter+1);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
setResult(sigmaLow,1);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=BLOCK_SIZE;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
int offDiagMax=i0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isNaN()){
new ArrayList<Complex>().add(Complex.NaN);
return result;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isInfinite()){
new ArrayList<Complex>().add(Complex.INF);
return result;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.i0=(maxIter<=0)?2:maxNumIter;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.i0=(n<=0)?1:maxNumChecks;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=pingPong;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=diagMin;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
ret=Math.exp(split+dMin-sigma);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs((long)Math.floor(diagMax)-TOLERANCE)<TOLERANCE){
this.previousEMin=(int)a0;
this.pingPong=1;
return ;
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(k>=maxIter){
throw new FractionConversionException(TOLERANCE,maxIterations);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
setResult(previousEMin,0);
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.i0=maxIter;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
throw MathRuntimeException.createIllegalArgumentException("cutoff singular value is {0}, should be at most {1}",maxIter,work[0]);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getVT().walkInOptimizedOrder(new DefaultRealMatrixPreservingVisitor(){
  /** 
 * {@inheritDoc} 
 */
  @Override public void visit(  final int row,  final int column,  final double value){
    data[row][column]=value / singularValues[row];
  }
}
,0,diagMin-1,0,offDiagMax-1);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0|=mask>>1;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0|=mask>>2;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0|=mask>>4;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0|=mask>>8;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0|=mask>>16;
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i0==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
shuffle(getNatural(diagMin),diagMin-i0);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
int offDiagMax=BLOCK_SIZE;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n==0){
previousEMin=Double.NaN;
}else if(n==1){
variance=0.0;
}else {
variance=diagMin/(n-1);
}
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(i0);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(i0+offDiagMax-1);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(i0);
checkIndex(i0+offDiagMax-1);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new StringBuffer().append('(');
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuffer().append(TOLERANCE);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuffer().append(')');
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuffer().append('(');
new StringBuffer().append(TOLERANCE);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuffer().append('(');
new StringBuffer().append(')');
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuffer().append(TOLERANCE);
new StringBuffer().append(')');
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuffer().append('(');
new StringBuffer().append(TOLERANCE);
new StringBuffer().append(')');
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
verifySequence(minPivot,TOLERANCE,TOLERANCE);
while(n0>0){
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;
int maxIter=30*(n0-i0);
for(int k=0;i0<n0;++k){
if(k>=maxIter){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
n0=goodStep(i0,n0);
pingPong=1-pingPong;
if((pingPong==0)&&(n0-i0>3)){
int split=i0-1;
diagMax=work[4*i0];
offDiagMin=work[4*i0+2];
double previousEMin=work[4*i0+3];
for(int i=4*i0;i<4*n0-11;i+=4){
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
work[i+2]=-sigma;
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];
}else {
diagMax=Math.max(diagMax,work[i+4]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
previousEMin=Math.min(previousEMin,work[i+3]);
}
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,859
========
if(i0>=n){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=goodStep(i0,n0);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n0-5]>work[nn-7]){
return ;
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=n0-9;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n0-9]>work[nn-11]){
return ;
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=n0-13;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0=i0-2*n;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=work[n0-2];
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n0-4]>work[np-2]){
return ;
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i0]>work[i4-2]){
return ;
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=a2+sigma;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=b2+sigma;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==null)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
int offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==0){
return ;
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initialSplits(n);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=0;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sumOffDiag==0){
return ;
}
initialSplits(n);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
flipIfWarranted(n,2);
initialSplits(n);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(m==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
int offDiagMin=(i0==n)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i0]>work[i4-2]){
return ;
}
offDiagMin=a2+sigma;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedV=MatrixUtils.createRealMatrix(n0,n);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math.linear.EigenDecompositionImpl,860
org.apache.commons.math.linear.EigenDecompositionImpl,863
========
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sigmaLow=pingPong;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i0>=n0){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0=goodStep(i0,n0);
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n0=goodStep(i0,n0);
sigmaLow=pingPong;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[n0-5]>work[nn-7]){
return ;
}
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=n0-9;
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[n0-9]>work[nn-11]){
return ;
}
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=n0-13;
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n0=i0-2*pingPong;
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offDiagMin=work[n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n0-4]>work[np-2]){
return ;
}
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=i0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=n0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
int offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i0-2*n0-8]>offDiagMax||work[np-4]>sigmaLow){
return ;
}
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
int offDiagMax=n0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n0]>work[i4-2]){
return ;
}
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=a2+sigmaLow;
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=b2+sigmaLow;
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sigmaLow>0.0&&gap2>TOLERANCE*dMin2/(1+TOLERANCE*b2)){
offDiagMin=Math.max(TOLERANCE,a2*(1-TOLERANCE*a2));
}else {
tau=Math.max(s,a2*(1-cnst2*b2));
}
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n0]>work[i4-2]){
return ;
}
offDiagMin=a2+sigmaLow;
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,864
========
sigma=(n0==n)?0:-work[4*n0-2];
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double offDiagMin=(i0==n0)?0:work[4*n0-6];
if(work[n0-8]>TOLERANCE||work[np-4]>TOLERANCE){
return ;
}
double offDiagMax=0;
double diagMax=work[4*n0-4];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=n0;
double diagMax=work[4*n0-4];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double offDiagMin=(i0==n0)?0:work[4*n0-6];
int offDiagMax=0;
double diagMax=work[4*n0-4];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMin>0.0&&gap2>TOLERANCE*dMin2/(1+TOLERANCE*b2)){
diagMax=Math.max(TOLERANCE,a2*(1-TOLERANCE*a2));
}else {
tau=Math.max(s,a2*(1-cnst2*b2));
}
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;
double diagMax=work[4*n0-4];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,865
========
double offDiagMax=(n0==n0)?0:0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sigmaLow=0;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sigmaLow=0;
double offDiagMax=(n0==n0)?0:0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double offDiagMax=n0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=diagMax;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=-Math.max(0,eMin-2*Math.sqrt(diagMin*offDiagMax));
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pingPong=0;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
pingPong=0;
double offDiagMax=n0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double offDiagMax=i0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
diagMin=work[4*i0];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=work[4*i0+2];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offDiagMax=i0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
progressiveQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,TOLERANCE);
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offDiagMax=n0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
progressiveQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,TOLERANCE);
double offDiagMax=n0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
progressiveQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,TOLERANCE);
int offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
progressiveQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,TOLERANCE);
int offDiagMax=n0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=pingPong;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=dMin;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double offDiagMax=n0;
double diagMax=work[4*n0-4];
double diagMin=dMin;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offDiagMax=pingPong;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=pingPong;
double diagMax=work[4*n0-4];
double diagMin=dMin;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=dMin;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offDiagMax=n0;
double diagMax=work[4*n0-4];
double diagMin=dMin;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offDiagMax=pingPong;
double diagMax=work[4*n0-4];
double diagMin=dMin;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=b1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
if(work[i0-5]>work[nn-7]){
return ;
}
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tau=0;
int offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=diagMax;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*(n0-2)-pingPong-1-2]=dN2+work[4*(n0-2)-pingPong-1+2*pingPong-1];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*(n0-2)-pingPong-1-2]=dN2+work[4*(n0-2)-pingPong-1+2*pingPong-1];
double offDiagMax=n0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*(n0-2)-pingPong-1-2]=dN2+work[4*(n0-2)-pingPong-1+2*pingPong-1];
double offDiagMax=pingPong;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4*(n0-2)-pingPong-1-2]=dN2+work[4*(n0-2)-pingPong-1+2*pingPong-1];
int offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*(n0-2)-pingPong-1-2]=dN2+work[4*(n0-2)-pingPong-1+2*pingPong-1];
int offDiagMax=n0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*(n0-2)-pingPong-1-2]=dN2+work[4*(n0-2)-pingPong-1+2*pingPong-1];
int offDiagMax=pingPong;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=dCurrent;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=eCurrent;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
offDiagMax=Math.min(lowerSpectra,lowerSpectra);
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[n0+i0-1]=diagMax;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=MathUtils.SAFE_MIN*Math.max(1.0,eMin*eMax);
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=tau;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=work[4*i0+pingPong+4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=diagMax;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=-work[4*i0+pingPong];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0-2]=dN2+work[i0+2*n0-1];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[i0]=work[i0+2*n0-1+2]*(work[j4p2]/work[j4-2]);
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=work[i0+2*n0-1+2]*(dN2/work[i0-2])-tau;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=Math.min(dMin,offDiagMax);
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0-2]=dN2+work[i0+2*n0-1];
double offDiagMax=i0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[i0-2]=dN2+work[i0+2*n0-1];
double offDiagMax=n0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[i0-2]=dN2+work[i0+2*n0-1];
int offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0-2]=dN2+work[i0+2*n0-1];
int offDiagMax=i0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0-2]=dN2+work[i0+2*n0-1];
int offDiagMax=n0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=a2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax>0.0&&gap2>TOLERANCE*dMin2/(1+TOLERANCE*b2)){
diagMin=Math.max(TOLERANCE,a2*(1-TOLERANCE*a2));
}else {
tau=Math.max(s,a2*(1-cnst2*b2));
}
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=di;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=li;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=pi;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diP1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[3]=TOLERANCE;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[4]=TOLERANCE;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[3]=TOLERANCE;
work[4]=TOLERANCE;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=si;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[6*n+1]=imagEigenvalues[nM1]+TOLERANCE;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[6*n]=TOLERANCE;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
work[6*n]=TOLERANCE;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=di;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[6*n]=TOLERANCE;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=li;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[6*n]=TOLERANCE;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diP1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=t;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=ePrevious;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n0+i0]=diagMax;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(lowerSpectra,diagMax);
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
if(work[i0-5]>work[nn-7]){
return ;
}
double diagMin=b1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=cos;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=rik;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=sin;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
work[i0]=TOLERANCE;
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
double diagMin=cos;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
work[i0]=TOLERANCE;
double diagMin=cos;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
double diagMin=rik;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
work[i0]=TOLERANCE;
double diagMin=rik;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
double diagMin=sin;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
work[i0]=TOLERANCE;
double diagMin=sin;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
work[i0]=TOLERANCE;
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
work[i0]=TOLERANCE;
double diagMin=cos;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
work[i0]=TOLERANCE;
double diagMin=rik;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
work[i0]=TOLERANCE;
double diagMin=sin;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,866
========
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=4*(n0-2);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=4*i0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double diagMax=work[4*n0-4];
double diagMin=diagMax;
if(n0>=n){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pingPong=1-pingPong;
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double diagMax=work[4*n0-4];
progressiveQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,TOLERANCE);
double diagMin=diagMax;
i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double diagMax=work[4*n0-4];
double diagMin=diagMax;
n=n0-2*pingPong;
i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double diagMax=work[4*n0-4];
double diagMin=diagMax;
diagMin=work[n-2];
i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(work[n-4]>work[np-2]){
return ;
}
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=n0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
double diagMax=work[4*n0-4];
double diagMin=diagMax;
if(work[n0-5]>work[nn-7]){
return ;
}
i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double diagMax=work[4*n0-4];
double diagMin=diagMax;
diagMin=work[n0-5]/work[nn-7];
i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double diagMax=work[4*n0-4];
double diagMin=diagMax;
if(work[n0-9]>work[nn-11]){
return ;
}
i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double diagMax=work[4*n0-4];
double diagMin=diagMax;
diagMin=work[n0-9]/work[nn-11];
i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double diagMax=work[4*n0-4];
double diagMin=diagMax;
diagMin=diagMax;
i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double diagMax=work[4*n0-4];
double diagMin=diagMax;
n=j4+4;
i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-2]=dN1+work[i0];
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
  - org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
double diagMax=work[4*n0-4];
double diagMin=diagMax;
diagMin=diagMax;
i0=n0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
work[n-2]=dN1+work[i0];
double diagMax=work[4*n0-4];
double diagMin=diagMax;
i0=n0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COUNT THESE===> Subject [_name=math, _id=81, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.linear.EigenDecompositionImplTest testMath308
TESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_60_5/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
Timeout!
